
R version 3.4.2 (2017-09-28) -- "Short Summer"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> DATA = Theoph
> colnames(DATA) = c("ID", "BWT", "DOSE", "TIME", "DV")
> DATA[,"ID"] = as.numeric(as.character(DATA[,"ID"]))
> 
> require(lattice)
Loading required package: lattice
> xyplot(DV ~ TIME | as.factor(ID), data=DATA, type="b")
> 
> ## INIT STEP
> IDs = unique(DATA[,"ID"]) ; IDs
 [1]  1  2  3  4  5  6  7  8  9 10 11 12
> nID = length(IDs) ; nID
[1] 12
> 
> nTheta = 3
> nEta = 3
> nEps = 2
> nPara = nTheta + nEta*(nEta + 1)/2 + nEps ; nPara
[1] 11
> 
> GNames = outer("G", 1:nEta, paste0)[1,] ; GNames
[1] "G1" "G2" "G3"
> HNames = outer("H", 1:nEps, paste0)[1,] ; HNames
[1] "H1" "H2"
> 
> iOM = (nTheta + 1):(nTheta + nEta*(nEta + 1)/2) ; iOM
[1] 4 5 6 7 8 9
> iSG = (nTheta + nEta*(nEta + 1)/2 + 1):(nTheta + nEta*(nEta + 1)/2 + nEps) ; iSG
[1] 10 11
> 
> IE = c(2, 50, 0.1)
> LB = c(0.2, 5, 0.01)
> UB = c(10, 100, 1)
> 
> alpha = 0.1 - log((IE - LB)/(UB - LB)/(1 - (IE - LB)/(UB - LB)))
> 
> p0 = rep(0.1, nTheta)
> p1 = exp(p0 - alpha)
> p2 = p1/(p1 + 1)*(UB - LB) + LB ; p2
[1]  2.0 50.0  0.1
> 
> OM0 = matrix(c(0.2, 0.1, 0.1, 0.1, 0.2, 0.1, 0.1, 0.1, 0.2), nrow=nEta) ; OM0
     [,1] [,2] [,3]
[1,]  0.2  0.1  0.1
[2,]  0.1  0.2  0.1
[3,]  0.1  0.1  0.2
> SG0 = diag(c(0.1, 0.1)) ; SG0
     [,1] [,2]
[1,]  0.1  0.0
[2,]  0.0  0.1
> 
> EXPP1 = exp(0.1)
> ScaleVar = function(VarMat, dim1)
+ {
+   M1 = chol(VarMat)
+   V1 = diag(M1)
+   M2 = abs(10 * (M1 - diag(V1, nrow=dim1))) + diag(V1/EXPP1, nrow=dim1)
+   return(t(M2))
+ }
> 
> OMscl = ScaleVar(OM0, nEta) ; OMscl
          [,1]     [,2]      [,3]
[1,] 0.4046556 0.000000 0.0000000
[2,] 2.2360680 0.350442 0.0000000
[3,] 2.2360680 1.290994 0.3303999
> SGscl = ScaleVar(SG0, nEps) ; SGscl
          [,1]      [,2]
[1,] 0.2861347 0.0000000
[2,] 0.0000000 0.2861347
> 
> DesclVar = function(mUCP, mSCL)
+ {
+   nRow = dim(mUCP)[1]
+   maT = matrix(nrow=nRow, ncol=nRow)
+ 
+   for (i in 1:nRow) {
+     for (j in 1:nRow) {
+       if (i==j) {
+         maT[i,j] = exp(mUCP[i,j]) * mSCL[i,j]
+       } else if(i > j) {
+         maT[i,j] = mUCP[i,j] * mSCL[i,j]
+       } else {
+         maT[i,j] = 0
+       }
+     }
+   }
+   return(maT %*% t(maT))
+ }
> 
> DesclVar(matrix(rep(0.1, nEta*nEta), nrow=nEta), OMscl)
     [,1] [,2] [,3]
[1,]  0.2  0.1  0.1
[2,]  0.1  0.2  0.1
[3,]  0.1  0.1  0.2
> DesclVar(diag(rep(0.1, nEps)), SGscl)
     [,1] [,2]
[1,]  0.1  0.0
[2,]  0.0  0.1
> 
> ltv2mat = function(vec)
+ {
+   LENGTH = length(vec)
+   DIM = round((sqrt(8*LENGTH+1)-1)/2,0)
+   if (DIM*(DIM+1)/2 != LENGTH) return(NULL)
+   mat = matrix(nrow=DIM, ncol=DIM)
+   for (m in 1:DIM) {
+     for (n in 1:DIM) {
+       k = max(m,n)
+       l = min(m,n)
+       p = k*(k - 1)/2 + l
+       mat[m,n] = vec[p]
+     }
+   }
+   return(mat)
+ }
> 
> s2o = function(p)
+ {
+   p0 = p[1:nTheta]
+   p1 = exp(p0 - alpha)
+   p2 = p1/(p1 + 1)*(UB - LB) + LB
+   OM = DesclVar(ltv2mat(p[iOM]), OMscl)
+   SG = DesclVar(diag(p[iSG]), SGscl)
+   Res = list(p2, OM, SG)
+   names(Res) = c("THETA", "OMEGA", "SIGMA")
+   return(Res)
+ }
> s2o(rep(0.1, nPara))
$THETA
[1]  2.0 50.0  0.1

$OMEGA
     [,1] [,2] [,3]
[1,]  0.2  0.1  0.1
[2,]  0.1  0.2  0.1
[3,]  0.1  0.1  0.2

$SIGMA
     [,1] [,2]
[1,]  0.1  0.0
[2,]  0.0  0.1

> 
> ## EST STEP
> FGD = deriv(~DOSE/(TH2*exp(ETA2))*TH1*exp(ETA1)/(TH1*exp(ETA1) - TH3*exp(ETA3))*(exp(-TH3*exp(ETA3)*TIME)-exp(-TH1*exp(ETA1)*TIME)),
+             c("ETA1","ETA2","ETA3"),
+             function.arg=c("TH1", "TH2", "TH3", "ETA1", "ETA2", "ETA3", "DOSE", "TIME"),
+             func=TRUE, hessian=TRUE)
> H = deriv(~F + F*EPS1 + EPS2, c("EPS1", "EPS2"), function.arg=c("F", "EPS1", "EPS2"), func=TRUE)
> 
> PRED = function(THETA, ETA)
+ {
+ # External: DATA[,c("ID", "TIME")], cID
+   FGDres = FGD(THETA[1], THETA[2], THETA[3], ETA[1], ETA[2], ETA[3], DOSE=320, DATA[DATA$ID==cID,"TIME"])
+   Gres = attr(FGDres, "gradient")
+   Hres = attr(H(FGDres, 0, 0), "gradient")
+   Dres = attr(FGDres, "hessian")
+   Res = cbind(FGDres, Gres, Hres, Dres[,1,1], Dres[,2,1], Dres[,2,2], Dres[,3,])
+   colnames(Res) = c("F", "G1", "G2", "G3", "H1", "H2", "D11", "D21", "D22", "D31", "D32", "D33")
+   return(Res)
+ }
> 
> ObjEta = function(ETA)
+ {
+ # External: THETA, invOM, SG, cID, DATA[,"DV"]
+   FGH = PRED(THETA, ETA)
+   Hi  = FGH[, HNames, drop=FALSE] # always INTER==TRUE
+   Ri  = DATA[DATA$ID == cID, "DV"] - FGH[,"F"]
+ 
+ ## Slower version
+ #  Vi = diag(diag(Hi %*% SG %*% t(Hi)))
+ #  iSum = log(det(Vi)) + t(Ri) %*% solve(Vi) %*% Ri + t(ETA) %*% invOM %*% ETA
+ 
+ ## Faster version
+   Vi    = diag(Hi %*% SG %*% t(Hi))
+   return(sum(log(Vi) + Ri*Ri/Vi) + t(ETA) %*% invOM %*% ETA)
+ }
> 
> EBE = cbind(ID = IDs, ETA1=0, ETA2=0, ETA3=0, Oi=0)
> 
> ## Preliminary fittting
> OBJ2a = function(p)
+ {
+ # External: DATA, nTheta, nEta, nEps
+   if (STEP == "EST") {
+     r     = s2o(p[1:nPara])
+     THETA <<- r$THETA      # for ObjEta
+     OM    = r$OMEGA
+     SG    <<- r$SIGMA      # for ObjEta
+   } else {
+     THETA <<- p[1:nTheta]  # for ObjEta
+     OM    = ltv2mat(p[iOM])
+     SG    <<- diag(p[iSG]) # for ObjEta
+   }
+   invOM <<- solve(OM)      # for ObjEta
+   Term3 = determinant(OM, logarithm=TRUE)$modulus[[1]]
+ 
+   for (i in 1:nID) {
+     cID <<- IDs[i] # for PRED
+     ETA   = p[(nPara + (i - 1)*nEta + 1):(nPara + i*nEta)]
+     FGHDi = PRED(THETA, ETA)
+     Gi    = FGHDi[, GNames, drop=FALSE]
+     Hi    = FGHDi[, HNames, drop=FALSE] # always INTER==TRUE
+     D11   = FGHDi[, "D11"]
+     D21   = FGHDi[, "D21"]
+     D22   = FGHDi[, "D22"]
+     D31   = FGHDi[, "D31"]
+     D32   = FGHDi[, "D32"]
+     D33   = FGHDi[, "D33"]
+     Ri    = DATA[DATA$ID == cID, "DV"] - FGHDi[,"F"]
+     Vi    = diag(Hi %*% SG %*% t(Hi))
+     Hsum  = invOM + t(Gi) %*% solve(diag(Vi)) %*% Gi
+     EBE[i, 2:(1+nEta)] <<- ETA
+     EBE[i, (2+nEta)] <<-  sum(log(Vi) + Ri*Ri/Vi) + t(ETA) %*% invOM %*% ETA + Term3 + determinant(Hsum, logarithm=TRUE)$modulus[[1]]
+   }
+   return(sum(EBE[,5]))
+ }
> STEP = "EST"
> OBJ2a(c(rep(0.1, nPara), rep(0, nEta*nID)))
[1] 704.6327
> 
> StartTime = Sys.time()
> r0 = optim(c(rep(0.1, nPara), rep(0, nEta*nID)), OBJ2a, method="L-BFGS-B")
> difftime(Sys.time(), StartTime)
Time difference of 27.78753 secs
> r0
$par
 [1] -0.299129824 -0.693305348 -0.066467812  0.474043180  0.037596199 -1.144134250 -0.003998964  0.085532827 -1.274798050 -0.768763511 -0.027352885 -0.089411796
[13] -0.185681901 -0.293387710  0.340370258  0.054626492  0.049015200  0.425694591  0.044904129 -0.013441303 -0.334659360 -0.040919527  0.014600779 -0.024453549
[25] -0.111671454 -0.089932359 -0.459519582  0.144384879  0.222346649 -0.848226600  0.007711974  0.139087492 -0.053602455  0.075572703  0.071114772  1.362632440
[37]  0.178768536 -0.014266837 -0.700372782 -0.211777004 -0.152624376  0.889408390  0.177996754  0.077069504 -0.498413492 -0.139781935 -0.018243083

$value
[1] 92.15124

$counts
function gradient 
     115      115 

$convergence
[1] 1

$message
[1] "NEW_X"

> OBJ2a(r0$par)
[1] 92.15124
> ### END of Preliminary fitting
> 
> OBJ2 = function(p)
+ {
+ # External: DATA, nTheta, nEta, nEps
+   if (STEP == "EST") {
+     r     = s2o(p)
+     THETA <<- r$THETA      # for ObjEta
+     OM    = r$OMEGA
+     SG    <<- r$SIGMA      # for ObjEta
+   } else {
+     THETA <<- p[1:nTheta]  # for ObjEta
+     OM    = ltv2mat(p[iOM])
+     SG    <<- diag(p[iSG]) # for ObjEta
+   }
+   invOM <<- solve(OM)      # for ObjEta
+   Term3 = determinant(OM, logarithm=TRUE)$modulus[[1]]
+   for (i in 1:nID)  {
+     cID  <<- i                              # for PRED
+     Yi    = DATA[DATA$ID == cID, "DV"]
+     TIME  = DATA[DATA$ID == cID, "TIME"]
+     Res   = optim(EBE[i,2:(nEta+1)], ObjEta, method="BFGS")
+     FGHDi = PRED(THETA, Res$par)
+     Fi    = FGHDi[, "F"]
+     Gi    = FGHDi[, GNames, drop=FALSE]
+     Hi    = FGHDi[, HNames, drop=FALSE]
+     D11   = FGHDi[, "D11"]
+     D21   = FGHDi[, "D21"]
+     D22   = FGHDi[, "D22"]
+     D31   = FGHDi[, "D31"]
+     D32   = FGHDi[, "D32"]
+     D33   = FGHDi[, "D33"]
+     Vi    = diag(Hi %*% SG %*% t(Hi))
+     Hsum  = invOM
+     for (j in 1:length(TIME)) {
+       Dij  = matrix(c(D11[j], D21[j], D31[j], D21[j], D22[j], D32[j], D31[j], D32[j], D33[j]), nrow=3)
+       Hsum = Hsum + (Gi[j,] %*% t(Gi[j,]) - (Yi[j] - Fi[j])*Dij)/Vi[j]
+     }
+ 
+     EBE[i, 2:4] <<- Res$par
+     EBE[i, 5] <<-  Res$value + Term3 + determinant(Hsum, logarithm=TRUE)$modulus[[1]]
+   }
+   return(sum(EBE[,5]))
+ }
> STEP = "EST"
> OBJ2(r0$par[1:nPara]) ; EBE
[1] 93.73714
      ID        ETA1         ETA2        ETA3        Oi
 [1,]  1 -0.09543195 -0.187331706 -0.28958660 20.087421
 [2,]  2  0.32831658  0.051848211  0.05131758 17.723775
 [3,]  3  0.41191039  0.042238658 -0.01069153 -1.254441
 [4,]  4 -0.34157563 -0.042766313  0.01642110  9.444721
 [5,]  5 -0.03309006 -0.114024390 -0.08699728 20.359790
 [6,]  6 -0.46168422  0.143670314  0.22186852  4.082607
 [7,]  7 -0.85196351  0.006423628  0.13980729  1.361105
 [8,]  8 -0.05666701  0.074539067  0.07128616  3.893063
 [9,]  9  1.32715900  0.174635489 -0.01002113  3.601923
[10,] 10 -0.70670762 -0.213521416 -0.15097286  4.832433
[11,] 11  0.86348161  0.173857684  0.08055610 -2.216612
[12,] 12 -0.50158203 -0.141276923 -0.01708747 11.821359
> 
> StartTime = Sys.time()
> r0 = optim(r0$par[1:nPara], OBJ2, method="L-BFGS-B")
> difftime(Sys.time(), StartTime)
Time difference of 1.567821 mins
> r0
$par
 [1] -0.290556010 -0.698404226 -0.059909635  0.473328459  0.037433804 -1.178893970 -0.003161618  0.091287885 -1.407598813 -0.767769261 -0.026690244

$value
[1] 93.69494

$counts
function gradient 
      40       40 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> OBJ2(r0$par)
[1] 93.69494
> 
> r1 = s2o(r0$par) ; r1
$THETA
[1]  1.49492430 32.38635839  0.08774433

$OMEGA
             [,1]       [,2]         [,3]
[1,]  0.421986906 0.05437490 -0.004592443
[2,]  0.054374897 0.01862784  0.012113006
[3,] -0.004592443 0.01211301  0.020477262

$SIGMA
           [,1]       [,2]
[1,] 0.01763052 0.00000000
[2,] 0.00000000 0.07761725

> 
> ## COV STEP
> STEP = "COV"
> p = c(r1$THETA, r1$OMEGA[upper.tri(r1$OMEGA, diag=TRUE)], diag(r1$SIGMA))
> OBJ2(p)
[1] 93.69494
> 
> require(numDeriv)
Loading required package: numDeriv
> Rmat = hessian(OBJ2, p)/2 ; Rmat
             [,1]         [,2]        [,3]         [,4]         [,5]        [,6]         [,7]         [,8]         [,9]       [,10]         [,11]
 [1,]  19.0589876  -2.27286140   222.65771   -0.5747289   -11.851066    30.34170    20.154409     3.679979    -5.007784   109.41648    2.60902295
 [2,]  -2.2728614   0.69549449   -34.59380   -0.4430880     6.113428   -11.44674    -2.312428     3.985096     3.209577   -26.10405   -0.01801195
 [3,] 222.6577095 -34.59379875 42652.56145  156.8473096 -1577.475724  2707.86939   831.105190  -430.136804  -951.895388  2269.20566   45.96710756
 [4,]  -0.5747289  -0.44308804   156.84731   71.3213625  -364.804091   402.04422   145.289228  -175.879003    70.456171   183.22518   41.38108405
 [5,] -11.8510661   6.11342835 -1577.47572 -364.8040906  3277.627149 -5294.05824  -140.583352  2224.263303  -368.187888 -1609.07575 -138.11953786
 [6,]  30.3416993 -11.44673647  2707.86939  402.0442187 -5294.058235 17991.57490   328.031016 -2569.264191   748.969967  6237.92443 1053.55880637
 [7,]  20.1544095  -2.31242754   831.10519  145.2892284  -140.583352   328.03102 -7266.513497   505.401498  2012.915410  2125.85126 1408.52536276
 [8,]   3.6799785   3.98509584  -430.13680 -175.8790033  2224.263303 -2569.26419   505.401498 17586.563551 -2481.327156 -6279.51051 -414.55240421
 [9,]  -5.0077836   3.20957737  -951.89539   70.4561705  -368.187888   748.96997  2012.915410 -2481.327156  5009.229946  3269.62952  605.08535566
[10,] 109.4164782 -26.10404790  2269.20566  183.2251811 -1609.075753  6237.92443  2125.851264 -6279.510514  3269.629524 86592.53003 6945.97084640
[11,]   2.6090229  -0.01801195    45.96711   41.3810841  -138.119538  1053.55881  1408.525363  -414.552404   605.085356  6945.97085  894.97580896
> 
> OiS2 = function(p)
+ {
+   THETA <<- p[1:nTheta]    # for ObjEta
+   OM    = ltv2mat(p[iOM])
+   invOM <<- solve(OM)      # for ObjEta
+   SG    <<- diag(p[iSG])   # for ObjEta
+   TIME  = DATA[DATA$ID == cID, "TIME"]
+   Yi    = DATA[DATA$ID == cID, "DV"]
+   Res   = optim(EBE[EBE[,"ID"]==cID, 2:(nEta+1)], ObjEta, method="BFGS")
+   FGHDi = PRED(THETA, Res$par)
+   Fi    = FGHDi[, "F"]
+   Gi    = FGHDi[, GNames, drop=FALSE]
+   Hi    = FGHDi[, HNames, drop=FALSE]
+   D11   = FGHDi[, "D11"]
+   D21   = FGHDi[, "D21"]
+   D22   = FGHDi[, "D22"]
+   D31   = FGHDi[, "D31"]
+   D32   = FGHDi[, "D32"]
+   D33   = FGHDi[, "D33"]
+   Vi    = diag(Hi %*% SG %*% t(Hi))
+ 
+   Hsum  = invOM
+   for (j in 1:length(TIME)) {
+     Dij = matrix(c(D11[j], D21[j], D31[j], D21[j], D22[j], D32[j], D31[j], D32[j], D33[j]), nrow=3)
+     Hsum = Hsum + (Gi[j,] %*% t(Gi[j,]) - (Yi[j] - Fi[j])*Dij)/Vi[j]
+   }
+   return(Res$value + determinant(OM, logarithm=TRUE)$modulus[[1]] + determinant(Hsum, logarithm=TRUE)$modulus[[1]])
+ }
> 
> CalcSmat = function(p)
+ {
+   Smat = matrix(rep(0, nPara*nPara), nrow=nPara, ncol=nPara)
+   for (i in 1:nID) {
+     cID <<- i                    # for ObjEta
+     gr = grad(OiS2, p)
+     Smat = Smat + gr %*% t(gr)
+   }
+   return(Smat/4)
+ }
> 
> Smat = CalcSmat(p) ; Smat
             [,1]         [,2]         [,3]        [,4]        [,5]        [,6]        [,7]         [,8]         [,9]       [,10]        [,11]
 [1,]   18.655845   -2.0860713    189.92960   -4.171439   148.08088  -315.22655    66.09478    -72.58638    -32.93249    249.8415   -39.033073
 [2,]   -2.086071    0.6892472    -30.94515    3.029398   -24.55780    21.68384   -31.66907     46.80344     -9.20111   -174.7074    -9.215292
 [3,]  189.929601  -30.9451486  41501.64989  297.833694 -2603.04405  9825.85403  1528.91371  -7015.15404 -15183.76676  37819.0070 -6287.145506
 [4,]   -4.171439    3.0293980    297.83369   47.457080  -224.09994   307.96532   -46.15821    224.89314   -231.21150   -662.3211  -153.116332
 [5,]  148.080875  -24.5577985  -2603.04405 -224.099945  2882.36212 -6466.98276  -411.37136     68.04648    928.37751  -6272.2564   157.524145
 [6,] -315.226552   21.6838436   9825.85403  307.965320 -6466.98276 20030.60464  2815.49723  -4736.94854  -2154.56290  23721.3946   -16.759493
 [7,]   66.094775  -31.6690683   1528.91371  -46.158208  -411.37136  2815.49723  5833.14316  -2819.90085    544.29026  23858.6761   344.110534
 [8,]  -72.586375   46.8034435  -7015.15404  224.893135    68.04648 -4736.94854 -2819.90085   8214.03010   -904.63729 -29471.1421 -1802.586836
 [9,]  -32.932485   -9.2011099 -15183.76676 -231.211499   928.37751 -2154.56290   544.29026   -904.63729   9117.63039   1588.4354  4782.048789
[10,]  249.841538 -174.7073512  37819.00702 -662.321113 -6272.25643 23721.39463 23858.67611 -29471.14214   1588.43540 278535.4047  9654.214274
[11,]  -39.033073   -9.2152924  -6287.14551 -153.116332   157.52414   -16.75949   344.11053  -1802.58684   4782.04879   9654.2143  3036.330592
> invR = solve(Rmat) ; invR
               [,1]          [,2]          [,3]          [,4]          [,5]          [,6]          [,7]          [,8]          [,9]         [,10]         [,11]
 [1,]  8.926160e-02  0.2827017218 -2.522390e-04  4.614800e-03  3.903035e-04  1.009629e-04  3.750635e-05 -1.148407e-04 -1.984929e-04  1.837863e-05 -6.342234e-04
 [2,]  2.827017e-01  2.4395928771  3.435898e-04  1.491699e-02 -4.133088e-04  6.999931e-04 -1.033852e-03 -2.584579e-04 -9.938063e-04  8.981982e-04 -7.161910e-03
 [3,] -2.522390e-04  0.0003435898  2.552647e-05 -6.324835e-06  1.111581e-05  2.793652e-07  1.778673e-06 -2.220256e-07  5.146704e-06  3.230501e-07 -7.778780e-06
 [4,]  4.614800e-03  0.0149169948 -6.324835e-06  4.559777e-02  7.215513e-03  1.250670e-03 -7.682494e-05 -2.780040e-04 -1.566783e-05  3.374025e-04 -5.095737e-03
 [5,]  3.903035e-04 -0.0004133088  1.111581e-05  7.215513e-03  1.793880e-03  3.865584e-04 -4.292813e-05 -9.451581e-05  2.442607e-05  6.146340e-05 -9.833045e-04
 [6,]  1.009629e-04  0.0006999931  2.793652e-07  1.250670e-03  3.865584e-04  1.503243e-04 -2.097571e-05 -1.334559e-05  1.300363e-05  1.447806e-05 -2.697526e-04
 [7,]  3.750635e-05 -0.0010338525  1.778673e-06 -7.682494e-05 -4.292813e-05 -2.097571e-05 -7.909776e-05  5.140123e-06  1.285924e-05 -2.356934e-05  3.224935e-04
 [8,] -1.148407e-04 -0.0002584579 -2.220256e-07 -2.780040e-04 -9.451581e-05 -1.334559e-05  5.140123e-06  6.983463e-05  3.104584e-05  5.885347e-06 -2.808963e-05
 [9,] -1.984929e-04 -0.0009938063  5.146704e-06 -1.566783e-05  2.442607e-05  1.300363e-05  1.285924e-05  3.104584e-05  2.376438e-04  1.730248e-05 -3.113317e-04
[10,]  1.837863e-05  0.0008981982  3.230501e-07  3.374025e-04  6.146340e-05  1.447806e-05 -2.356934e-05  5.885347e-06  1.730248e-05  2.948947e-05 -2.239586e-04
[11,] -6.342234e-04 -0.0071619101 -7.778780e-06 -5.095737e-03 -9.833045e-04 -2.697526e-04  3.224935e-04 -2.808963e-05 -3.113317e-04 -2.239586e-04  2.948956e-03
> Cov = invR %*% Smat %*% invR ; Cov
               [,1]         [,2]          [,3]          [,4]          [,5]          [,6]          [,7]          [,8]          [,9]         [,10]         [,11]
 [1,]  1.081852e-01  0.381039998 -1.191397e-05  0.0757064688  0.0118643740  1.327564e-03 -1.226834e-03 -2.137355e-04 -1.120959e-04  9.320591e-04 -0.0173884936
 [2,]  3.810400e-01  3.301767721  2.215414e-03  0.3519546604  0.0362188753  1.013372e-02 -1.145029e-02  3.866713e-03 -5.284781e-03  9.193540e-03 -0.1340351577
 [3,] -1.191397e-05  0.002215414  2.281053e-05  0.0011405715  0.0002221212  6.708397e-05 -7.538788e-05 -1.083171e-05 -2.312755e-05  5.140086e-05 -0.0005312805
 [4,]  7.570647e-02  0.351954660  1.140571e-03  0.1615361044  0.0281642067  6.296954e-03 -6.599595e-03 -7.286419e-04 -1.328740e-03  3.995827e-03 -0.0509385243
 [5,]  1.186437e-02  0.036218875  2.221212e-04  0.0281642067  0.0054057098  1.208577e-03 -1.213908e-03 -2.351632e-04 -2.307712e-04  7.196571e-04 -0.0089491497
 [6,]  1.327564e-03  0.010133725  6.708397e-05  0.0062969536  0.0012085772  3.462158e-04 -3.362398e-04 -4.610441e-05 -6.185083e-05  1.948844e-04 -0.0023152034
 [7,] -1.226834e-03 -0.011450294 -7.538788e-05 -0.0065995945 -0.0012139085 -3.362398e-04  4.745775e-04  1.482032e-05  1.799104e-05 -2.889098e-04  0.0028811959
 [8,] -2.137355e-04  0.003866713 -1.083171e-05 -0.0007286419 -0.0002351632 -4.610441e-05  1.482032e-05  4.065859e-05  2.171312e-05 -5.762233e-06  0.0001142784
 [9,] -1.120959e-04 -0.005284781 -2.312755e-05 -0.0013287399 -0.0002307712 -6.185083e-05  1.799104e-05  2.171312e-05  9.120400e-05 -1.206628e-05  0.0004458443
[10,]  9.320591e-04  0.009193540  5.140086e-05  0.0039958266  0.0007196571  1.948844e-04 -2.889098e-04 -5.762233e-06 -1.206628e-05  2.054842e-04 -0.0018725456
[11,] -1.738849e-02 -0.134035158 -5.312805e-04 -0.0509385243 -0.0089491497 -2.315203e-03  2.881196e-03  1.142784e-04  4.458443e-04 -1.872546e-03  0.0204906319
> SE = sqrt(diag(Cov)) ; SE
 [1] 0.328915243 1.817076696 0.004776037 0.401915544 0.073523532 0.018606875 0.021784799 0.006376409 0.009550079 0.014334720 0.143145492
> Correl = cov2cor(Cov) ; Correl
              [,1]       [,2]         [,3]       [,4]       [,5]       [,6]        [,7]        [,8]        [,9]       [,10]      [,11]
 [1,]  1.000000000  0.6375486 -0.007584111  0.5726829  0.4906078  0.2169192 -0.17121753 -0.10190995 -0.03568606  0.19768342 -0.3693178
 [2,]  0.637548616  1.0000000  0.255278279  0.4819241  0.2711036  0.2997246 -0.28926097  0.33372793 -0.30454170  0.35295578 -0.5153091
 [3,] -0.007584111  0.2552783  1.000000000  0.5941827  0.6325516  0.7548794 -0.72456984 -0.35567489 -0.50705482  0.75078138 -0.7771028
 [4,]  0.572682863  0.4819241  0.594182687  1.0000000  0.9530954  0.8420197 -0.75375271 -0.28431726 -0.34617702  0.69355771 -0.8853885
 [5,]  0.490607817  0.2711036  0.632551558  0.9530954  1.0000000  0.8834350 -0.75788971 -0.50161073 -0.32866103  0.68282600 -0.8503109
 [6,]  0.216919215  0.2997246  0.754879432  0.8420197  0.8834350  1.0000000 -0.82951082 -0.38859112 -0.34806882  0.73065841 -0.8692367
 [7,] -0.171217525 -0.2892610 -0.724569843 -0.7537527 -0.7578897 -0.8295108  1.00000000  0.10669102  0.08647603 -0.92516573  0.9239353
 [8,] -0.101909949  0.3337279 -0.355674894 -0.2843173 -0.5016107 -0.3885911  0.10669102  1.00000000  0.35656538 -0.06304135  0.1252018
 [9,] -0.035686062 -0.3045417 -0.507054819 -0.3461770 -0.3286610 -0.3480688  0.08647603  0.35656538  1.00000000 -0.08814086  0.3261359
[10,]  0.197683423  0.3529558  0.750781383  0.6935577  0.6828260  0.7306584 -0.92516573 -0.06304135 -0.08814086  1.00000000 -0.9125686
[11,] -0.369317838 -0.5153091 -0.777102800 -0.8853885 -0.8503109 -0.8692367  0.92393529  0.12520177  0.32613591 -0.91256855  1.0000000
> InvCov = Rmat %*% solve(Smat) %*% Rmat ; InvCov
             [,1]        [,2]         [,3]         [,4]        [,5]        [,6]         [,7]        [,8]         [,9]        [,10]       [,11]
 [1,]   173.39124  -23.834365    2527.3966     16.41490   -522.3018   2655.8203   -1004.4311    4984.725   -3290.4992    2417.7959    575.5159
 [2,]   -23.83437    8.704852     350.3526    -50.57403    663.5319   -381.9314    -500.0432    1255.917    -364.9185     789.8425    310.1413
 [3,]  2527.39664  350.352595  405877.5799  -5911.45274  84605.8034  13357.5147  -97491.7673  422598.142 -124630.1799  154383.6369  66896.5114
 [4,]    16.41490  -50.574030   -5911.4527    638.56601  -6601.2821    620.4808    5136.4302  -20600.759    7634.4853   -9736.4585  -3358.9112
 [5,]  -522.30176  663.531938   84605.8034  -6601.28212  80282.8191 -12068.4899  -68177.9951  255028.282  -95343.3353  132861.6326  45760.1332
 [6,]  2655.82029 -381.931371   13357.5147    620.48085 -12068.4899  66362.5605   -5456.1040   79469.401  -53263.6481   54935.2000  10374.7889
 [7,] -1004.43111 -500.043234  -97491.7673   5136.43019 -68177.9951  -5456.1040  114472.9940 -272301.823  136154.8149 -145684.1475 -55128.3267
 [8,]  4984.72480 1255.917256  422598.1424 -20600.75879 255028.2818  79469.4013 -272301.8229 1147687.573 -476468.3818  582249.7915 188015.3283
 [9,] -3290.49921 -364.918471 -124630.1799   7634.48535 -95343.3353 -53263.6481  136154.8149 -476468.382  251364.0992 -280214.0927 -84654.9009
[10,]  2417.79594  789.842486  154383.6369  -9736.45854 132861.6326  54935.2000 -145684.1475  582249.791 -280214.0927  398182.2560 110972.9439
[11,]   575.51589  310.141268   66896.5114  -3358.91122  45760.1332  10374.7889  -55128.3267  188015.328  -84654.9009  110972.9439  35794.3214
> EigenVal = sort(eigen(Correl)$values) ; EigenVal # Sorted Eigenvalues
 [1] 0.000750329 0.006937068 0.028563116 0.047405995 0.088834893 0.166194592 0.304350396 1.014189480 1.334729662 1.680142556 6.327901913
> 
> ## EBE
> EBE
      ID        ETA1         ETA2         ETA3        Oi
 [1,]  1 -0.11099849 -0.191246928 -0.285866994 20.293306
 [2,]  2  0.32264742  0.054848795  0.046434159 17.712516
 [3,]  3  0.40218887  0.042369385 -0.011527722 -1.434585
 [4,]  4 -0.35086663 -0.042091229  0.014441664  9.413174
 [5,]  5 -0.03576969 -0.108388149 -0.096206131 20.424353
 [6,]  6 -0.48287099  0.135571729  0.231116217  4.319961
 [7,]  7 -0.86682846  0.002659347  0.143424453  1.404465
 [8,]  8 -0.07301653  0.069615788  0.077067775  3.983465
 [9,]  9  1.32012882  0.174004505 -0.008525731  3.418454
[10,] 10 -0.71503219 -0.212020321 -0.154412718  4.735143
[11,] 11  0.85332309  0.173068743  0.081635180 -2.436323
[12,] 12 -0.50222387 -0.133709714 -0.029243531 11.871562
> 
> ## sdtab
> SqrtInvCov = function(M)
+ {
+   EigenResult = eigen(as.matrix(M))
+   EigenVector = EigenResult$vectors
+   EigenValues = abs(EigenResult$values)
+   return(EigenVector %*% diag(1/sqrt(EigenValues)) %*% t(EigenVector))
+ }
> 
> THETA = r1$THETA
> OM = r1$OMEGA
> SG = r1$SIGMA
> tSD = vector()
> for (i in 1:nID) {
+   cID  = IDs[i]
+ 
+   FGH0 = PRED(THETA, rep(0, nEta))
+   G0i  = FGH0[, GNames, drop=FALSE]
+   H0i  = FGH0[, HNames, drop=FALSE]
+   R0i  = DATA[DATA$ID == cID, "DV"] - FGH0[,"F"]
+   C0i  = G0i %*% OM %*% t(G0i) + diag(diag(H0i %*% SG %*% t(H0i)))
+   WRES = SqrtInvCov(C0i) %*% R0i
+ 
+   cEBE = EBE[EBE[,"ID"]==cID, 2:(nEta + 1)]
+   FGH1 = PRED(THETA, cEBE)
+   G1i  = FGH1[, GNames, drop=FALSE]
+   H1i  = FGH1[, HNames, drop=FALSE]
+   R1i  = DATA[DATA$ID == cID, "DV"] - FGH1[,"F"]
+   C1i  = G1i %*% OM %*% t(G1i) + diag(diag(H1i %*% SG %*% t(H1i)))
+   CWRES = SqrtInvCov(C1i) %*% (R1i + G1i %*% cEBE)
+ 
+   tSD = rbind(tSD, cbind(DATA[DATA$ID == cID, c("ID", "TIME", "DV")], PRED=FGH0[,"F"], RES=R0i, WRES, CIPREDI=FGH1[,"F"], CIRESI=R1i, CWRES, G1i, H1i))
+ } ; tSD
    ID  TIME    DV     PRED          RES        WRES    CIPREDI       CIRESI       CWRES          G1          G2          G3         H1 H2
1    1  0.00  0.74 0.000000  0.740000000  2.65614998  0.0000000  0.740000000  2.65614998  0.00000000   0.0000000  0.00000000  0.0000000  1
2    1  0.25  2.84 3.045554 -0.205553561 -1.17453193  3.3714687 -0.531468691 -1.07595898  2.83747725  -3.3714687 -0.02925421  3.3714687  1
3    1  0.57  6.57 5.507682  1.062317794  0.43622607  6.2495741  0.320425911  0.39825368  4.15210609  -6.2495741 -0.13149220  6.2495741  1
4    1  1.12 10.50 7.546834  2.953166438  1.81181100  8.8754044  1.624595624  1.56659897  3.75373870  -8.8754044 -0.40296539  8.8754044  1
5    1  2.02  9.66 8.279489  1.380511358  0.04202442 10.1706983 -0.510698283  0.06389615  1.75253311 -10.1706983 -0.93964158 10.1706983  1
6    1  3.82  8.58 7.472642  1.107358319 -0.39306243  9.7058648 -1.125864799 -0.24466507 -0.11516156  -9.7058648 -1.96040257  9.7058648  1
7    1  5.10  8.36 6.704715  1.655285175  0.10315401  8.9764841 -0.616484053  0.15586650 -0.37183412  -8.9764841 -2.55751030  8.9764841  1
8    1  7.03  7.47 5.664272  1.805727755  0.27653387  7.9150122 -0.445012194  0.29491613 -0.40051537  -7.9150122 -3.25861518  7.9150122  1
9    1  9.05  6.89 4.744483  2.145516893  0.83381272  6.9289472 -0.038947194  0.69373883 -0.35830401  -6.9289472 -3.77502961  6.9289472  1
10   1 12.12  5.94 3.624116  2.315884281  1.47448569  5.6594083  0.280591661  1.10796830 -0.29332265  -5.6594083 -4.22878131  5.6594083  1
11   1 24.37  3.28 1.237066  2.042934097  3.46657176  2.5236443  0.756355703  2.40201051 -0.13080674  -2.5236443 -3.92383282  2.5236443  1
12   2  0.00  0.00 0.000000  0.000000000  0.00000000  0.0000000  0.000000000  0.00000000  0.00000000   0.0000000  0.00000000  0.0000000  1
13   2  0.27  1.72 3.240324 -1.520323561 -3.74678414  3.9426059 -2.222605912 -3.02979597  2.94100223  -3.9426059 -0.05324326  3.9426059  1
14   2  0.52  7.91 5.204117  2.705883201  2.95950862  5.9858531  1.924146924  2.78442768  3.31307131  -5.9858531 -0.16708179  5.9858531  1
15   2  1.00  8.31 7.260954  1.049045922  0.69373436  7.6870928  0.622907203  0.74959636  2.20647004  -7.6870928 -0.46251101  7.6870928  1
16   2  1.92  8.33 8.274352  0.055647845  0.10978080  8.0195185  0.310481540  0.12291915  0.36348990  -8.0195185 -1.07434036  8.0195185  1
17   2  3.50  6.85 7.665105 -0.815104670 -0.44452842  7.0892438 -0.239243770 -0.52426392 -0.27886805  -7.0892438 -1.95252697  7.0892438  1
18   2  5.02  6.08 6.751329 -0.671329119 -0.31611927  6.1707695 -0.090769525 -0.40260644 -0.28437704  -6.1707695 -2.55982636  6.1707695  1
19   2  7.03  5.40 5.664272 -0.264272245  0.11083865  5.1300947  0.269905276  0.06308032 -0.23901274  -5.1300947 -3.07578458  5.1300947  1
20   2  9.00  4.55 4.765343 -0.215342884  0.16017147  4.2804281  0.269571900  0.12390680 -0.19948407  -4.2804281 -3.34142418  4.2804281  1
21   2 12.00  3.01 3.662477 -0.652476767 -0.65281560  3.2488752 -0.238875194 -0.75209652 -0.15141099  -3.2488752 -3.43202304  3.2488752  1
22   2 24.30  0.90 1.244687 -0.344687471 -0.59264279  1.0489164 -0.148916368 -0.62669559 -0.04888383  -1.0489164 -2.29390031  1.0489164  1
23   3  0.00  0.00 0.000000  0.000000000  0.00000000  0.0000000  0.000000000  0.00000000  0.00000000   0.0000000  0.00000000  0.0000000  1
24   3  0.27  4.40 3.240324  1.159676439  0.66476210  4.2362711  0.163728851  0.47860442  3.08093577  -4.2362711 -0.05437443  4.2362711  1
25   3  0.58  6.90 5.565356  1.334644236  0.46969238  6.6745769  0.225423089  0.44198533  3.22435772  -6.6745769 -0.20189010  6.6745769  1
26   3  1.02  8.20 7.313437  0.886562938  0.15894326  8.0108245  0.189175543  0.23478341  1.97472367  -8.0108245 -0.47449397  8.0108245  1
27   3  2.02  7.80 8.279489 -0.479488642 -0.50791429  8.1617293 -0.361729335 -0.43552066  0.15739237  -8.1617293 -1.11939838  8.1617293  1
28   3  3.62  7.50 7.593440 -0.093440257  0.14419659  7.1949722  0.305027786  0.15384446 -0.26607868  -7.1949722 -1.96962629  7.1949722  1
29   3  5.08  6.20 6.716345 -0.516344542 -0.27033983  6.3416897 -0.141689722 -0.31265217 -0.25473582  -6.3416897 -2.53835702  6.3416897  1
30   3  7.07  5.30 5.644442 -0.344442400 -0.15508428  5.3364109 -0.036410913 -0.19973589 -0.21543746  -5.3364109 -3.05705434  5.3364109  1
31   3  9.00  4.90 4.765343  0.134657116  0.44949978  4.5138389  0.386161116  0.43232654 -0.18224692  -4.5138389 -3.34147099  4.5138389  1
32   3 12.15  3.70 3.614588  0.085411598  0.36638539  3.4346714  0.265328564  0.34418429 -0.13867565  -3.4346714 -3.48103696  3.4346714  1
33   3 24.17  1.05 1.258967 -0.208966610 -0.59749524  1.2108503 -0.160850253 -0.62131927 -0.04888836  -1.2108503 -2.48962646  1.2108503  1
34   4  0.00  0.00 0.000000  0.000000000  0.00000000  0.0000000  0.000000000  0.00000000  0.00000000   0.0000000  0.00000000  0.0000000  1
35   4  0.35  1.89 3.958863 -2.068862861 -2.09425390  3.1237126 -1.233712602 -2.70176968  2.58061832  -3.1237126 -0.05139310  3.1237126  1
36   4  0.60  4.60 5.677783 -1.077783430 -0.30068519  4.6855169 -0.085516906 -0.44859196  3.34777126  -4.6855169 -0.13712254  4.6855169  1
37   4  1.07  8.60 7.435969  1.164031168  1.67303886  6.5844290  2.015571022  1.87440465  3.50275813  -6.5844290 -0.36654313  6.5844290  1
38   4  2.13  8.38 8.272733  0.107266620  0.04564995  8.1169978  0.263002216  0.09372505  1.93178344  -8.1169978 -1.01597146  8.1169978  1
39   4  3.50  7.54 7.665105 -0.125104670 -0.42676961  7.9610365 -0.421036523 -0.37434574  0.30644534  -7.9610365 -1.83303871  7.9610365  1
40   4  5.02  6.88 6.751329  0.128670881 -0.24163635  7.1434544 -0.263454370 -0.20745082 -0.35821793  -7.1434544 -2.55782724  7.1434544  1
41   4  7.02  5.78 5.669240  0.110759558 -0.25725306  6.0192526 -0.239252610 -0.23473075 -0.50470977  -6.0192526 -3.20980726  6.0192526  1
42   4  9.02  5.33 4.756988  0.573012001  0.43531028  5.0425351  0.287464876  0.41504827 -0.45783572  -5.0425351 -3.58378386  5.0425351  1
43   4 11.98  4.19 3.668910  0.521090364  0.54789128  3.8750792  0.314920768  0.51637064 -0.35754798  -3.8750792 -3.77466563  3.8750792  1
44   4 24.65  1.15 1.207043 -0.057043471 -0.38033789  1.2544329 -0.104432928 -0.39612307 -0.11589821  -1.2544329 -2.63677936  1.2544329  1
45   5  0.00  0.00 0.000000  0.000000000  0.00000000  0.0000000  0.000000000  0.00000000  0.00000000   0.0000000  0.00000000  0.0000000  1
46   5  0.30  2.02 3.520844 -1.500844088 -2.99037554  3.8188333 -1.798833263 -2.82266602  3.04873230  -3.8188333 -0.04875380  3.8188333  1
47   5  0.52  5.63 5.204117  0.425883201  0.19050885  5.6771084 -0.047108394  0.17037176  3.79742431  -5.6771084 -0.13141325  5.6771084  1
48   5  1.00 11.40 7.260954  4.139045922  3.59122647  8.0080018  3.391998221  3.28470004  3.50544513  -8.0080018 -0.38942887  8.0080018  1
49   5  2.02  9.33 8.279489  1.050511358  0.24035969  9.2900286  0.039971410  0.24092787  1.30000942  -9.2900286 -1.05409706  9.2900286  1
50   5  3.50  8.74 7.665105  1.074895330  0.18670234  8.7438607 -0.003860680  0.20188751 -0.13362058  -8.7438607 -1.94847778  8.7438607  1
51   5  5.02  7.56 6.751329  0.808670881 -0.09122950  7.8042236 -0.244223558 -0.03987785 -0.39593249  -7.8042236 -2.66919168  7.8042236  1
52   5  7.02  7.09 5.669240  1.420759558  0.67558973  6.6610199  0.428980120  0.62428250 -0.38483727  -6.6610199 -3.33731799  6.6610199  1
53   5  9.10  5.90 4.723715  1.176285428  0.48805630  5.6438734  0.256126628  0.45458299 -0.32977124  -5.6438734 -3.76307411  5.6438734  1
54   5 12.00  4.37 3.662477  0.707523233 -0.10936812  4.4792510 -0.109251020 -0.06823035 -0.26195829  -4.4792510 -4.02178373  4.4792510  1
55   5 24.35  1.57 1.239239  0.330761281 -0.25924474  1.6739878 -0.103987804 -0.27815193 -0.09790147  -1.6739878 -3.15064067  1.6739878  1
56   6  0.00  0.00 0.000000  0.000000000  0.00000000  0.0000000  0.000000000  0.00000000  0.00000000   0.0000000  0.00000000  0.0000000  1
57   6  0.27  1.29 3.240324 -1.950323561 -1.42981702  1.8728050 -0.582805034 -2.07116179  1.64811295  -1.8728050 -0.02897266  1.8728050  1
58   6  0.58  3.08 5.565356 -2.485355764 -1.11545331  3.4527029 -0.372702857 -1.46553677  2.60134800  -3.4527029 -0.11935570  3.4527029  1
59   6  1.15  6.44 7.608110 -1.168109560  0.34014865  5.2388093  1.201190677  0.75206674  2.88648440  -5.2388093 -0.38411948  5.2388093  1
60   6  2.03  6.32 8.279380 -1.959380478 -0.69429416  6.3250913 -0.005091281 -0.70896549  1.96074803  -6.3250913 -0.89644430  6.3250913  1
61   6  3.57  5.53 7.623397 -2.093396584 -1.10152472  6.2419697 -0.711969667 -1.26244723  0.34901513  -6.2419697 -1.75732388  6.2419697  1
62   6  5.00  4.94 6.763022 -1.823022083 -0.95365535  5.5426988 -0.602698774 -1.10841270 -0.30576515  -5.5426988 -2.36295108  5.5426988  1
63   6  7.00  4.02 5.679190 -1.659189738 -0.88158590  4.5058199 -0.485819880 -1.04053282 -0.51425248  -4.5058199 -2.88537744  4.5058199  1
64   6  9.22  3.46 4.674240 -1.214240003 -0.38335605  3.5352311 -0.075231110 -0.43860315 -0.46455693  -3.5352311 -3.12420912  3.5352311  1
65   6 12.10  2.78 3.630481 -0.850481211  0.11996738  2.5724996  0.207500391  0.17896694 -0.34878029  -2.5724996 -3.09122713  2.5724996  1
66   6 23.85  0.92 1.294817 -0.374817059  0.63760455  0.7017849  0.218215120  0.57722924 -0.09557259  -0.7017849 -1.75490537  0.7017849  1
67   7  0.00  0.15 0.000000  0.150000000  0.53840878  0.0000000  0.150000000  0.53840878  0.00000000   0.0000000  0.00000000  0.0000000  1
68   7  0.25  0.85 3.045554 -2.195553561 -1.13945419  1.4139744 -0.563974403 -2.18466642  1.30536389  -1.4139744 -0.01829320  1.4139744  1
69   7  0.50  2.35 5.075308 -2.725307549 -0.88382224  2.5870653 -0.237065266 -1.33317816  2.19853394  -2.5870653 -0.06837543  2.5870653  1
70   7  1.02  5.02 7.313437 -2.293437062 -0.51936287  4.4057322  0.614267755 -0.07181784  3.11988638  -4.4057322 -0.24785004  4.4057322  1
71   7  2.02  6.58 8.279489 -1.699488642 -0.86734957  6.2725923  0.307407655 -0.56320816  2.98542155  -6.2725923 -0.75336414  6.2725923  1
72   7  3.48  7.09 7.676965 -0.586964645 -0.41813705  6.9391304  0.150869582 -0.37809306  1.55151852  -6.9391304 -1.57718862  6.9391304  1
73   7  5.00  6.66 6.763022 -0.103022083 -0.01169158  6.5725572  0.087442754 -0.14791803  0.33204677  -6.5725572 -2.32229006  6.5725572  1
74   7  6.98  5.25 5.689156 -0.439156258 -0.35200152  5.6474692 -0.397469226 -0.56132829 -0.44346854  -5.6474692 -3.01042269  5.6474692  1
75   7  9.00  4.39 4.765343 -0.375342884 -0.22963250  4.6807759 -0.290775855 -0.44729058 -0.66690558  -4.6807759 -3.40445097  4.6807759  1
76   7 12.05  3.53 3.646444 -0.116443896  0.27694120  3.4610554  0.068944620  0.08082901 -0.61928373  -3.4610554 -3.56607395  3.4610554  1
77   7 24.22  1.15 1.253455 -0.103455349  0.43245357  1.0108448  0.139155161  0.33065870 -0.19420988  -1.0108448 -2.28526469  1.0108448  1
78   8  0.00  0.00 0.000000  0.000000000  0.00000000  0.0000000  0.000000000  0.00000000  0.00000000   0.0000000  0.00000000  0.0000000  1
79   8  0.25  3.05 3.045554  0.004446439  0.85060519  2.6712353  0.378764691  0.93110910  2.23221331  -2.6712353 -0.03334986  2.6712353  1
80   8  0.52  3.05 5.204117 -2.154116799 -2.11255302  4.6134131 -1.563413130 -2.32004475  3.13219810  -4.6134131 -0.12634242  4.6134131  1
81   8  0.98  7.31 7.206396  0.103603804  0.71994859  6.4796773  0.830322749  0.82034371  2.97650424  -6.4796773 -0.36290841  6.4796773  1
82   8  2.02  7.56 8.279489 -0.719488642 -0.19915678  7.5702872 -0.010287234 -0.19281203  1.12232195  -7.5702872 -1.00953449  7.5702872  1
83   8  3.53  6.59 7.647266 -1.057265757 -0.60583610  7.0051817 -0.415181701 -0.64149849 -0.15339486  -7.0051817 -1.85538806  7.0051817  1
84   8  5.05  5.88 6.733819 -0.853819039 -0.46761588  6.1199198 -0.239919832 -0.49630421 -0.38574357  -6.1199198 -2.48536405  6.1199198  1
85   8  7.15  4.73 5.604988 -0.874988233 -0.57063989  5.0222350 -0.292234952 -0.61225611 -0.36282610  -5.0222350 -3.03597919  5.0222350  1
86   8  9.07  4.57 4.736165 -0.166164766  0.36570313  4.1870497  0.382950261  0.42115035 -0.30603573  -4.1870497 -3.29276243  4.1870497  1
87   8 12.10  3.00 3.630481 -0.630481211 -0.42244251  3.1419353 -0.141935344 -0.45281176 -0.22995309  -3.1419353 -3.37310143  3.1419353  1
88   8 24.12  1.25 1.264502 -0.014502102  0.68664755  1.0056718  0.244328179  0.71525296 -0.07360612  -1.0056718 -2.22530793  1.0056718  1
89   9  0.00  0.00 0.000000  0.000000000  0.00000000  0.0000000  0.000000000  0.00000000  0.00000000   0.0000000  0.00000000  0.0000000  1
90   9  0.30  7.37 3.520844  3.849155912  3.15311526  6.6431892  0.726810813  1.65949509  2.53680227  -6.6431892 -0.10955498  6.6431892  1
91   9  0.63  9.03 5.839342  3.190657642  1.15799271  7.7358339  1.294166057  1.15517083  0.75279056  -7.7358339 -0.31545138  7.7358339  1
92   9  1.05  7.14 7.388406 -0.248406093 -1.68716014  7.6738562 -0.533856197 -0.90315397  0.01780729  -7.6738562 -0.58199381  7.6738562  1
93   9  2.02  6.33 8.279489 -1.949488642 -1.50562348  7.0744671 -0.744467133 -1.18906766 -0.11053123  -7.0744671 -1.13157247  7.0744671  1
94   9  3.53  5.66 7.647266 -1.987265757 -0.77921373  6.2036490 -0.543648965 -1.00554351 -0.09795387  -6.2036490 -1.80723565  6.2036490  1
95   9  5.02  5.67 6.751329 -1.081329119  0.16523722  5.4494164  0.220583560 -0.05127871 -0.08604514  -5.4494164 -2.29391716  5.4494164  1
96   9  7.17  4.24 5.595167 -1.355167370 -0.32950919  4.5197640 -0.279763965 -0.70181385 -0.07136612  -4.5197640 -2.74799868  4.5197640  1
97   9  8.80  4.11 4.849702 -0.739702346  0.32989737  3.9221921  0.187807864  0.07628260 -0.06193059  -3.9221921 -2.94087973  3.9221921  1
98   9 11.60  3.16 3.793304 -0.633303693  0.25540606  3.0742235  0.085776538 -0.01472602 -0.04854134  -3.0742235 -3.05394433  3.0742235  1
99   9 24.43  1.12 1.230570 -0.110570286  0.44269120  1.0068733  0.113126723  0.30902161 -0.01589832  -1.0068733 -2.12410598  1.0068733  1
100 10  0.00  0.24 0.000000  0.240000000  0.86145405  0.0000000  0.240000000  0.86145405  0.00000000   0.0000000  0.00000000  0.0000000  1
101 10  0.37  2.89 4.124245 -1.234245242  0.05941784  2.8538019  0.036198065 -0.22553220  2.48332454  -2.8538019 -0.04130118  2.8538019  1
102 10  0.77  5.22 6.490992 -1.270991594 -0.34739949  5.0957289  0.124271136 -0.19343144  3.78134609  -5.0957289 -0.15987909  5.0957289  1
103 10  1.02  6.41 7.313437 -0.903437062 -0.36305498  6.1517758  0.258224244 -0.04602780  4.11145793  -6.1517758 -0.26201765  6.1517758  1
104 10  2.05  7.83 8.278848 -0.448847674 -1.22407061  8.6289609 -0.798960894 -0.79500240  3.56898026  -8.6289609 -0.80979607  8.6289609  1
105 10  3.55 10.21 7.635343  2.574657409  0.84743551  9.4095373  0.800462742  0.84415141  1.55706538  -9.4095373 -1.70424251  9.4095373  1
106 10  5.05  9.18 6.733819  2.446180961  0.71580364  8.9738755  0.206124470  0.57811681  0.22334547  -8.9738755 -2.50773136  8.9738755  1
107 10  7.08  8.02 5.639496  2.380504340  0.84071409  7.9177245  0.102275484  0.59729802 -0.50968937  -7.9177245 -3.34844769  7.9177245  1
108 10  9.38  7.14 4.609079  2.530921439  1.39898475  6.7106466  0.429353370  0.96616497 -0.67104738  -6.7106466 -3.97390269  6.7106466  1
109 10 12.10  5.68 3.630481  2.049518789  1.10410730  5.4791473  0.200852744  0.72271846 -0.61062537  -5.4791473 -4.35875900  5.4791473  1
110 10 23.70  2.42 1.311972  1.108028370  0.96057459  2.2912679  0.128732139  0.55465761 -0.26257781  -2.2912679 -3.82044672  2.2912679  1
111 11  0.00  0.00 0.000000  0.000000000  0.00000000  0.0000000  0.000000000  0.00000000  0.00000000   0.0000000  0.00000000  0.0000000  1
112 11  0.25  4.86 3.045554  1.814446439  1.03456315  4.7885832  0.071416761  0.57910979  2.98328650  -4.7885832 -0.06499882  4.7885832  1
113 11  0.50  7.24 5.075308  2.164692451  0.88325603  6.6675254  0.572474614  0.82560134  2.40664072  -6.6675254 -0.20179984  6.6675254  1
114 11  0.98  8.00 7.206396  0.793603804 -0.17156172  7.5070849  0.492915150  0.23107183  0.73350955  -7.5070849 -0.51666729  7.5070849  1
115 11  1.98  6.81 8.278827 -1.468826565 -0.95083272  7.0663828 -0.256382845 -0.72093759 -0.14006587  -7.0663828 -1.13657914  7.0663828  1
116 11  3.60  5.87 7.605438 -1.735437641 -0.57403803  6.0633811 -0.193381083 -0.68724350 -0.16873896  -6.0633811 -1.90913187  6.0633811  1
117 11  5.02  5.22 6.751329 -1.531329119 -0.36759601  5.2966630 -0.076662970 -0.54904147 -0.14770594  -5.2966630 -2.38379588  5.2966630  1
118 11  7.03  4.45 5.664272 -1.214272245 -0.14479336  4.3741371  0.075862947 -0.31005843 -0.12198260  -4.3741371 -2.80567619  4.3741371  1
119 11  9.03  3.62 4.752816 -1.132816046 -0.20719304  3.6157292  0.004270768 -0.39835917 -0.10083270  -3.6157292 -3.00770686  3.6157292  1
120 11 12.12  2.69 3.624116 -0.934115719 -0.18743353  2.6942000 -0.004199985 -0.37808894 -0.07513380  -2.6942000 -3.03375507  2.6942000  1
121 11 24.08  0.86 1.268948 -0.408948015 -0.09906057  0.8627895 -0.002789483 -0.21380278 -0.02406082  -0.8627895 -1.95397465  0.8627895  1
122 12  0.00  0.00 0.000000  0.000000000  0.00000000  0.0000000  0.000000000  0.00000000  0.00000000   0.0000000  0.00000000  0.0000000  1
123 12  0.25  1.25 3.045554 -1.795553561 -1.81793536  2.2611175 -1.011117485 -2.80179693  2.01413747  -2.2611175 -0.02490712  2.2611175  1
124 12  0.50  3.96 5.075308 -1.115307549 -0.17048341  4.0168736 -0.056873649 -0.58334656  3.17022447  -4.0168736 -0.09140269  4.0168736  1
125 12  1.00  7.82 7.260954  0.559045922  1.02842403  6.4045742  1.415425780  1.08613872  3.89878779  -6.4045742 -0.30974491  6.4045742  1
126 12  2.00  9.72 8.279380  1.440619974  0.76163178  8.4730999  1.246900135  0.84549757  2.81329572  -8.4730999 -0.91097283  8.4730999  1
127 12  3.52  9.75 7.653218  2.096781652  0.92862434  8.7212552  1.028744825  0.93911142  0.73685539  -8.7212552 -1.86395188  8.7212552  1
128 12  5.07  8.57 6.722165  1.847834602  0.73654885  7.9674541  0.602545926  0.73413822 -0.24600979  -7.9674541 -2.66864053  7.9674541  1
129 12  7.07  6.59 5.644442  0.945557600 -0.16487204  6.8052618 -0.215261798 -0.05097669 -0.57464264  -6.8052618 -3.40486613  6.8052618  1
130 12  9.03  6.11 4.752816  1.357183954  0.54852971  5.7725465  0.337453501  0.53485410 -0.57142175  -5.7725465 -3.84440358  5.7725465  1
131 12 12.05  4.57 3.646444  0.923556104  0.17090895  4.4652376  0.104762409  0.18779516 -0.46181889  -4.4652376 -4.12102853  4.4652376  1
132 12 24.15  1.17 1.261178 -0.091177893 -1.42212102  1.5924377 -0.422437712 -1.34891510 -0.16559168  -1.5924377 -3.11157338  1.5924377  1
> 
> 
