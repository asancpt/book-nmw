[
["index.html", "nmw 1 nmw 패키지", " nmw Sungpil Han 2017-10-23 1 nmw 패키지 CRAN에 올라온 #install.packages(&#39;lib/nmw_0.1.3.tar.gz&#39;, repos = NULL, type = &#39;source&#39;) # local #install.packages(&#39;nmw&#39;) # CRAN library(nmw) ## Loading required package: numDeriv THEO-FO.OUT와 비교할 때 값이 같습니다. Scaling factor는 소스 코드를 보고 알아낸 것입니다. "],
["examples.html", "2 패키지를 사용한 예제", " 2 패키지를 사용한 예제 DataAll = Theoph colnames(DataAll) = c(&quot;ID&quot;, &quot;BWT&quot;, &quot;DOSE&quot;, &quot;TIME&quot;, &quot;DV&quot;) DataAll[,&quot;ID&quot;] = as.numeric(as.character(DataAll[,&quot;ID&quot;])) require(lattice) ## Loading required package: lattice xyplot(DV ~ TIME | as.factor(ID), data=DataAll, type=&quot;b&quot;) \\(\\theta, \\eta, \\epsilon\\) 개수를 먼저 지정해 주고 초기값을 설정합니다. nTheta = 3 nEta = 3 nEps = 2 THETAinit = c(2, 50, 0.1) OMinit = matrix(c(0.2, 0.1, 0.1, 0.1, 0.2, 0.1, 0.1, 0.1, 0.2), nrow=nEta, ncol=nEta) data.frame(OMinit) X1 X2 X3 0.2 0.1 0.1 0.1 0.2 0.1 0.1 0.1 0.2 SGinit = diag(c(0.1, 0.1)) data.frame(SGinit) X1 X2 0.1 0.0 0.0 0.1 LB = rep(0, nTheta) UB = rep(1000000, nTheta) FGD = deriv(~DOSE/(TH2*exp(ETA2))*TH1*exp(ETA1)/(TH1*exp(ETA1) - TH3*exp(ETA3))*(exp(-TH3*exp(ETA3)*TIME)-exp(-TH1*exp(ETA1)*TIME)), c(&quot;ETA1&quot;,&quot;ETA2&quot;,&quot;ETA3&quot;), function.arg=c(&quot;TH1&quot;, &quot;TH2&quot;, &quot;TH3&quot;, &quot;ETA1&quot;, &quot;ETA2&quot;, &quot;ETA3&quot;, &quot;DOSE&quot;, &quot;TIME&quot;), func=TRUE, hessian=(e$METHOD == &quot;LAPL&quot;)) H = deriv(~F + F*EPS1 + EPS2, c(&quot;EPS1&quot;, &quot;EPS2&quot;), function.arg=c(&quot;F&quot;, &quot;EPS1&quot;, &quot;EPS2&quot;), func=TRUE) PRED = function(THETA, ETA, DATAi) { FGDres = FGD(THETA[1], THETA[2], THETA[3], ETA[1], ETA[2], ETA[3], DOSE=320, DATAi[,&quot;TIME&quot;]) Gres = attr(FGDres, &quot;gradient&quot;) Hres = attr(H(FGDres, 0, 0), &quot;gradient&quot;) if (e$METHOD == &quot;LAPL&quot;) { Dres = attr(FGDres, &quot;hessian&quot;) Res = cbind(FGDres, Gres, Hres, Dres[,1,1], Dres[,2,1], Dres[,2,2], Dres[,3,]) colnames(Res) = c(&quot;F&quot;, &quot;G1&quot;, &quot;G2&quot;, &quot;G3&quot;, &quot;H1&quot;, &quot;H2&quot;, &quot;D11&quot;, &quot;D21&quot;, &quot;D22&quot;, &quot;D31&quot;, &quot;D32&quot;, &quot;D33&quot;) } else { Res = cbind(FGDres, Gres, Hres) colnames(Res) = c(&quot;F&quot;, &quot;G1&quot;, &quot;G2&quot;, &quot;G3&quot;, &quot;H1&quot;, &quot;H2&quot;) } return(Res) } "],
["first-order-approximation-method.html", "2.1 First Order Approximation Method", " 2.1 First Order Approximation Method InitStep(DataAll, THETAinit=THETAinit, OMinit=OMinit, SGinit=SGinit, LB=LB, UB=UB, Pred=PRED, METHOD=&quot;ZERO&quot;) 먼저 InitStep()을 통해서 초기화를 합니다. 2.1.1 EstRes (EstRes = EstStep()) # 4 sec ## $`Initial OFV` ## [1] 141.3076 ## ## $Time ## Time difference of 3.659209 secs ## ## $Optim ## $Optim$par ## [1] 0.560417594 -0.167835388 0.148962362 0.995143048 0.056166719 ## [6] 0.151227211 -1.032468525 0.005776729 0.110936464 -0.956899772 ## [11] -0.205559310 ## ## $Optim$value ## [1] 57.32106 ## ## $Optim$counts ## function gradient ## 74 74 ## ## $Optim$convergence ## [1] 0 ## ## $Optim$message ## [1] &quot;CONVERGENCE: REL_REDUCTION_OF_F &lt;= FACTR*EPSMCH&quot; ## ## ## $`Final Estimates` ## [1] 3.16946754 38.25213460 0.10501808 1.19823325 0.13747849 ## [6] 0.03134899 0.37015671 0.04340042 0.25068582 0.01207782 ## [11] 0.05427434 2.1.2 CovRes (CovRes = CovStep()) # 2 sec ## $Time ## Time difference of 1.337076 secs ## ## $`Standard Error` ## [1] 0.641076544 1.685217844 0.023072024 0.420617306 0.082197497 ## [6] 0.019812976 0.340273208 0.023052142 0.289524327 0.003576926 ## [11] 0.032078283 ## ## $`Covariance Matrix of Estimates` ## [,1] [,2] [,3] [,4] [,5] ## [1,] 0.4109791347 0.339158144 5.746694e-03 0.2058089645 2.003772e-03 ## [2,] 0.3391581437 2.839959182 5.032613e-03 0.3376028346 3.490465e-02 ## [3,] 0.0057466939 0.005032613 5.323183e-04 0.0016294512 -1.041991e-03 ## [4,] 0.2058089645 0.337602835 1.629451e-03 0.1769189182 1.951490e-02 ## [5,] 0.0020037724 0.034904655 -1.041991e-03 0.0195149026 6.756428e-03 ## [6,] -0.0021925236 0.012804811 -2.503963e-04 0.0032072246 1.504690e-03 ## [7,] 0.1215890847 0.149089319 7.111900e-03 0.0575731487 -1.010198e-02 ## [8,] 0.0009971098 0.023865634 6.271266e-05 0.0042158445 8.584714e-04 ## [9,] 0.0669924083 0.057326151 6.226096e-03 0.0179862543 -1.309239e-02 ## [10,] 0.0010500117 0.001807746 5.805488e-05 0.0005143569 -7.516774e-05 ## [11,] -0.0049728997 -0.009950377 -4.790610e-04 -0.0010145003 9.532948e-04 ## [,6] [,7] [,8] [,9] [,10] ## [1,] -2.192524e-03 0.1215890847 9.971098e-04 0.0669924083 1.050012e-03 ## [2,] 1.280481e-02 0.1490893190 2.386563e-02 0.0573261514 1.807746e-03 ## [3,] -2.503963e-04 0.0071119003 6.271266e-05 0.0062260963 5.805488e-05 ## [4,] 3.207225e-03 0.0575731487 4.215844e-03 0.0179862543 5.143569e-04 ## [5,] 1.504690e-03 -0.0101019780 8.584714e-04 -0.0130923877 -7.516774e-05 ## [6,] 3.925540e-04 -0.0028272756 2.326326e-04 -0.0032697941 -2.051327e-05 ## [7,] -2.827276e-03 0.1157858558 3.116262e-03 0.0940102394 9.767199e-04 ## [8,] 2.326326e-04 0.0031162617 5.314013e-04 0.0018656807 2.786064e-05 ## [9,] -3.269794e-03 0.0940102394 1.865681e-03 0.0838243357 8.055388e-04 ## [10,] -2.051327e-05 0.0009767199 2.786064e-05 0.0008055388 1.279440e-05 ## [11,] 1.806783e-04 -0.0038608273 2.199601e-04 -0.0033970159 -2.824858e-05 ## [,11] ## [1,] -4.972900e-03 ## [2,] -9.950377e-03 ## [3,] -4.790610e-04 ## [4,] -1.014500e-03 ## [5,] 9.532948e-04 ## [6,] 1.806783e-04 ## [7,] -3.860827e-03 ## [8,] 2.199601e-04 ## [9,] -3.397016e-03 ## [10,] -2.824858e-05 ## [11,] 1.029016e-03 ## ## $`Correlation Matrix of Estimates` ## [,1] [,2] [,3] [,4] [,5] [,6] ## [1,] 1.00000000 0.3139325 0.3885281 0.76325079 0.03802594 -0.1726174 ## [2,] 0.31393253 1.0000000 0.1294350 0.47628061 0.25198153 0.3835018 ## [3,] 0.38852814 0.1294350 1.0000000 0.16790689 -0.54943908 -0.5477629 ## [4,] 0.76325079 0.4762806 0.1679069 1.00000000 0.56444374 0.3848509 ## [5,] 0.03802594 0.2519815 -0.5494391 0.56444374 1.00000000 0.9239295 ## [6,] -0.17261745 0.3835018 -0.5477629 0.38485092 0.92392947 1.0000000 ## [7,] 0.55738714 0.2599936 0.9058832 0.40225837 -0.36117699 -0.4193635 ## [8,] 0.06747173 0.6143355 0.1179121 0.43479661 0.45306025 0.5093422 ## [9,] 0.36093637 0.1174929 0.9320626 0.14769593 -0.55014251 -0.5700142 ## [10,] 0.45790382 0.2998965 0.7034659 0.34187510 -0.25566008 -0.2894510 ## [11,] -0.24181804 -0.1840655 -0.6472826 -0.07518893 0.36154098 0.2842792 ## [,7] [,8] [,9] [,10] [,11] ## [1,] 0.5573871 0.06747173 0.3609364 0.4579038 -0.24181804 ## [2,] 0.2599936 0.61433553 0.1174929 0.2998965 -0.18406548 ## [3,] 0.9058832 0.11791205 0.9320626 0.7034659 -0.64728263 ## [4,] 0.4022584 0.43479661 0.1476959 0.3418751 -0.07518893 ## [5,] -0.3611770 0.45306025 -0.5501425 -0.2556601 0.36154098 ## [6,] -0.4193635 0.50934216 -0.5700142 -0.2894510 0.28427925 ## [7,] 1.0000000 0.39727833 0.9542504 0.8024764 -0.35370524 ## [8,] 0.3972783 1.00000000 0.2795381 0.3378856 0.29745513 ## [9,] 0.9542504 0.27953807 1.0000000 0.7778421 -0.36576437 ## [10,] 0.8024764 0.33788563 0.7778421 1.0000000 -0.24619292 ## [11,] -0.3537052 0.29745513 -0.3657644 -0.2461929 1.00000000 ## ## $`Inverse Covariance Matrix of Estimates` ## [,1] [,2] [,3] [,4] [,5] ## [1,] 106.16085 -68.57396 6449.005 335.8698 -2554.409 ## [2,] -68.57396 58.03937 -4878.746 -302.1420 2175.297 ## [3,] 6449.00514 -4878.74594 589180.809 26966.6055 -188642.065 ## [4,] 335.86981 -302.14199 26966.605 1681.5577 -11681.346 ## [5,] -2554.40932 2175.29716 -188642.065 -11681.3456 84767.297 ## [6,] -386.87894 570.22260 -66147.099 -3404.8900 13635.511 ## [7,] -1202.16352 939.99684 -90186.464 -5086.8917 35747.140 ## [8,] 10794.57609 -8973.04621 795473.397 47387.2333 -336778.082 ## [9,] -49.38187 87.68163 -10522.263 -442.6127 3308.451 ## [10,] 11656.77324 -10122.84537 899033.055 53311.6422 -378718.161 ## [11,] -1043.11500 1001.74635 -47225.438 -4879.5431 35063.038 ## [,6] [,7] [,8] [,9] [,10] ## [1,] -386.8789 -1202.1635 10794.576 -49.38187 11656.77 ## [2,] 570.2226 939.9968 -8973.046 87.68163 -10122.85 ## [3,] -66147.0986 -90186.4639 795473.397 -10522.26321 899033.06 ## [4,] -3404.8900 -5086.8917 47387.233 -442.61268 53311.64 ## [5,] 13635.5106 35747.1396 -336778.082 3308.45066 -378718.16 ## [6,] 72186.1449 10923.7488 -116902.668 2827.92008 -138707.39 ## [7,] 10923.7488 16640.0641 -149635.854 965.72182 -166637.08 ## [8,] -116902.6684 -149635.8536 1416416.077 -14025.69870 1587796.18 ## [9,] 2827.9201 965.7218 -14025.699 954.65511 -20047.21 ## [10,] -138707.3931 -166637.0784 1587796.183 -20047.20949 2031529.82 ## [11,] 15687.7641 14275.7793 -151936.736 935.29881 -170271.34 ## [,11] ## [1,] -1043.1150 ## [2,] 1001.7464 ## [3,] -47225.4381 ## [4,] -4879.5431 ## [5,] 35063.0376 ## [6,] 15687.7641 ## [7,] 14275.7793 ## [8,] -151936.7362 ## [9,] 935.2988 ## [10,] -170271.3406 ## [11,] 28036.5550 ## ## $`Eigen Values` ## [1] 0.0002519304 0.0096729015 0.0108358602 0.0233184643 0.0520725533 ## [6] 0.2982375053 0.5047779131 0.9114702297 1.2088053283 3.2082379737 ## [11] 4.7723193401 ## ## $`R Matrix` ## [,1] [,2] [,3] [,4] [,5] ## [1,] 17.924787 -1.3343223 -162.767654 -4.1309683 21.546405 ## [2,] -1.334322 0.5507357 -7.672315 0.1118322 -1.462878 ## [3,] -162.767654 -7.6723148 34333.363150 86.0269293 433.962384 ## [4,] -4.130968 0.1118322 86.026929 28.6263094 -177.270130 ## [5,] 21.546405 -1.4628778 433.962384 -177.2701302 1930.445843 ## [6,] 10.225928 -16.5210396 13.387686 272.9370786 -4270.878832 ## [7,] -11.022690 2.9849069 -90.741373 -52.9261900 210.709300 ## [8,] 52.304346 -18.2457139 956.482064 164.3158075 -1421.957500 ## [9,] 7.044855 -2.2338946 -1350.939646 24.4536958 -43.763546 ## [10,] 248.456482 -120.7991176 -7033.212482 50.2328789 -1013.856688 ## [11,] -1.752135 -5.2052276 -1992.414213 6.0120604 124.417556 ## [,6] [,7] [,8] [,9] [,10] ## [1,] 10.22593 -11.022690 52.30435 7.044855 248.45648 ## [2,] -16.52104 2.984907 -18.24571 -2.233895 -120.79912 ## [3,] 13.38769 -90.741373 956.48206 -1350.939646 -7033.21248 ## [4,] 272.93708 -52.926190 164.31581 24.453696 50.23288 ## [5,] -4270.87883 210.709300 -1421.95750 -43.763546 -1013.85669 ## [6,] 16610.43942 -139.814385 1113.59904 18.726078 4680.59998 ## [7,] -139.81438 213.228947 -555.99366 -151.083275 96.25915 ## [8,] 1113.59904 -555.993663 4043.51428 130.794770 -555.76917 ## [9,] 18.72608 -151.083275 130.79477 236.875935 -20.42601 ## [10,] 4680.59998 96.259149 -555.76917 -20.426010 192857.05263 ## [11,] -46.02961 -62.941133 -201.26760 92.656857 6568.90926 ## [,11] ## [1,] -1.752135 ## [2,] -5.205228 ## [3,] -1992.414213 ## [4,] 6.012060 ## [5,] 124.417556 ## [6,] -46.029614 ## [7,] -62.941133 ## [8,] -201.267605 ## [9,] 92.656857 ## [10,] 6568.909257 ## [11,] 3974.804398 ## ## $`S Matrix` ## [,1] [,2] [,3] [,4] [,5] ## [1,] 78.316509 -4.6468525 -1295.13192 -11.873085 142.72165 ## [2,] -4.646852 0.7648878 64.36589 2.623533 -28.61925 ## [3,] -1295.131915 64.3658917 183632.39790 -230.636173 840.38211 ## [4,] -11.873085 2.6235332 -230.63617 18.368716 -171.71679 ## [5,] 142.721653 -28.6192545 840.38211 -171.716794 2005.81552 ## [6,] -145.835176 29.4905947 9000.10289 291.779615 -3809.95407 ## [7,] -26.707401 0.2387057 3794.27704 -19.686952 51.76139 ## [8,] 44.375129 10.7614124 -10813.66435 84.841787 -765.19107 ## [9,] 13.946014 -4.4042212 -6396.75146 3.480210 87.90129 ## [10,] 2039.647982 -397.4745827 -4148.02643 -1170.279733 8916.77585 ## [11,] 279.500822 -47.3111189 -60483.51062 -22.729230 670.78875 ## [,6] [,7] [,8] [,9] [,10] ## [1,] -145.83518 -26.7074010 44.37513 13.946014 2039.6480 ## [2,] 29.49059 0.2387057 10.76141 -4.404221 -397.4746 ## [3,] 9000.10289 3794.2770370 -10813.66435 -6396.751456 -4148.0264 ## [4,] 291.77961 -19.6869516 84.84179 3.480210 -1170.2797 ## [5,] -3809.95407 51.7613883 -765.19107 87.901295 8916.7758 ## [6,] 12023.28652 188.5688359 667.62858 -711.894529 -3829.1367 ## [7,] 188.56884 129.3349739 -292.66398 -155.764410 1796.9713 ## [8,] 667.62858 -292.6639799 1121.03185 294.247258 -10631.8774 ## [9,] -711.89453 -155.7644099 294.24726 327.282119 1812.2113 ## [10,] -3829.13667 1796.9713202 -10631.87742 1812.211286 419517.6543 ## [11,] -3489.01512 -1105.9231026 2773.71160 2358.454995 18067.4267 ## [,11] ## [1,] 279.50082 ## [2,] -47.31112 ## [3,] -60483.51062 ## [4,] -22.72923 ## [5,] 670.78875 ## [6,] -3489.01512 ## [7,] -1105.92310 ## [8,] 2773.71160 ## [9,] 2358.45500 ## [10,] 18067.42672 ## [11,] 24042.66052 2.1.3 PostHocEta PostHocEta() # FinalPara from EstStep() ## ID ETA1 ETA2 ETA3 ## [1,] 1 -0.6367109 -0.232258352 -0.73648224 ## [2,] 2 -0.5895843 -0.153341805 -0.06619115 ## [3,] 3 -0.3083755 -0.124816676 -0.21013190 ## [4,] 4 -1.0305984 -0.186821177 -0.21195510 ## [5,] 5 -0.8235560 -0.302352128 -0.24453948 ## [6,] 6 -1.0025271 0.068181532 -0.08745089 ## [7,] 7 -1.4316285 -0.097903076 -0.13802639 ## [8,] 8 -0.7541785 -0.039239022 -0.19621190 ## [9,] 9 0.7875803 0.010757282 -0.19937965 ## [10,] 10 -1.4555649 -0.369057237 -0.40057582 ## [11,] 11 0.1541451 -0.005061315 -0.08005791 ## [12,] 12 -1.2863346 -0.388864841 -0.10134440 2.1.4 TabStep TabStep() ID TIME DV PRED RES WRES G1 G2 G3 H1 H2 1 0.00 0.74 0.0000000 0.7400000 3.1763945 0.0000000 0.0000000 0.0000000 0.0000000 1 1 0.25 2.84 4.5105405 -1.6705405 -0.1410857 2.9495118 -4.5105405 -0.0666985 4.5105405 1 1 0.57 6.57 6.7287024 -0.1587024 0.4536838 2.3362228 -6.7287024 -0.2572405 6.7287024 1 1 1.12 10.50 7.4435438 3.0564562 1.9983679 0.6273251 -7.4435438 -0.6496609 7.4435438 1 1 2.02 9.66 6.9840518 2.6759482 0.3614061 -0.1475148 -6.9840518 -1.2452730 6.9840518 1 1 3.82 8.58 5.7929403 2.7870597 -0.2128442 -0.1979448 -5.7929403 -2.1254447 5.7929403 1 1 5.10 8.36 5.0643456 3.2956544 0.2574109 -0.1735408 -5.0643456 -2.5388704 5.0643456 1 1 7.03 7.47 4.1352186 3.3347814 0.0668003 -0.1417131 -4.1352186 -2.9112241 4.1352186 1 1 9.05 6.89 3.3447892 3.5452108 0.5296288 -0.1146253 -3.3447892 -3.0643080 3.3447892 1 1 12.12 5.94 2.4229799 3.5170201 1.0898025 -0.0830350 -2.4229799 -3.0009802 2.4229799 1 1 24.37 3.28 0.6693332 2.6106668 3.8205329 -0.0229379 -0.6693332 -1.6900802 0.6693332 1 2 0.00 0.00 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 2 0.27 1.72 4.7334772 -3.0134772 -2.9055214 2.9842866 -4.7334772 -0.0762590 4.7334772 1 2 0.52 7.91 6.5276262 1.3823738 2.8285726 2.5200652 -6.5276262 -0.2236820 6.5276262 1 2 1.00 8.31 7.4260572 0.8839428 0.5510212 0.8979873 -7.4260572 -0.5635673 7.4260572 1 2 1.92 8.33 7.0525860 1.2774140 0.2361516 -0.1218596 -7.0525860 -1.1843260 7.0525860 1 2 3.50 6.85 5.9908424 0.8591576 -0.3922446 -0.2038445 -5.9908424 -1.9967571 5.9908424 1 2 5.02 6.08 5.1070724 0.9729276 -0.1798528 -0.1750014 -5.1070724 -2.5173836 5.1070724 1 2 7.03 5.40 4.1352186 1.2647814 0.5345463 -0.1417131 -4.1352186 -2.9112241 4.1352186 1 2 9.00 4.55 3.3623985 1.1876015 0.6776582 -0.1152287 -3.3623985 -3.0627851 3.3623985 1 2 12.00 3.01 2.4537079 0.5562921 -0.5079217 -0.0840881 -2.4537079 -3.0081163 2.4537079 1 2 24.30 0.90 0.6742717 0.2257283 -0.2578177 -0.0231072 -0.6742717 -1.6975934 0.6742717 1 3 0.00 0.00 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 3 0.27 4.40 4.7334772 -0.3334772 0.1664304 2.9842866 -4.7334772 -0.0762590 4.7334772 1 3 0.58 6.90 6.7644741 0.1355259 0.2068213 2.2985453 -6.7644741 -0.2640520 6.7644741 1 3 1.02 8.20 7.4320474 0.7679526 0.3030312 0.8486283 -7.4320474 -0.5779724 7.4320474 1 3 2.02 7.80 6.9840518 0.8159482 -0.1402471 -0.1475148 -6.9840518 -1.2452730 6.9840518 1 3 3.62 7.50 5.9158585 1.5841415 0.7334983 -0.2017027 -5.9158585 -2.0463040 5.9158585 1 3 5.08 6.20 5.0749937 1.1250063 -0.0270016 -0.1739049 -5.0749937 -2.5335492 5.0749937 1 3 7.07 5.30 4.1178841 1.1821159 0.0235648 -0.1411190 -4.1178841 -2.9163186 4.1178841 1 3 9.00 4.90 3.3623985 1.5376015 0.8850658 -0.1152287 -3.3623985 -3.0627851 3.3623985 1 3 12.15 3.70 2.4153582 1.2846418 0.6447719 -0.0827739 -2.4153582 -2.9991500 2.4153582 1 3 24.17 1.05 0.6835403 0.3664597 -0.7220317 -0.0234248 -0.6835403 -1.7115966 0.6835403 1 4 0.00 0.00 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 4 0.35 1.89 5.4866030 -3.5966030 -1.1661211 2.9772667 -5.4866030 -0.1185223 5.4866030 1 4 0.60 4.60 6.8319391 -2.2319391 -0.7148509 2.2227078 -6.8319391 -0.2777626 6.8319391 1 4 1.07 8.60 7.4413541 1.1586459 1.0781972 0.7327708 -7.4413541 -0.6138959 7.4413541 1 4 2.13 8.38 6.9078934 1.4721066 0.0183608 -0.1684060 -6.9078934 -1.3107482 6.9078934 1 4 3.50 7.54 5.9908424 1.5491576 -0.1388870 -0.2038445 -5.9908424 -1.9967571 5.9908424 1 4 5.02 6.88 5.1070724 1.7729276 0.1105991 -0.1750014 -5.1070724 -2.5173836 5.1070724 1 4 7.02 5.78 4.1395636 1.6404364 -0.1250229 -0.1418620 -4.1395636 -2.9099357 4.1395636 1 4 9.02 5.33 3.3553437 1.9746563 0.7634901 -0.1149870 -3.3553437 -3.0634063 3.3553437 1 4 11.98 4.19 2.4588670 1.7311330 0.6951002 -0.0842649 -2.4588670 -3.0092766 2.4588670 1 4 24.65 1.15 0.6499379 0.5000621 -0.8268959 -0.0222732 -0.6499379 -1.6602183 0.6499379 1 5 0.00 0.00 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 5 0.30 2.02 5.0405264 -3.0205264 -1.4558035 3.0062658 -5.0405264 -0.0914001 5.0405264 1 5 0.52 5.63 6.5276262 -0.8976262 0.2805003 2.5200652 -6.5276262 -0.2236820 6.5276262 1 5 1.00 11.40 7.4260572 3.9739428 3.4263914 0.8979873 -7.4260572 -0.5635673 7.4260572 1 5 2.02 9.33 6.9840518 2.3459482 -0.0818415 -0.1475148 -6.9840518 -1.2452730 6.9840518 1 5 3.50 8.74 5.9908424 2.7491576 0.2565310 -0.2038445 -5.9908424 -1.9967571 5.9908424 1 5 5.02 7.56 5.1070724 2.4529276 -0.1647954 -0.1750014 -5.1070724 -2.5173836 5.1070724 1 5 7.02 7.09 4.1395636 2.9504364 0.9824380 -0.1418620 -4.1395636 -2.9099357 4.1395636 1 5 9.10 5.90 3.3272720 2.5727280 0.6794489 -0.1140250 -3.3272720 -3.0657310 3.3272720 1 5 12.00 4.37 2.4537079 1.9162921 -0.2102321 -0.0840881 -2.4537079 -3.0081163 2.4537079 1 5 24.35 1.57 0.6707405 0.8992595 0.0359092 -0.0229861 -0.6707405 -1.6922249 0.6707405 1 6 0.00 0.00 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 6 0.27 1.29 4.7334772 -3.4434772 -1.0413426 2.9842866 -4.7334772 -0.0762590 4.7334772 1 6 0.58 3.08 6.7644741 -3.6844741 -1.8367040 2.2985453 -6.7644741 -0.2640520 6.7644741 1 6 1.15 6.44 7.4418947 -1.0018947 -0.1786034 0.5688358 -7.4418947 -0.6710296 7.4418947 1 6 2.03 6.32 6.9771535 -0.6571535 -0.5592682 -0.1497028 -6.9771535 -1.2512930 6.9771535 1 6 3.57 5.53 5.9469889 -0.4169889 -0.5443110 -0.2026089 -5.9469889 -2.0258501 5.9469889 1 6 5.00 4.94 5.1178103 -0.1778103 -0.3496291 -0.1753684 -5.1178103 -2.5119273 5.1178103 1 6 7.00 4.02 4.1482673 -0.1282673 -0.4683816 -0.1421603 -4.1482673 -2.9073412 4.1482673 1 6 9.22 3.46 3.2856043 0.1743957 0.0168195 -0.1125970 -3.2856043 -3.0687443 3.2856043 1 6 12.10 2.78 2.4280744 0.3519256 0.4165094 -0.0832096 -2.4280744 -3.0021901 2.4280744 1 6 23.85 0.92 0.7069015 0.2130985 0.2063776 -0.0242254 -0.7069015 -1.7463376 0.7069015 1 7 0.00 0.15 0.0000000 0.1500000 0.6438638 0.0000000 0.0000000 0.0000000 0.0000000 1 7 0.25 0.85 4.5105405 -3.6605405 -0.4814157 2.9495118 -4.5105405 -0.0666985 4.5105405 1 7 0.50 2.35 6.4359054 -4.0859054 -1.6537327 2.5903294 -6.4359054 -0.2105228 6.4359054 1 7 1.02 5.02 7.4320474 -2.4120474 -1.8445246 0.8486283 -7.4320474 -0.5779724 7.4320474 1 7 2.02 6.58 6.9840518 -0.4040518 -1.0253254 -0.1475148 -6.9840518 -1.2452730 6.9840518 1 7 3.48 7.09 6.0034303 1.0865697 0.5127380 -0.2041892 -6.0034303 -1.9883461 6.0034303 1 7 5.00 6.66 5.1178103 1.5421897 1.0796842 -0.1753684 -5.1178103 -2.5119273 5.1178103 1 7 6.98 5.25 4.1569893 1.0930107 0.1699521 -0.1424592 -4.1569893 -2.9047229 4.1569893 1 7 9.00 4.39 3.3623985 1.0276015 -0.0660540 -0.1152287 -3.3623985 -3.0627851 3.3623985 1 7 12.05 3.53 2.4408575 1.0891425 0.1438786 -0.0836477 -2.4408575 -3.0051791 2.4408575 1 7 24.22 1.15 0.6799605 0.4700395 -0.5029441 -0.0233021 -0.6799605 -1.7062031 0.6799605 1 8 0.00 0.00 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 8 0.25 3.05 4.5105405 -1.4605405 0.8350219 2.9495118 -4.5105405 -0.0666985 4.5105405 1 8 0.52 3.05 6.5276262 -3.4776262 -2.6239966 2.5200652 -6.5276262 -0.2236820 6.5276262 1 8 0.98 7.31 7.4186398 -0.1086398 0.3053188 0.9491035 -7.4186398 -0.5491459 7.4186398 1 8 2.02 7.56 6.9840518 0.5759482 0.1197358 -0.1475148 -6.9840518 -1.2452730 6.9840518 1 8 3.53 6.59 5.9720093 0.6179907 -0.0629521 -0.2033202 -5.9720093 -2.0092912 5.9720093 1 8 5.05 5.88 5.0910078 0.7889922 0.0745279 -0.1744523 -5.0910078 -2.5255044 5.0910078 1 8 7.15 4.73 4.0834329 0.6465671 -0.3061602 -0.1399384 -4.0834329 -2.9262267 4.0834329 1 8 9.07 4.57 3.3377713 1.2322287 0.9663034 -0.1143848 -3.3377713 -3.0648891 3.3377713 1 8 12.10 3.00 2.4280744 0.5719256 -0.5748610 -0.0832096 -2.4280744 -3.0021901 2.4280744 1 8 24.12 1.25 0.6871389 0.5628611 0.5441583 -0.0235481 -0.6871389 -1.7169995 0.6871389 1 9 0.00 0.00 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 9 0.30 7.37 5.0405264 2.3294736 0.8622187 3.0062658 -5.0405264 -0.0914001 5.0405264 1 9 0.63 9.03 6.9235672 2.1064328 1.2603304 2.1084238 -6.9235672 -0.2985264 6.9235672 1 9 1.05 7.14 7.4385514 -0.2985514 -0.6979718 0.7778375 -7.4385514 -0.5995434 7.4385514 1 9 2.02 6.33 6.9840518 -0.6540518 -0.6042005 -0.1475148 -6.9840518 -1.2452730 6.9840518 1 9 3.53 5.66 5.9720093 -0.3120093 -0.3672292 -0.2033202 -5.9720093 -2.0092912 5.9720093 1 9 5.02 5.67 5.1070724 0.5629276 0.7911880 -0.1750014 -5.1070724 -2.5173836 5.1070724 1 9 7.17 4.24 4.0748652 0.1651348 -0.1386194 -0.1396448 -4.0748652 -2.9286457 4.0748652 1 9 8.80 4.11 3.4337679 0.6762321 0.8107316 -0.1176746 -3.4337679 -3.0556734 3.4337679 1 9 11.60 3.16 2.5589770 0.6010230 0.5543364 -0.0876956 -2.5589770 -3.0296750 2.5589770 1 9 24.43 1.12 0.6651289 0.4548711 0.6044965 -0.0227938 -0.6651289 -1.6836554 0.6651289 1 10 0.00 0.24 0.0000000 0.2400000 1.0301820 0.0000000 0.0000000 0.0000000 0.0000000 1 10 0.37 2.89 5.6443647 -2.7543647 0.5189402 2.9472057 -5.6443647 -0.1299529 5.6443647 1 10 0.77 5.22 7.2263530 -2.0063530 -1.3788379 1.5919138 -7.2263530 -0.3976581 7.2263530 1 10 1.02 6.41 7.4320474 -1.0220474 -1.5209235 0.8486283 -7.4320474 -0.5779724 7.4320474 1 10 2.05 7.83 6.9633387 0.8666613 -1.5249955 -0.1538940 -6.9633387 -1.2632923 6.9633387 1 10 3.55 10.21 5.9594861 4.2505139 2.2207893 -0.2029662 -5.9594861 -2.0175925 5.9594861 1 10 5.05 9.18 5.0910078 4.0889922 1.7168166 -0.1744523 -5.0910078 -2.5255044 5.0910078 1 10 7.08 8.02 4.1135619 3.9064381 1.2095403 -0.1409709 -4.1135619 -2.9175775 4.1135619 1 10 9.38 7.14 3.2308579 3.9091421 1.3401909 -0.1107209 -3.2308579 -3.0718990 3.2308579 1 10 12.10 5.68 2.4280744 3.2519256 0.1729160 -0.0832096 -2.4280744 -3.0021901 2.4280744 1 10 23.70 2.42 0.7181253 1.7018747 -0.3965738 -0.0246100 -0.7181253 -1.7627525 0.7181253 1 11 0.00 0.00 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 11 0.25 4.86 4.5105405 0.3494595 -0.1607034 2.9495118 -4.5105405 -0.0666985 4.5105405 1 11 0.50 7.24 6.4359054 0.8040946 0.5663358 2.5903294 -6.4359054 -0.2105228 6.4359054 1 11 0.98 8.00 7.4186398 0.5813602 0.4697877 0.9491035 -7.4186398 -0.5491459 7.4186398 1 11 1.98 6.81 7.0115733 -0.2015733 -0.3448261 -0.1381102 -7.0115733 -1.2210574 7.0115733 1 11 3.60 5.87 5.9282913 -0.0582913 -0.2413138 -0.2020672 -5.9282913 -2.0381549 5.9282913 1 11 5.02 5.22 5.1070724 0.1129276 -0.0434667 -0.1750014 -5.1070724 -2.5173836 5.1070724 1 11 7.03 4.45 4.1352186 0.3147814 0.2842309 -0.1417131 -4.1352186 -2.9112241 4.1352186 1 11 9.03 3.62 3.3518218 0.2681782 0.1873670 -0.1148663 -3.3518218 -3.0637109 3.3518218 1 11 12.12 2.69 2.4229799 0.2670201 0.2104340 -0.0830350 -2.4229799 -3.0009802 2.4229799 1 11 24.08 0.86 0.6900314 0.1699686 0.2045435 -0.0236472 -0.6900314 -1.7213287 0.6900314 1 12 0.00 0.00 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 12 0.25 1.25 4.5105405 -3.2605405 -0.2522768 2.9495118 -4.5105405 -0.0666985 4.5105405 1 12 0.50 3.96 6.4359054 -2.4759054 -0.6134265 2.5903294 -6.4359054 -0.2105228 6.4359054 1 12 1.00 7.82 7.4260572 0.3939428 -0.3456609 0.8979873 -7.4260572 -0.5635673 7.4260572 1 12 2.00 9.72 6.9978278 2.7221722 0.4871511 -0.1429463 -6.9978278 -1.2331924 6.9978278 1 12 3.52 9.75 5.9782805 3.7717195 1.7047788 -0.2034959 -5.9782805 -2.0051242 5.9782805 1 12 5.07 8.57 5.0803261 3.4896739 1.4529528 -0.1740872 -5.0803261 -2.5308760 5.0803261 1 12 7.07 6.59 4.1178841 2.4721159 -0.1348789 -0.1411190 -4.1178841 -2.9163186 4.1178841 1 12 9.03 6.11 3.3518218 2.7581782 0.8253317 -0.1148663 -3.3518218 -3.0637109 3.3518218 1 12 12.05 4.57 2.4408575 2.1291425 0.0659992 -0.0836477 -2.4408575 -3.0051791 2.4408575 1 12 24.15 1.17 0.6849774 0.4850226 -1.9998250 -0.0234740 -0.6849774 -1.7137566 0.6849774 1 "],
["first-order-conditional-estimation-with-interaction-method.html", "2.2 First Order Conditional Estimation with Interaction Method", " 2.2 First Order Conditional Estimation with Interaction Method InitStep(DataAll, THETAinit=THETAinit, OMinit=OMinit, SGinit=SGinit, LB=LB, UB=UB, Pred=PRED, METHOD=&quot;COND&quot;) (EstRes = EstStep()) # 1.7 min (CovRes = CovStep()) # 44 sec get(&quot;EBE&quot;, envir=e) TabStep() "],
["laplacian-approximation-with-interacton-method.html", "2.3 Laplacian Approximation with Interacton Method", " 2.3 Laplacian Approximation with Interacton Method InitStep(DataAll, THETAinit=THETAinit, OMinit=OMinit, SGinit=SGinit, LB=LB, UB=UB, Pred=PRED, METHOD=&quot;LAPL&quot;) (EstRes = EstStep()) # 3.4 min (CovRes = CovStep()) # 52 sec get(&quot;EBE&quot;, envir=e) TabStep() "],
["-.html", "3 스크립트를 사용한 예제", " 3 스크립트를 사용한 예제 [1] “data-raw/2-THEO-R-OUT/Script-FO_v2.R” “data-raw/2-THEO-R-OUT/Script-FOCEI_v2.1.R” “data-raw/2-THEO-R-OUT/Script-FOCEI_v3.R” [4] “data-raw/2-THEO-R-OUT/Script-LAPLI_v2.1.R” "],
["fo-v2.html", "3.1 FO v2", " 3.1 FO v2 unconstrained minimization : DFP -&gt; BFGS -2LL로 잘 풀린다. \\(-\\infty to \\infty\\) DATA = Theoph colnames(DATA) = c(&quot;ID&quot;, &quot;BWT&quot;, &quot;DOSE&quot;, &quot;TIME&quot;, &quot;DV&quot;) DATA[,&quot;ID&quot;] = as.numeric(as.character(DATA[,&quot;ID&quot;])) require(lattice) xyplot(DV ~ TIME | as.factor(ID), data=DATA, type=&quot;b&quot;) ## INIT STEP IDs = unique(DATA[,&quot;ID&quot;]) ; IDs ## [1] 1 2 3 4 5 6 7 8 9 10 11 12 nID = length(IDs) ; nID ## [1] 12 nTheta = 3 nEta = 3 nEps = 2 nPara = nTheta + nEta*(nEta + 1)/2 + nEps ; nPara ## [1] 11 GNames = outer(&quot;G&quot;, 1:nEta, paste0)[1,] ; GNames ## [1] &quot;G1&quot; &quot;G2&quot; &quot;G3&quot; HNames = outer(&quot;H&quot;, 1:nEps, paste0)[1,] ; HNames ## [1] &quot;H1&quot; &quot;H2&quot; iOM = (nTheta + 1):(nTheta + nEta*(nEta + 1)/2) ; iOM ## [1] 4 5 6 7 8 9 iSG = (nTheta + nEta*(nEta + 1)/2 + 1):(nTheta + nEta*(nEta + 1)/2 + nEps) ; iSG ## [1] 10 11 IE = c(2, 50, 0.1) LB = rep(0, nTheta) UB = rep(1e6, nTheta) alpha = 0.1 - log((IE - LB)/(UB - LB)/(1 - (IE - LB)/(UB - LB))) ; alpha ## [1] 13.22236 10.00344 16.21810 p0 = rep(0.1, nTheta) p1 = exp(p0 - alpha) p2 = p1/(p1 + 1)*(UB - LB) + LB ; p2 ## [1] 2.0 50.0 0.1 OM0 = matrix(c(0.2, 0.1, 0.1, 0.1, 0.2, 0.1, 0.1, 0.1, 0.2), nrow=nEta) ; OM0 ## [,1] [,2] [,3] ## [1,] 0.2 0.1 0.1 ## [2,] 0.1 0.2 0.1 ## [3,] 0.1 0.1 0.2 SG0 = diag(c(0.1, 0.1)) ; SG0 ## [,1] [,2] ## [1,] 0.1 0.0 ## [2,] 0.0 0.1 EXPP1 = exp(0.1) ScaleVar = function(VarMat, dim1) { M1 = chol(VarMat) V1 = diag(M1) M2 = abs(10 * (M1 - diag(V1, nrow=dim1))) + diag(V1/EXPP1, nrow=dim1) return(t(M2)) } OMscl = ScaleVar(OM0, nEta) ; OMscl ## [,1] [,2] [,3] ## [1,] 0.4046556 0.000000 0.0000000 ## [2,] 2.2360680 0.350442 0.0000000 ## [3,] 2.2360680 1.290994 0.3303999 SGscl = ScaleVar(SG0, nEps) ; SGscl ## [,1] [,2] ## [1,] 0.2861347 0.0000000 ## [2,] 0.0000000 0.2861347 DesclVar = function(mUCP, mSCL) { nRow = dim(mUCP)[1] maT = matrix(nrow=nRow, ncol=nRow) for (i in 1:nRow) { for (j in 1:nRow) { if (i==j) { maT[i,j] = exp(mUCP[i,j]) * mSCL[i,j] } else if(i &gt; j) { maT[i,j] = mUCP[i,j] * mSCL[i,j] } else { maT[i,j] = 0 } } } return(maT %*% t(maT)) } DesclVar(matrix(rep(0.1, nEta*nEta), nrow=nEta), OMscl) ## [,1] [,2] [,3] ## [1,] 0.2 0.1 0.1 ## [2,] 0.1 0.2 0.1 ## [3,] 0.1 0.1 0.2 DesclVar(diag(rep(0.1, nEps)), SGscl) ## [,1] [,2] ## [1,] 0.1 0.0 ## [2,] 0.0 0.1 ltv2mat = function(vec) { LENGTH = length(vec) DIM = round((sqrt(8*LENGTH+1)-1)/2,0) if (DIM*(DIM+1)/2 != LENGTH) return(NULL) mat = matrix(nrow=DIM, ncol=DIM) for (m in 1:DIM) { for (n in 1:DIM) { k = max(m,n) l = min(m,n) p = k*(k - 1)/2 + l mat[m,n] = vec[p] } } return(mat) } s2o = function(p) { p0 = p[1:nTheta] p1 = exp(p0 - alpha) p2 = p1/(p1 + 1)*(UB - LB) + LB OM = DesclVar(ltv2mat(p[iOM]), OMscl) SG = DesclVar(diag(p[iSG]), SGscl) Res = list(p2, OM, SG) names(Res) = c(&quot;THETA&quot;, &quot;OMEGA&quot;, &quot;SIGMA&quot;) return(Res) } s2o(rep(0.1, nPara)) ## $THETA ## [1] 2.0 50.0 0.1 ## ## $OMEGA ## [,1] [,2] [,3] ## [1,] 0.2 0.1 0.1 ## [2,] 0.1 0.2 0.1 ## [3,] 0.1 0.1 0.2 ## ## $SIGMA ## [,1] [,2] ## [1,] 0.1 0.0 ## [2,] 0.0 0.1 ## EST STEP PRED = function(THETA, ETA) { # Extern: DATA[,c(&quot;ID&quot;, &quot;TIME&quot;, &quot;DV&quot;)], cID, DOSE KA = THETA[1]*exp(ETA[1]) V = THETA[2]*exp(ETA[2]) K = THETA[3]*exp(ETA[3]) TIME = DATA[DATA$ID == cID, &quot;TIME&quot;] TERM1 = KA/(KA - K) TERM2 = K /(KA - K) TERM3 = 320/V*TERM1 TERM4 = exp(-K*TIME) TERM5 = exp(-KA*TIME) F = TERM3*(TERM4 - TERM5) G1 = -F*TERM2 + KA*TIME*TERM3*TERM5 G2 = -F G3 = F*TERM2 - K*TIME*TERM3*TERM4 H1 = F H2 = 1 return(cbind(F, G1, G2, G3, H1, H2)) } OBJ0 = function(p) { # External: DATA, nTheta, nEta, nEps if (STEP == &quot;EST&quot;) { r = s2o(p) THETA = r$THETA OM = r$OMEGA SG = r$SIGMA } else { THETA = p[1:nTheta] OM = ltv2mat(p[iOM]) SG = diag(p[iSG]) } Oi = vector(length=nID) for (i in 1:nID) { cID &lt;&lt;- IDs[i] # for PRED FGH = PRED(THETA, rep(0, nEta)) Fi = FGH[, &quot;F&quot;] Gi = FGH[, GNames, drop=FALSE] Hi = FGH[, HNames, drop=FALSE] Ri = DATA[DATA$ID == cID, &quot;DV&quot;] - Fi Ci = Gi %*% OM %*% t(Gi) + diag(diag(Hi %*% SG %*% t(Hi))) Oi[i] = determinant(Ci, logarithm=TRUE)$modulus[[1]] + t(Ri) %*% solve(Ci) %*% Ri } return(sum(Oi)) } STEP = &quot;EST&quot; OBJ0(rep(0.1, nPara)) ## [1] 141.3076 StartTime = Sys.time() r0 = optim(rep(0.1, nPara), OBJ0, method=&quot;L-BFGS-B&quot;) difftime(Sys.time(), StartTime) ## Time difference of 3.561204 secs r0 ## $par ## [1] 0.56041759 -0.16783539 0.14896236 0.99514304 0.05616672 ## [6] -1.03246853 0.15122721 0.00577673 0.11093646 -0.95689977 ## [11] -0.20555931 ## ## $value ## [1] 57.32106 ## ## $counts ## function gradient ## 74 74 ## ## $convergence ## [1] 0 ## ## $message ## [1] &quot;CONVERGENCE: REL_REDUCTION_OF_F &lt;= FACTR*EPSMCH&quot; OBJ0(r0$par) ## [1] 57.32106 r1 = s2o(r0$par) ; r1 ## $THETA ## [1] 3.1694675 38.2521346 0.1050181 ## ## $OMEGA ## [,1] [,2] [,3] ## [1,] 1.1982332 0.13747849 0.37015671 ## [2,] 0.1374785 0.03134899 0.04340042 ## [3,] 0.3701567 0.04340042 0.25068582 ## ## $SIGMA ## [,1] [,2] ## [1,] 0.01207782 0.00000000 ## [2,] 0.00000000 0.05427434 ## COV STEP STEP = &quot;COV&quot; p = c(r1$THETA, r1$OMEGA[upper.tri(r1$OMEGA, diag=TRUE)], diag(r1$SIGMA)) OBJ0(p) ## [1] 57.32106 require(numDeriv) Rmat = hessian(OBJ0, p)/2 ; Rmat ## [,1] [,2] [,3] [,4] [,5] ## [1,] 17.924787 -1.3343223 -162.767653 -4.1309684 21.546406 ## [2,] -1.334322 0.5507357 -7.672315 0.1118323 -1.462878 ## [3,] -162.767653 -7.6723151 34333.363163 86.0269317 433.962389 ## [4,] -4.130968 0.1118323 86.026932 28.6263099 -177.270132 ## [5,] 21.546406 -1.4628780 433.962389 -177.2701321 1930.445861 ## [6,] 10.225926 -16.5210392 13.387661 272.9370802 -4270.878855 ## [7,] -11.022690 2.9849069 -90.741388 -52.9261902 210.709297 ## [8,] 52.304346 -18.2457137 956.482105 164.3158074 -1421.957489 ## [9,] 7.044855 -2.2338946 -1350.939645 24.4536956 -43.763543 ## [10,] 248.456481 -120.7991176 -7033.212479 50.2328796 -1013.856695 ## [11,] -1.752135 -5.2052277 -1992.414204 6.0120605 124.417558 ## [,6] [,7] [,8] [,9] [,10] ## [1,] 10.22593 -11.022690 52.30435 7.044855 248.45648 ## [2,] -16.52104 2.984907 -18.24571 -2.233895 -120.79912 ## [3,] 13.38766 -90.741388 956.48211 -1350.939645 -7033.21248 ## [4,] 272.93708 -52.926190 164.31581 24.453696 50.23288 ## [5,] -4270.87885 210.709297 -1421.95749 -43.763543 -1013.85669 ## [6,] 16610.43950 -139.814375 1113.59896 18.726075 4680.60001 ## [7,] -139.81438 213.228948 -555.99366 -151.083274 96.25915 ## [8,] 1113.59896 -555.993662 4043.51429 130.794761 -555.76919 ## [9,] 18.72608 -151.083274 130.79476 236.875935 -20.42601 ## [10,] 4680.60001 96.259151 -555.76919 -20.426008 192857.05269 ## [11,] -46.02961 -62.941134 -201.26761 92.656858 6568.90926 ## [,11] ## [1,] -1.752135 ## [2,] -5.205228 ## [3,] -1992.414204 ## [4,] 6.012060 ## [5,] 124.417558 ## [6,] -46.029611 ## [7,] -62.941134 ## [8,] -201.267608 ## [9,] 92.656858 ## [10,] 6568.909261 ## [11,] 3974.804411 OiS0 = function(p) { THETA = p[1:nTheta] OM = ltv2mat(p[iOM]) SG = diag(p[iSG]) FGH = PRED(THETA, rep(0, nEta)) Fi = FGH[, &quot;F&quot;] Gi = FGH[, GNames, drop=FALSE] Hi = FGH[, HNames, drop=FALSE] Ri = DATA[DATA$ID == cID,&quot;DV&quot;] - Fi Ci = Gi %*% OM %*% t(Gi) + diag(diag(Hi %*% SG %*% t(Hi))) return(determinant(Ci, logarithm=TRUE)$modulus[[1]] + t(Ri) %*% solve(Ci) %*% Ri) } CalcSmat = function(p) { Smat = matrix(rep(0, nPara*nPara), nrow=nPara, ncol=nPara) for (i in 1:nID) { cID &lt;&lt;- IDs[i] # for PRED gr = grad(OiS0, p) Smat = Smat + gr %*% t(gr) } return(Smat/4) } Smat = CalcSmat(p) ; Smat ## [,1] [,2] [,3] [,4] [,5] ## [1,] 78.316509 -4.6468525 -1295.13191 -11.873085 142.72166 ## [2,] -4.646852 0.7648878 64.36589 2.623533 -28.61925 ## [3,] -1295.131912 64.3658905 183632.39764 -230.636162 840.38206 ## [4,] -11.873085 2.6235333 -230.63616 18.368717 -171.71680 ## [5,] 142.721656 -28.6192548 840.38206 -171.716797 2005.81555 ## [6,] -145.835180 29.4905951 9000.10301 291.779621 -3809.95413 ## [7,] -26.707401 0.2387057 3794.27701 -19.686951 51.76139 ## [8,] 44.375129 10.7614126 -10813.66424 84.841787 -765.19107 ## [9,] 13.946014 -4.4042212 -6396.75145 3.480209 87.90130 ## [10,] 2039.647975 -397.4745828 -4148.02599 -1170.279742 8916.77591 ## [11,] 279.500821 -47.3111186 -60483.51058 -22.729234 670.78878 ## [,6] [,7] [,8] [,9] [,10] ## [1,] -145.8352 -26.7074013 44.37513 13.946014 2039.6480 ## [2,] 29.4906 0.2387057 10.76141 -4.404221 -397.4746 ## [3,] 9000.1030 3794.2770107 -10813.66424 -6396.751451 -4148.0260 ## [4,] 291.7796 -19.6869514 84.84179 3.480209 -1170.2797 ## [5,] -3809.9541 51.7613856 -765.19107 87.901299 8916.7759 ## [6,] 12023.2866 188.5688381 667.62858 -711.894535 -3829.1367 ## [7,] 188.5688 129.3349734 -292.66398 -155.764409 1796.9713 ## [8,] 667.6286 -292.6639768 1121.03184 294.247252 -10631.8776 ## [9,] -711.8945 -155.7644085 294.24725 327.282119 1812.2113 ## [10,] -3829.1367 1796.9713404 -10631.87756 1812.211295 419517.6549 ## [11,] -3489.0152 -1105.9230938 2773.71155 2358.454997 18067.4266 ## [,11] ## [1,] 279.50082 ## [2,] -47.31112 ## [3,] -60483.51058 ## [4,] -22.72923 ## [5,] 670.78878 ## [6,] -3489.01517 ## [7,] -1105.92309 ## [8,] 2773.71155 ## [9,] 2358.45500 ## [10,] 18067.42664 ## [11,] 24042.66055 invR = solve(Rmat) ; invR ## [,1] [,2] [,3] [,4] [,5] ## [1,] 1.128093e-01 0.212821495 1.701101e-03 0.0629976765 -0.0001367169 ## [2,] 2.128215e-01 7.871040457 4.285942e-03 0.5738863313 0.2083765088 ## [3,] 1.701101e-03 0.004285942 9.903405e-05 0.0003458230 -0.0001888639 ## [4,] 6.299768e-02 0.573886331 3.458230e-04 0.3286772584 0.0454523760 ## [5,] -1.367169e-04 0.208376509 -1.888639e-04 0.0454523760 0.0121273031 ## [6,] -7.123389e-04 0.045812539 -4.514295e-05 0.0065237909 0.0023505042 ## [7,] 4.500080e-02 0.240361448 1.472203e-03 0.1018670463 0.0102397720 ## [8,] 1.996858e-03 0.097532662 6.688711e-05 0.0154190850 0.0040915607 ## [9,] 2.899991e-02 0.166768659 1.369319e-03 0.0358621118 0.0025964962 ## [10,] -5.302516e-06 0.004732284 1.933695e-06 0.0002761625 0.0001307504 ## [11,] 1.228315e-03 0.002726223 5.245363e-05 0.0002097793 -0.0001502654 ## [,6] [,7] [,8] [,9] [,10] ## [1,] -7.123389e-04 0.0450007979 1.996858e-03 2.899991e-02 -5.302516e-06 ## [2,] 4.581254e-02 0.2403614483 9.753266e-02 1.667687e-01 4.732284e-03 ## [3,] -4.514295e-05 0.0014722030 6.688711e-05 1.369319e-03 1.933695e-06 ## [4,] 6.523791e-03 0.1018670463 1.541909e-02 3.586211e-02 2.761625e-04 ## [5,] 2.350504e-03 0.0102397720 4.091561e-03 2.596496e-03 1.307504e-04 ## [6,] 5.519193e-04 0.0011726093 7.917993e-04 2.390861e-04 2.808629e-05 ## [7,] 1.172609e-03 0.0673374468 7.348411e-03 3.913003e-02 1.039152e-04 ## [8,] 7.917993e-04 0.0073484111 2.137431e-03 3.833604e-03 6.023909e-05 ## [9,] 2.390861e-04 0.0391300268 3.833604e-03 3.207130e-02 8.633065e-05 ## [10,] 2.808629e-05 0.0001039152 6.023909e-05 8.633065e-05 8.581527e-06 ## [11,] -3.332693e-05 0.0009660288 5.558190e-05 7.082678e-04 -8.519860e-06 ## [,11] ## [1,] 1.228315e-03 ## [2,] 2.726223e-03 ## [3,] 5.245363e-05 ## [4,] 2.097793e-04 ## [5,] -1.502654e-04 ## [6,] -3.332693e-05 ## [7,] 9.660288e-04 ## [8,] 5.558190e-05 ## [9,] 7.082678e-04 ## [10,] -8.519860e-06 ## [11,] 3.016709e-04 Cov = invR %*% Smat %*% invR ; Cov ## [,1] [,2] [,3] [,4] [,5] ## [1,] 0.410979134 0.339158154 5.746694e-03 0.205808962 2.003773e-03 ## [2,] 0.339158154 2.839959187 5.032614e-03 0.337602832 3.490465e-02 ## [3,] 0.005746694 0.005032614 5.323183e-04 0.001629451 -1.041991e-03 ## [4,] 0.205808962 0.337602832 1.629451e-03 0.176918914 1.951490e-02 ## [5,] 0.002003773 0.034904652 -1.041991e-03 0.019514902 6.756428e-03 ## [6,] -0.002192524 0.012804811 -2.503963e-04 0.003207225 1.504690e-03 ## [7,] 0.121589083 0.149089335 7.111900e-03 0.057573149 -1.010198e-02 ## [8,] 0.000997110 0.023865634 6.271268e-05 0.004215844 8.584714e-04 ## [9,] 0.066992408 0.057326167 6.226096e-03 0.017986255 -1.309239e-02 ## [10,] 0.001050012 0.001807747 5.805488e-05 0.000514357 -7.516774e-05 ## [11,] -0.004972900 -0.009950377 -4.790609e-04 -0.001014500 9.532948e-04 ## [,6] [,7] [,8] [,9] [,10] ## [1,] -2.192524e-03 0.1215890832 9.971100e-04 0.0669924076 1.050012e-03 ## [2,] 1.280481e-02 0.1490893349 2.386563e-02 0.0573261669 1.807747e-03 ## [3,] -2.503963e-04 0.0071119003 6.271268e-05 0.0062260963 5.805488e-05 ## [4,] 3.207225e-03 0.0575731489 4.215844e-03 0.0179862554 5.143570e-04 ## [5,] 1.504690e-03 -0.0101019773 8.584714e-04 -0.0130923870 -7.516774e-05 ## [6,] 3.925540e-04 -0.0028272754 2.326326e-04 -0.0032697940 -2.051326e-05 ## [7,] -2.827275e-03 0.1157858551 3.116262e-03 0.0940102391 9.767199e-04 ## [8,] 2.326326e-04 0.0031162621 5.314013e-04 0.0018656810 2.786064e-05 ## [9,] -3.269794e-03 0.0940102391 1.865681e-03 0.0838243353 8.055388e-04 ## [10,] -2.051326e-05 0.0009767199 2.786064e-05 0.0008055388 1.279440e-05 ## [11,] 1.806783e-04 -0.0038608272 2.199601e-04 -0.0033970159 -2.824858e-05 ## [,11] ## [1,] -4.972900e-03 ## [2,] -9.950377e-03 ## [3,] -4.790609e-04 ## [4,] -1.014500e-03 ## [5,] 9.532948e-04 ## [6,] 1.806783e-04 ## [7,] -3.860827e-03 ## [8,] 2.199601e-04 ## [9,] -3.397016e-03 ## [10,] -2.824858e-05 ## [11,] 1.029016e-03 SE = sqrt(diag(Cov)) ; SE ## [1] 0.641076543 1.685217846 0.023072024 0.420617301 0.082197495 ## [6] 0.019812975 0.340273207 0.023052143 0.289524326 0.003576926 ## [11] 0.032078283 Correl = cov2cor(Cov) ; Correl ## [,1] [,2] [,3] [,4] [,5] [,6] ## [1,] 1.00000000 0.3139325 0.3885281 0.76325079 0.03802594 -0.1726174 ## [2,] 0.31393254 1.0000000 0.1294351 0.47628061 0.25198151 0.3835018 ## [3,] 0.38852814 0.1294351 1.0000000 0.16790691 -0.54943906 -0.5477628 ## [4,] 0.76325079 0.4762806 0.1679069 1.00000000 0.56444374 0.3848509 ## [5,] 0.03802594 0.2519815 -0.5494391 0.56444374 1.00000000 0.9239295 ## [6,] -0.17261745 0.3835018 -0.5477628 0.38485092 0.92392947 1.0000000 ## [7,] 0.55738714 0.2599937 0.9058832 0.40225838 -0.36117697 -0.4193635 ## [8,] 0.06747173 0.6143355 0.1179121 0.43479661 0.45306023 0.5093421 ## [9,] 0.36093637 0.1174929 0.9320626 0.14769594 -0.55014250 -0.5700141 ## [10,] 0.45790382 0.2998966 0.7034659 0.34187511 -0.25566007 -0.2894510 ## [11,] -0.24181804 -0.1840655 -0.6472826 -0.07518893 0.36154097 0.2842792 ## [,7] [,8] [,9] [,10] [,11] ## [1,] 0.5573871 0.06747173 0.3609364 0.4579038 -0.24181804 ## [2,] 0.2599937 0.61433553 0.1174929 0.2998966 -0.18406549 ## [3,] 0.9058832 0.11791210 0.9320626 0.7034659 -0.64728262 ## [4,] 0.4022584 0.43479661 0.1476959 0.3418751 -0.07518893 ## [5,] -0.3611770 0.45306023 -0.5501425 -0.2556601 0.36154097 ## [6,] -0.4193635 0.50934214 -0.5700141 -0.2894510 0.28427924 ## [7,] 1.0000000 0.39727837 0.9542504 0.8024764 -0.35370524 ## [8,] 0.3972784 1.00000000 0.2795381 0.3378857 0.29745511 ## [9,] 0.9542504 0.27953812 1.0000000 0.7778421 -0.36576437 ## [10,] 0.8024764 0.33788566 0.7778421 1.0000000 -0.24619292 ## [11,] -0.3537052 0.29745511 -0.3657644 -0.2461929 1.00000000 InvCov = Rmat %*% solve(Smat) %*% Rmat ; InvCov ## [,1] [,2] [,3] [,4] [,5] ## [1,] 106.16085 -68.57396 6449.005 335.8698 -2554.409 ## [2,] -68.57396 58.03937 -4878.746 -302.1420 2175.297 ## [3,] 6449.00518 -4878.74595 589180.813 26966.6056 -188642.064 ## [4,] 335.86981 -302.14199 26966.606 1681.5577 -11681.345 ## [5,] -2554.40930 2175.29713 -188642.064 -11681.3454 84767.296 ## [6,] -386.87906 570.22269 -66147.108 -3404.8906 13635.514 ## [7,] -1202.16352 939.99684 -90186.464 -5086.8917 35747.139 ## [8,] 10794.57613 -8973.04619 795473.401 47387.2333 -336778.078 ## [9,] -49.38189 87.68164 -10522.264 -442.6127 3308.451 ## [10,] 11656.77320 -10122.84528 899033.053 53311.6417 -378718.155 ## [11,] -1043.11500 1001.74635 -47225.438 -4879.5431 35063.037 ## [,6] [,7] [,8] [,9] [,10] ## [1,] -386.8791 -1202.1635 10794.576 -49.38189 11656.77 ## [2,] 570.2227 939.9968 -8973.046 87.68164 -10122.85 ## [3,] -66147.1076 -90186.4644 795473.401 -10522.26422 899033.05 ## [4,] -3404.8906 -5086.8917 47387.233 -442.61274 53311.64 ## [5,] 13635.5139 35747.1392 -336778.078 3308.45106 -378718.15 ## [6,] 72186.1476 10923.7505 -116902.684 2827.92041 -138707.41 ## [7,] 10923.7505 16640.0641 -149635.854 965.72201 -166637.08 ## [8,] -116902.6837 -149635.8537 1416416.078 -14025.70053 1587796.17 ## [9,] 2827.9204 965.7220 -14025.701 954.65515 -20047.21 ## [10,] -138707.4088 -166637.0773 1587796.173 -20047.21139 2031529.80 ## [11,] 15687.7656 14275.7792 -151936.735 935.29901 -170271.34 ## [,11] ## [1,] -1043.115 ## [2,] 1001.746 ## [3,] -47225.438 ## [4,] -4879.543 ## [5,] 35063.037 ## [6,] 15687.766 ## [7,] 14275.779 ## [8,] -151936.735 ## [9,] 935.299 ## [10,] -170271.338 ## [11,] 28036.555 EigenVal = sort(eigen(Correl)$values) ; EigenVal # Sorted Eigenvalues ## [1] 0.0002519304 0.0096729015 0.0108358603 0.0233184647 0.0520725529 ## [6] 0.2982375011 0.5047779153 0.9114702285 1.2088053381 3.2082379615 ## [11] 4.7723193459 ## POSTHOC ETA (EBE) ObjEta = function(ETA) { # External: THETA, invOM, SG, cID, DATA[,&quot;DV&quot;] FGH = PRED(THETA, ETA) Ri = DATA[DATA$ID == cID, &quot;DV&quot;] - FGH[,&quot;F&quot;] if (INTER == TRUE) { Hi = FGH[, HNames, drop=FALSE] } else { FGH0 = PRED(THETA, rep(0, nEta)) Hi = FGH0[, HNames, drop=FALSE] } ## Slower version Vi = diag(diag(Hi %*% SG %*% t(Hi))) iSum = log(det(Vi)) + t(Ri) %*% solve(Vi) %*% Ri + t(ETA) %*% invOM %*% ETA ## Faster version # Vi = diag(Hi %*% SG %*% t(Hi)) # iSum = sum(log(Vi) + Ri*Ri/Vi) + t(ETA) %*% invOM %*% ETA return(iSum) } INTER = FALSE THETA = r1$THETA invOM = solve(r1$OMEGA) SG = r1$SIGMA EBE = cbind(ID=IDs, ETA1=0, ETA2=0, ETA3=0) for (i in 1:nID) { cID &lt;&lt;- i EBE[i,2:4] = optim(rep(0, nEta), ObjEta, method=&quot;BFGS&quot;)$par } ; EBE ## ID ETA1 ETA2 ETA3 ## [1,] 1 -0.6367109 -0.232258352 -0.73648224 ## [2,] 2 -0.5895843 -0.153341805 -0.06619115 ## [3,] 3 -0.3083755 -0.124816676 -0.21013190 ## [4,] 4 -1.0305984 -0.186821177 -0.21195510 ## [5,] 5 -0.8235560 -0.302352127 -0.24453948 ## [6,] 6 -1.0025271 0.068181532 -0.08745089 ## [7,] 7 -1.4316285 -0.097903076 -0.13802639 ## [8,] 8 -0.7541785 -0.039239022 -0.19621190 ## [9,] 9 0.7875803 0.010757282 -0.19937965 ## [10,] 10 -1.4555649 -0.369057237 -0.40057581 ## [11,] 11 0.1541451 -0.005061315 -0.08005791 ## [12,] 12 -1.2863346 -0.388864841 -0.10134440 ## sdtab SqrtInvCov = function(M) { EigenResult = eigen(as.matrix(M)) EigenVector = EigenResult$vectors EigenValues = abs(EigenResult$values) return(EigenVector %*% diag(1/sqrt(EigenValues)) %*% t(EigenVector)) } OM = r1$OMEGA tSD = vector() for (i in 1:nID) { cID = IDs[i] FGH0 = PRED(THETA, rep(0, nEta)) G0i = FGH0[, GNames, drop=FALSE] H0i = FGH0[, HNames, drop=FALSE] R0i = DATA[DATA$ID == cID, &quot;DV&quot;] - FGH0[,&quot;F&quot;] C0i = G0i %*% OM %*% t(G0i) + diag(diag(H0i %*% SG %*% t(H0i))) WRES = SqrtInvCov(C0i) %*% R0i tSD = rbind(tSD, cbind(DATA[DATA$ID == cID, c(&quot;ID&quot;, &quot;TIME&quot;, &quot;DV&quot;)], PRED=FGH0[,&quot;F&quot;], RES=R0i, WRES, G0i, H0i)) } ; tSD ID TIME DV PRED RES WRES G1 G2 G3 H1 H2 1 0.00 0.74 0.0000000 0.7400000 3.1763946 0.0000000 0.0000000 0.0000000 0.0000000 1 1 0.25 2.84 4.5105405 -1.6705405 -0.1410858 2.9495118 -4.5105405 -0.0666985 4.5105405 1 1 0.57 6.57 6.7287024 -0.1587024 0.4536838 2.3362228 -6.7287024 -0.2572405 6.7287024 1 1 1.12 10.50 7.4435438 3.0564562 1.9983679 0.6273251 -7.4435438 -0.6496609 7.4435438 1 1 2.02 9.66 6.9840518 2.6759482 0.3614061 -0.1475148 -6.9840518 -1.2452730 6.9840518 1 1 3.82 8.58 5.7929403 2.7870597 -0.2128442 -0.1979448 -5.7929403 -2.1254447 5.7929403 1 1 5.10 8.36 5.0643456 3.2956544 0.2574109 -0.1735408 -5.0643456 -2.5388704 5.0643456 1 1 7.03 7.47 4.1352186 3.3347814 0.0668003 -0.1417131 -4.1352186 -2.9112241 4.1352186 1 1 9.05 6.89 3.3447892 3.5452108 0.5296288 -0.1146253 -3.3447892 -3.0643080 3.3447892 1 1 12.12 5.94 2.4229799 3.5170201 1.0898025 -0.0830350 -2.4229799 -3.0009802 2.4229799 1 1 24.37 3.28 0.6693332 2.6106668 3.8205329 -0.0229379 -0.6693332 -1.6900802 0.6693332 1 2 0.00 0.00 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 2 0.27 1.72 4.7334772 -3.0134772 -2.9055214 2.9842866 -4.7334772 -0.0762590 4.7334772 1 2 0.52 7.91 6.5276262 1.3823738 2.8285726 2.5200652 -6.5276262 -0.2236820 6.5276262 1 2 1.00 8.31 7.4260572 0.8839428 0.5510212 0.8979873 -7.4260572 -0.5635673 7.4260572 1 2 1.92 8.33 7.0525860 1.2774140 0.2361516 -0.1218596 -7.0525860 -1.1843260 7.0525860 1 2 3.50 6.85 5.9908424 0.8591576 -0.3922446 -0.2038445 -5.9908424 -1.9967571 5.9908424 1 2 5.02 6.08 5.1070724 0.9729276 -0.1798528 -0.1750014 -5.1070724 -2.5173836 5.1070724 1 2 7.03 5.40 4.1352186 1.2647814 0.5345463 -0.1417131 -4.1352186 -2.9112241 4.1352186 1 2 9.00 4.55 3.3623985 1.1876015 0.6776582 -0.1152287 -3.3623985 -3.0627851 3.3623985 1 2 12.00 3.01 2.4537079 0.5562921 -0.5079217 -0.0840881 -2.4537079 -3.0081163 2.4537079 1 2 24.30 0.90 0.6742717 0.2257283 -0.2578177 -0.0231072 -0.6742717 -1.6975934 0.6742717 1 3 0.00 0.00 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 3 0.27 4.40 4.7334772 -0.3334772 0.1664304 2.9842866 -4.7334772 -0.0762590 4.7334772 1 3 0.58 6.90 6.7644741 0.1355259 0.2068213 2.2985453 -6.7644741 -0.2640520 6.7644741 1 3 1.02 8.20 7.4320474 0.7679526 0.3030312 0.8486283 -7.4320474 -0.5779724 7.4320474 1 3 2.02 7.80 6.9840518 0.8159482 -0.1402471 -0.1475148 -6.9840518 -1.2452730 6.9840518 1 3 3.62 7.50 5.9158586 1.5841414 0.7334983 -0.2017027 -5.9158586 -2.0463040 5.9158586 1 3 5.08 6.20 5.0749937 1.1250063 -0.0270016 -0.1739049 -5.0749937 -2.5335492 5.0749937 1 3 7.07 5.30 4.1178841 1.1821159 0.0235648 -0.1411190 -4.1178841 -2.9163186 4.1178841 1 3 9.00 4.90 3.3623985 1.5376015 0.8850658 -0.1152287 -3.3623985 -3.0627851 3.3623985 1 3 12.15 3.70 2.4153582 1.2846418 0.6447719 -0.0827739 -2.4153582 -2.9991500 2.4153582 1 3 24.17 1.05 0.6835403 0.3664597 -0.7220317 -0.0234248 -0.6835403 -1.7115966 0.6835403 1 4 0.00 0.00 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 4 0.35 1.89 5.4866030 -3.5966030 -1.1661211 2.9772667 -5.4866030 -0.1185223 5.4866030 1 4 0.60 4.60 6.8319391 -2.2319391 -0.7148509 2.2227078 -6.8319391 -0.2777626 6.8319391 1 4 1.07 8.60 7.4413541 1.1586459 1.0781971 0.7327708 -7.4413541 -0.6138959 7.4413541 1 4 2.13 8.38 6.9078934 1.4721066 0.0183608 -0.1684060 -6.9078934 -1.3107482 6.9078934 1 4 3.50 7.54 5.9908424 1.5491576 -0.1388870 -0.2038445 -5.9908424 -1.9967571 5.9908424 1 4 5.02 6.88 5.1070724 1.7729276 0.1105991 -0.1750014 -5.1070724 -2.5173836 5.1070724 1 4 7.02 5.78 4.1395636 1.6404364 -0.1250229 -0.1418620 -4.1395636 -2.9099357 4.1395636 1 4 9.02 5.33 3.3553437 1.9746563 0.7634901 -0.1149870 -3.3553437 -3.0634063 3.3553437 1 4 11.98 4.19 2.4588670 1.7311330 0.6951002 -0.0842649 -2.4588670 -3.0092766 2.4588670 1 4 24.65 1.15 0.6499379 0.5000621 -0.8268959 -0.0222732 -0.6499379 -1.6602183 0.6499379 1 5 0.00 0.00 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 5 0.30 2.02 5.0405264 -3.0205264 -1.4558035 3.0062658 -5.0405264 -0.0914001 5.0405264 1 5 0.52 5.63 6.5276262 -0.8976262 0.2805003 2.5200652 -6.5276262 -0.2236820 6.5276262 1 5 1.00 11.40 7.4260572 3.9739428 3.4263914 0.8979873 -7.4260572 -0.5635673 7.4260572 1 5 2.02 9.33 6.9840518 2.3459482 -0.0818415 -0.1475148 -6.9840518 -1.2452730 6.9840518 1 5 3.50 8.74 5.9908424 2.7491576 0.2565310 -0.2038445 -5.9908424 -1.9967571 5.9908424 1 5 5.02 7.56 5.1070724 2.4529276 -0.1647954 -0.1750014 -5.1070724 -2.5173836 5.1070724 1 5 7.02 7.09 4.1395636 2.9504364 0.9824380 -0.1418620 -4.1395636 -2.9099357 4.1395636 1 5 9.10 5.90 3.3272720 2.5727280 0.6794489 -0.1140250 -3.3272720 -3.0657310 3.3272720 1 5 12.00 4.37 2.4537079 1.9162921 -0.2102321 -0.0840881 -2.4537079 -3.0081163 2.4537079 1 5 24.35 1.57 0.6707405 0.8992595 0.0359092 -0.0229861 -0.6707405 -1.6922249 0.6707405 1 6 0.00 0.00 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 6 0.27 1.29 4.7334772 -3.4434772 -1.0413426 2.9842866 -4.7334772 -0.0762590 4.7334772 1 6 0.58 3.08 6.7644741 -3.6844741 -1.8367040 2.2985453 -6.7644741 -0.2640520 6.7644741 1 6 1.15 6.44 7.4418947 -1.0018947 -0.1786034 0.5688358 -7.4418947 -0.6710296 7.4418947 1 6 2.03 6.32 6.9771535 -0.6571535 -0.5592682 -0.1497028 -6.9771535 -1.2512930 6.9771535 1 6 3.57 5.53 5.9469889 -0.4169889 -0.5443110 -0.2026089 -5.9469889 -2.0258501 5.9469889 1 6 5.00 4.94 5.1178103 -0.1778103 -0.3496291 -0.1753684 -5.1178103 -2.5119273 5.1178103 1 6 7.00 4.02 4.1482673 -0.1282673 -0.4683816 -0.1421603 -4.1482673 -2.9073412 4.1482673 1 6 9.22 3.46 3.2856043 0.1743957 0.0168195 -0.1125970 -3.2856043 -3.0687443 3.2856043 1 6 12.10 2.78 2.4280744 0.3519256 0.4165094 -0.0832096 -2.4280744 -3.0021901 2.4280744 1 6 23.85 0.92 0.7069015 0.2130985 0.2063776 -0.0242254 -0.7069015 -1.7463376 0.7069015 1 7 0.00 0.15 0.0000000 0.1500000 0.6438638 0.0000000 0.0000000 0.0000000 0.0000000 1 7 0.25 0.85 4.5105405 -3.6605405 -0.4814157 2.9495118 -4.5105405 -0.0666985 4.5105405 1 7 0.50 2.35 6.4359054 -4.0859054 -1.6537327 2.5903294 -6.4359054 -0.2105228 6.4359054 1 7 1.02 5.02 7.4320474 -2.4120474 -1.8445246 0.8486283 -7.4320474 -0.5779724 7.4320474 1 7 2.02 6.58 6.9840518 -0.4040518 -1.0253254 -0.1475148 -6.9840518 -1.2452730 6.9840518 1 7 3.48 7.09 6.0034303 1.0865697 0.5127380 -0.2041892 -6.0034303 -1.9883461 6.0034303 1 7 5.00 6.66 5.1178103 1.5421897 1.0796842 -0.1753684 -5.1178103 -2.5119273 5.1178103 1 7 6.98 5.25 4.1569893 1.0930107 0.1699521 -0.1424592 -4.1569893 -2.9047229 4.1569893 1 7 9.00 4.39 3.3623985 1.0276015 -0.0660540 -0.1152287 -3.3623985 -3.0627851 3.3623985 1 7 12.05 3.53 2.4408575 1.0891425 0.1438786 -0.0836477 -2.4408575 -3.0051791 2.4408575 1 7 24.22 1.15 0.6799605 0.4700395 -0.5029441 -0.0233021 -0.6799605 -1.7062031 0.6799605 1 8 0.00 0.00 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 8 0.25 3.05 4.5105405 -1.4605405 0.8350219 2.9495118 -4.5105405 -0.0666985 4.5105405 1 8 0.52 3.05 6.5276262 -3.4776262 -2.6239966 2.5200652 -6.5276262 -0.2236820 6.5276262 1 8 0.98 7.31 7.4186398 -0.1086398 0.3053188 0.9491035 -7.4186398 -0.5491459 7.4186398 1 8 2.02 7.56 6.9840518 0.5759482 0.1197358 -0.1475148 -6.9840518 -1.2452730 6.9840518 1 8 3.53 6.59 5.9720093 0.6179907 -0.0629521 -0.2033202 -5.9720093 -2.0092912 5.9720093 1 8 5.05 5.88 5.0910078 0.7889922 0.0745279 -0.1744523 -5.0910078 -2.5255044 5.0910078 1 8 7.15 4.73 4.0834329 0.6465671 -0.3061602 -0.1399384 -4.0834329 -2.9262267 4.0834329 1 8 9.07 4.57 3.3377713 1.2322287 0.9663034 -0.1143848 -3.3377713 -3.0648891 3.3377713 1 8 12.10 3.00 2.4280744 0.5719256 -0.5748610 -0.0832096 -2.4280744 -3.0021901 2.4280744 1 8 24.12 1.25 0.6871389 0.5628611 0.5441583 -0.0235481 -0.6871389 -1.7169995 0.6871389 1 9 0.00 0.00 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 9 0.30 7.37 5.0405264 2.3294736 0.8622187 3.0062658 -5.0405264 -0.0914001 5.0405264 1 9 0.63 9.03 6.9235672 2.1064328 1.2603304 2.1084238 -6.9235672 -0.2985264 6.9235672 1 9 1.05 7.14 7.4385514 -0.2985514 -0.6979718 0.7778375 -7.4385514 -0.5995434 7.4385514 1 9 2.02 6.33 6.9840518 -0.6540518 -0.6042005 -0.1475148 -6.9840518 -1.2452730 6.9840518 1 9 3.53 5.66 5.9720093 -0.3120093 -0.3672292 -0.2033202 -5.9720093 -2.0092912 5.9720093 1 9 5.02 5.67 5.1070724 0.5629276 0.7911880 -0.1750014 -5.1070724 -2.5173836 5.1070724 1 9 7.17 4.24 4.0748652 0.1651348 -0.1386194 -0.1396448 -4.0748652 -2.9286457 4.0748652 1 9 8.80 4.11 3.4337679 0.6762321 0.8107316 -0.1176746 -3.4337679 -3.0556734 3.4337679 1 9 11.60 3.16 2.5589770 0.6010230 0.5543364 -0.0876956 -2.5589770 -3.0296750 2.5589770 1 9 24.43 1.12 0.6651289 0.4548711 0.6044965 -0.0227938 -0.6651289 -1.6836554 0.6651289 1 10 0.00 0.24 0.0000000 0.2400000 1.0301820 0.0000000 0.0000000 0.0000000 0.0000000 1 10 0.37 2.89 5.6443647 -2.7543647 0.5189401 2.9472057 -5.6443647 -0.1299529 5.6443647 1 10 0.77 5.22 7.2263530 -2.0063530 -1.3788379 1.5919138 -7.2263530 -0.3976581 7.2263530 1 10 1.02 6.41 7.4320474 -1.0220474 -1.5209235 0.8486283 -7.4320474 -0.5779724 7.4320474 1 10 2.05 7.83 6.9633387 0.8666613 -1.5249955 -0.1538940 -6.9633387 -1.2632923 6.9633387 1 10 3.55 10.21 5.9594861 4.2505139 2.2207893 -0.2029662 -5.9594861 -2.0175925 5.9594861 1 10 5.05 9.18 5.0910078 4.0889922 1.7168166 -0.1744523 -5.0910078 -2.5255044 5.0910078 1 10 7.08 8.02 4.1135619 3.9064381 1.2095403 -0.1409709 -4.1135619 -2.9175775 4.1135619 1 10 9.38 7.14 3.2308579 3.9091421 1.3401909 -0.1107209 -3.2308579 -3.0718990 3.2308579 1 10 12.10 5.68 2.4280744 3.2519256 0.1729160 -0.0832096 -2.4280744 -3.0021901 2.4280744 1 10 23.70 2.42 0.7181253 1.7018747 -0.3965738 -0.0246100 -0.7181253 -1.7627525 0.7181253 1 11 0.00 0.00 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 11 0.25 4.86 4.5105405 0.3494595 -0.1607034 2.9495118 -4.5105405 -0.0666985 4.5105405 1 11 0.50 7.24 6.4359054 0.8040946 0.5663358 2.5903294 -6.4359054 -0.2105228 6.4359054 1 11 0.98 8.00 7.4186398 0.5813602 0.4697877 0.9491035 -7.4186398 -0.5491459 7.4186398 1 11 1.98 6.81 7.0115733 -0.2015733 -0.3448261 -0.1381102 -7.0115733 -1.2210574 7.0115733 1 11 3.60 5.87 5.9282914 -0.0582914 -0.2413138 -0.2020672 -5.9282914 -2.0381549 5.9282914 1 11 5.02 5.22 5.1070724 0.1129276 -0.0434667 -0.1750014 -5.1070724 -2.5173836 5.1070724 1 11 7.03 4.45 4.1352186 0.3147814 0.2842309 -0.1417131 -4.1352186 -2.9112241 4.1352186 1 11 9.03 3.62 3.3518218 0.2681782 0.1873670 -0.1148663 -3.3518218 -3.0637109 3.3518218 1 11 12.12 2.69 2.4229799 0.2670201 0.2104340 -0.0830350 -2.4229799 -3.0009802 2.4229799 1 11 24.08 0.86 0.6900314 0.1699686 0.2045435 -0.0236472 -0.6900314 -1.7213287 0.6900314 1 12 0.00 0.00 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 12 0.25 1.25 4.5105405 -3.2605405 -0.2522768 2.9495118 -4.5105405 -0.0666985 4.5105405 1 12 0.50 3.96 6.4359054 -2.4759054 -0.6134265 2.5903294 -6.4359054 -0.2105228 6.4359054 1 12 1.00 7.82 7.4260572 0.3939428 -0.3456609 0.8979873 -7.4260572 -0.5635673 7.4260572 1 12 2.00 9.72 6.9978278 2.7221722 0.4871511 -0.1429463 -6.9978278 -1.2331924 6.9978278 1 12 3.52 9.75 5.9782805 3.7717195 1.7047788 -0.2034959 -5.9782805 -2.0051242 5.9782805 1 12 5.07 8.57 5.0803261 3.4896739 1.4529528 -0.1740872 -5.0803261 -2.5308760 5.0803261 1 12 7.07 6.59 4.1178841 2.4721159 -0.1348789 -0.1411190 -4.1178841 -2.9163186 4.1178841 1 12 9.03 6.11 3.3518218 2.7581782 0.8253317 -0.1148663 -3.3518218 -3.0637109 3.3518218 1 12 12.05 4.57 2.4408575 2.1291425 0.0659992 -0.0836477 -2.4408575 -3.0051791 2.4408575 1 12 24.15 1.17 0.6849774 0.4850226 -1.9998251 -0.0234740 -0.6849774 -1.7137566 0.6849774 1 "],
["focei-v2-1.html", "3.2 FOCEI v2.1", " 3.2 FOCEI v2.1 DATA = Theoph colnames(DATA) = c(&quot;ID&quot;, &quot;BWT&quot;, &quot;DOSE&quot;, &quot;TIME&quot;, &quot;DV&quot;) DATA[,&quot;ID&quot;] = as.numeric(as.character(DATA[,&quot;ID&quot;])) require(lattice) xyplot(DV ~ TIME | as.factor(ID), data=DATA, type=&quot;b&quot;) ## INIT STEP IDs = unique(DATA[,&quot;ID&quot;]) ; IDs ## [1] 1 2 3 4 5 6 7 8 9 10 11 12 nID = length(IDs) ; nID ## [1] 12 nTheta = 3 nEta = 3 nEps = 2 nPara = nTheta + nEta*(nEta + 1)/2 + nEps ; nPara ## [1] 11 GNames = outer(&quot;G&quot;, 1:nEta, paste0)[1,] ; GNames ## [1] &quot;G1&quot; &quot;G2&quot; &quot;G3&quot; HNames = outer(&quot;H&quot;, 1:nEps, paste0)[1,] ; HNames ## [1] &quot;H1&quot; &quot;H2&quot; iOM = (nTheta + 1):(nTheta + nEta*(nEta + 1)/2) ; iOM ## [1] 4 5 6 7 8 9 iSG = (nTheta + nEta*(nEta + 1)/2 + 1):(nTheta + nEta*(nEta + 1)/2 + nEps) ; iSG ## [1] 10 11 IE = c(2, 50, 0.1) LB = rep(0, nTheta) UB = rep(1e6, nTheta) alpha = 0.1 - log((IE - LB)/(UB - LB)/(1 - (IE - LB)/(UB - LB))) ; alpha ## [1] 13.22236 10.00344 16.21810 p0 = rep(0.1, nTheta) p1 = exp(p0 - alpha) p2 = p1/(p1 + 1)*(UB - LB) + LB ; p2 ## [1] 2.0 50.0 0.1 OM0 = matrix(c(0.2, 0.1, 0.1, 0.1, 0.2, 0.1, 0.1, 0.1, 0.2), nrow=nEta) ; OM0 ## [,1] [,2] [,3] ## [1,] 0.2 0.1 0.1 ## [2,] 0.1 0.2 0.1 ## [3,] 0.1 0.1 0.2 SG0 = diag(c(0.1, 0.1)) ; SG0 ## [,1] [,2] ## [1,] 0.1 0.0 ## [2,] 0.0 0.1 EXPP1 = exp(0.1) ScaleVar = function(VarMat, dim1) { M1 = chol(VarMat) V1 = diag(M1) M2 = abs(10 * (M1 - diag(V1, nrow=dim1))) + diag(V1/EXPP1, nrow=dim1) return(t(M2)) } OMscl = ScaleVar(OM0, nEta) ; OMscl ## [,1] [,2] [,3] ## [1,] 0.4046556 0.000000 0.0000000 ## [2,] 2.2360680 0.350442 0.0000000 ## [3,] 2.2360680 1.290994 0.3303999 SGscl = ScaleVar(SG0, nEps) ; SGscl ## [,1] [,2] ## [1,] 0.2861347 0.0000000 ## [2,] 0.0000000 0.2861347 DesclVar = function(mUCP, mSCL) { nRow = dim(mUCP)[1] maT = matrix(nrow=nRow, ncol=nRow) for (i in 1:nRow) { for (j in 1:nRow) { if (i==j) { maT[i,j] = exp(mUCP[i,j]) * mSCL[i,j] } else if(i &gt; j) { maT[i,j] = mUCP[i,j] * mSCL[i,j] } else { maT[i,j] = 0 } } } return(maT %*% t(maT)) } DesclVar(matrix(rep(0.1, nEta*nEta), nrow=nEta), OMscl) ## [,1] [,2] [,3] ## [1,] 0.2 0.1 0.1 ## [2,] 0.1 0.2 0.1 ## [3,] 0.1 0.1 0.2 DesclVar(diag(rep(0.1, nEps)), SGscl) ## [,1] [,2] ## [1,] 0.1 0.0 ## [2,] 0.0 0.1 ltv2mat = function(vec) { LENGTH = length(vec) DIM = round((sqrt(8*LENGTH+1)-1)/2,0) if (DIM*(DIM+1)/2 != LENGTH) return(NULL) mat = matrix(nrow=DIM, ncol=DIM) for (m in 1:DIM) { for (n in 1:DIM) { k = max(m,n) l = min(m,n) p = k*(k - 1)/2 + l mat[m,n] = vec[p] } } return(mat) } s2o = function(p) { p0 = p[1:nTheta] p1 = exp(p0 - alpha) p2 = p1/(p1 + 1)*(UB - LB) + LB OM = DesclVar(ltv2mat(p[iOM]), OMscl) SG = DesclVar(diag(p[iSG]), SGscl) Res = list(p2, OM, SG) names(Res) = c(&quot;THETA&quot;, &quot;OMEGA&quot;, &quot;SIGMA&quot;) return(Res) } s2o(rep(0.1, nPara)) ## $THETA ## [1] 2.0 50.0 0.1 ## ## $OMEGA ## [,1] [,2] [,3] ## [1,] 0.2 0.1 0.1 ## [2,] 0.1 0.2 0.1 ## [3,] 0.1 0.1 0.2 ## ## $SIGMA ## [,1] [,2] ## [1,] 0.1 0.0 ## [2,] 0.0 0.1 ## EST STEP PRED = function(THETA, ETA) { # Extern: DATA[,c(&quot;ID&quot;, &quot;TIME&quot;, &quot;DV&quot;)], cID KA = THETA[1]*exp(ETA[1]) V = THETA[2]*exp(ETA[2]) K = THETA[3]*exp(ETA[3]) TIME = DATA[DATA$ID == cID, &quot;TIME&quot;] TERM1 = KA/(KA - K) TERM2 = K /(KA - K) TERM3 = 320/V*TERM1 TERM4 = exp(-K*TIME) TERM5 = exp(-KA*TIME) F = TERM3*(TERM4 - TERM5) G1 = -F*TERM2 + KA*TIME*TERM3*TERM5 G2 = -F G3 = F*TERM2 - K*TIME*TERM3*TERM4 H1 = F H2 = 1 return(cbind(F, G1, G2, G3, H1, H2)) } ObjEta = function(ETA) { # External: THETA, invOM, SG, cID, DATA[,&quot;DV&quot;] FGH = PRED(THETA, ETA) Hi = FGH[, HNames, drop=FALSE] # always INTER==TRUE Ri = DATA[DATA$ID == cID, &quot;DV&quot;] - FGH[,&quot;F&quot;] ## Slower version # Vi = diag(diag(Hi %*% SG %*% t(Hi))) # iSum = log(det(Vi)) + t(Ri) %*% solve(Vi) %*% Ri + t(ETA) %*% invOM %*% ETA ## Faster version Vi = diag(Hi %*% SG %*% t(Hi)) return(sum(log(Vi) + Ri*Ri/Vi) + t(ETA) %*% invOM %*% ETA) } EBE = cbind(ID = IDs, ETA1=0, ETA2=0, ETA3=0, Oi=0) OBJ1 = function(p) { # External: DATA, nTheta, nEta, nEps if (STEP == &quot;EST&quot;) { r = s2o(p) THETA &lt;&lt;- r$THETA # for ObjEta OM = r$OMEGA SG &lt;&lt;- r$SIGMA # for ObjEta } else { THETA &lt;&lt;- p[1:nTheta] # for ObjEta OM = ltv2mat(p[iOM]) SG &lt;&lt;- diag(p[iSG]) # for ObjEta } invOM &lt;&lt;- solve(OM) # for ObjEta Term3 = determinant(OM, logarithm=TRUE)$modulus[[1]] for (i in 1:nID) { cID &lt;&lt;- IDs[i] # for PRED Res = optim(EBE[i,2:(nEta+1)], ObjEta, method=&quot;BFGS&quot;) FGH = PRED(THETA, Res$par) Gi = FGH[, GNames, drop=FALSE] Hi = FGH[, HNames, drop=FALSE] Vi = diag(Hi %*% SG %*% t(Hi)) Hsum = invOM + t(Gi) %*% solve(diag(Vi)) %*% Gi EBE[i, 2:(1 + nEta)] &lt;&lt;- Res$par EBE[i, (2 + nEta)] &lt;&lt;- Res$value + Term3 + determinant(Hsum, logarithm=TRUE)$modulus[[1]] } return(sum(EBE[,5])) } STEP = &quot;EST&quot; OBJ1(rep(0.1, nPara)) ## [1] 188.7005 StartTime = Sys.time() r0 = optim(rep(0.1, nPara), OBJ1, method=&quot;L-BFGS-B&quot;) difftime(Sys.time(), StartTime) ## Time difference of 2.832079 mins r0 ## $par ## [1] -0.194190895 -0.331727149 -0.036266712 0.489432562 0.038687576 ## [6] -1.153706245 -0.004333507 0.089537626 -1.388033351 -0.769283555 ## [11] -0.023164009 ## ## $value ## [1] 92.21517 ## ## $counts ## function gradient ## 99 99 ## ## $convergence ## [1] 0 ## ## $message ## [1] &quot;CONVERGENCE: REL_REDUCTION_OF_F &lt;= FACTR*EPSMCH&quot; OBJ1(r0$par) ## [1] 92.21517 r1 = s2o(r0$par) ; r1 ## $THETA ## [1] 1.49026923 32.46989613 0.08726099 ## ## $OMEGA ## [,1] [,2] [,3] ## [1,] 0.435799594 0.05710839 -0.006396876 ## [2,] 0.057108393 0.01970546 0.011940765 ## [3,] -0.006396876 0.01194077 0.020254608 ## ## $SIGMA ## [,1] [,2] ## [1,] 0.01757721 0.00000000 ## [2,] 0.00000000 0.07816658 ## COV STEP STEP = &quot;COV&quot; p = c(r1$THETA, r1$OMEGA[upper.tri(r1$OMEGA, diag=TRUE)], diag(r1$SIGMA)) OBJ1(p) ## [1] 92.21517 require(numDeriv) Rmat = hessian(OBJ1, p)/2 ; Rmat ## [,1] [,2] [,3] [,4] [,5] ## [1,] 19.4612409 -2.2477566 229.80077 -0.5771837 -19.447598 ## [2,] -2.2477566 0.6731205 -35.38337 -0.5416104 5.914294 ## [3,] 229.8007736 -35.3833710 43810.81965 145.7046519 -1574.513981 ## [4,] -0.5771837 -0.5416104 145.70465 72.8950688 -370.543606 ## [5,] -19.4475978 5.9142945 -1574.51398 -370.5436064 3406.620627 ## [6,] 17.3925778 -11.7136497 2115.02729 335.2994783 -5333.164989 ## [7,] -36.3237617 -5.0015513 -107.14670 -48.1164290 -1693.514911 ## [8,] -35.6946999 3.6611898 -961.09042 -306.9597378 1371.279042 ## [9,] -19.6447430 1.4282579 -1192.24952 14.4173100 -800.271603 ## [10,] 94.6267876 -28.5964517 2826.80791 122.0395262 -2188.772244 ## [11,] -10.0197898 -0.9150773 -78.59507 -5.4178635 -505.045929 ## [,6] [,7] [,8] [,9] [,10] ## [1,] 17.39258 -36.323762 -35.69470 -19.644743 94.62679 ## [2,] -11.71365 -5.001551 3.66119 1.428258 -28.59645 ## [3,] 2115.02729 -107.146700 -961.09042 -1192.249523 2826.80791 ## [4,] 335.29948 -48.116429 -306.95974 14.417310 122.03953 ## [5,] -5333.16499 -1693.514911 1371.27904 -800.271603 -2188.77224 ## [6,] 18659.94450 -2730.781854 -5006.81020 -332.610451 4711.00045 ## [7,] -2730.78185 21740.938931 -8752.44669 -2089.268553 -2646.50963 ## [8,] -5006.81020 -8752.446693 26076.49945 -5917.942217 -9226.96549 ## [9,] -332.61045 -2089.268553 -5917.94222 7872.729463 1939.51629 ## [10,] 4711.00045 -2646.509632 -9226.96549 1939.516293 90169.73871 ## [11,] 32.55493 -2096.291882 -2190.58907 -378.789894 5787.46719 ## [,11] ## [1,] -10.0197898 ## [2,] -0.9150773 ## [3,] -78.5950684 ## [4,] -5.4178635 ## [5,] -505.0459290 ## [6,] 32.5549309 ## [7,] -2096.2918815 ## [8,] -2190.5890702 ## [9,] -378.7898936 ## [10,] 5787.4671939 ## [11,] 1390.1658488 OiS1 = function(p) { THETA &lt;&lt;- p[1:nTheta] # for ObjEta OM = ltv2mat(p[iOM]) invOM &lt;&lt;- solve(OM) # for ObjEta SG &lt;&lt;- diag(p[iSG]) # for ObjEta Res = optim(EBE[EBE[,&quot;ID&quot;]==cID,2:(nEta+1)], ObjEta, method=&quot;BFGS&quot;) FGH = PRED(THETA, Res$par) Gi = FGH[, GNames, drop=FALSE] Hi = FGH[, HNames, drop=FALSE] Vi = diag(Hi %*% SG %*% t(Hi)) Hsum = invOM + t(Gi) %*% solve(diag(Vi)) %*% Gi return(Res$value + determinant(OM, logarithm=TRUE)$modulus[[1]] + determinant(Hsum, logarithm=TRUE)$modulus[[1]]) } CalcSmat = function(p) { Smat = matrix(rep(0, nPara*nPara), nrow=nPara, ncol=nPara) for (i in 1:nID) { cID &lt;&lt;- IDs[i] # for PRED gr = grad(OiS1, p) Smat = Smat + gr %*% t(gr) } return(Smat/4) } Smat = CalcSmat(p) ; Smat ## [,1] [,2] [,3] [,4] [,5] ## [1,] 17.785877 -2.0353041 162.88807 -2.405263 135.14836 ## [2,] -2.035304 0.6541715 -31.51747 2.779157 -23.89199 ## [3,] 162.888073 -31.5174676 42568.04225 277.756846 -2267.72681 ## [4,] -2.405263 2.7791571 277.75685 46.809932 -188.76289 ## [5,] 135.148359 -23.8919888 -2267.72681 -188.762889 2545.80781 ## [6,] -274.112981 25.5821365 8458.70440 231.660933 -5672.10694 ## [7,] 15.905670 -5.2723520 -727.48830 -50.469732 376.22130 ## [8,] -81.381210 48.4208213 -6838.37055 168.442841 -204.18211 ## [9,] -43.230433 -6.1209519 -15916.21881 -211.244329 1022.99287 ## [10,] 75.238049 -165.6154772 37698.86509 -888.010742 -4772.79309 ## [11,] -43.238690 -10.2892772 -6143.84608 -144.600382 107.69983 ## [,6] [,7] [,8] [,9] [,10] ## [1,] -274.11298 15.905670 -81.38121 -43.230433 75.23805 ## [2,] 25.58214 -5.272352 48.42082 -6.120952 -165.61548 ## [3,] 8458.70440 -727.488302 -6838.37055 -15916.218809 37698.86509 ## [4,] 231.66093 -50.469732 168.44284 -211.244329 -888.01074 ## [5,] -5672.10694 376.221302 -204.18211 1022.992869 -4772.79309 ## [6,] 17249.86269 -651.530915 -3132.43729 -2450.397960 18023.15029 ## [7,] -651.53092 147.400811 -241.56737 646.804880 1384.93997 ## [8,] -3132.43729 -241.567372 7757.92380 -1413.448656 -23102.60552 ## [9,] -2450.39796 646.804880 -1413.44866 9619.482487 -1700.33656 ## [10,] 18023.15029 1384.939971 -23102.60552 -1700.336563 270722.16865 ## [11,] 177.18048 312.568933 -2165.73548 4755.002466 10884.87468 ## [,11] ## [1,] -43.23869 ## [2,] -10.28928 ## [3,] -6143.84608 ## [4,] -144.60038 ## [5,] 107.69983 ## [6,] 177.18048 ## [7,] 312.56893 ## [8,] -2165.73548 ## [9,] 4755.00247 ## [10,] 10884.87468 ## [11,] 3000.16697 invR = solve(Rmat) ; invR ## [,1] [,2] [,3] [,4] ## [1,] 7.932837e-02 0.2548487778 -2.646033e-04 -6.357528e-03 ## [2,] 2.548488e-01 2.4072897714 3.217647e-04 -2.055155e-02 ## [3,] -2.646033e-04 0.0003217647 2.468663e-05 -5.578613e-05 ## [4,] -6.357528e-03 -0.0205515502 -5.578613e-05 1.166709e-02 ## [5,] -1.932425e-03 -0.0076743755 -1.972952e-06 -3.129437e-04 ## [6,] -4.939639e-04 -0.0012160851 -2.604304e-06 -5.923089e-04 ## [7,] -3.722415e-04 -0.0009437683 -2.048689e-06 -6.547904e-04 ## [8,] -3.610675e-04 -0.0010945759 -1.620844e-06 -5.725480e-04 ## [9,] -5.490387e-04 -0.0020710019 7.611265e-07 -8.683416e-04 ## [10,] 5.303083e-05 0.0006762912 -6.645101e-08 1.286877e-04 ## [11,] -1.491351e-03 -0.0059278245 -6.332220e-06 -2.778800e-03 ## [,5] [,6] [,7] [,8] ## [1,] -1.932425e-03 -4.939639e-04 -3.722415e-04 -3.610675e-04 ## [2,] -7.674376e-03 -1.216085e-03 -9.437683e-04 -1.094576e-03 ## [3,] -1.972952e-06 -2.604304e-06 -2.048689e-06 -1.620844e-06 ## [4,] -3.129437e-04 -5.923089e-04 -6.547904e-04 -5.725480e-04 ## [5,] 5.791841e-05 -4.978160e-05 -1.394326e-04 -1.473884e-04 ## [6,] -4.978160e-05 3.400750e-05 -3.539215e-05 -3.322253e-05 ## [7,] -1.394326e-04 -3.539215e-05 4.860693e-06 -2.262450e-05 ## [8,] -1.473884e-04 -3.322253e-05 -2.262450e-05 1.473841e-05 ## [9,] -1.831617e-04 -4.762654e-05 -3.838333e-05 -1.782840e-05 ## [10,] 2.775012e-05 5.301432e-06 5.772314e-06 6.827739e-06 ## [11,] -6.060464e-04 -1.664669e-04 -1.186099e-04 -1.025888e-04 ## [,9] [,10] [,11] ## [1,] -5.490387e-04 5.303083e-05 -1.491351e-03 ## [2,] -2.071002e-03 6.762912e-04 -5.927825e-03 ## [3,] 7.611265e-07 -6.645101e-08 -6.332220e-06 ## [4,] -8.683416e-04 1.286877e-04 -2.778800e-03 ## [5,] -1.831617e-04 2.775012e-05 -6.060464e-04 ## [6,] -4.762654e-05 5.301432e-06 -1.664669e-04 ## [7,] -3.838333e-05 5.772314e-06 -1.186099e-04 ## [8,] -1.782840e-05 6.827739e-06 -1.025888e-04 ## [9,] 7.464227e-05 4.809846e-06 -1.597480e-04 ## [10,] 4.809846e-06 1.389300e-05 -2.578212e-05 ## [11,] -1.597480e-04 -2.578212e-05 2.005150e-04 Cov = invR %*% Smat %*% invR ; Cov ## [,1] [,2] [,3] [,4] [,5] ## [1,] 0.0825979762 0.3090413049 1.778559e-04 0.0362208825 4.791106e-03 ## [2,] 0.3090413049 2.8276714225 2.321910e-03 0.2034908716 1.759521e-02 ## [3,] 0.0001778559 0.0023219096 2.479338e-05 0.0008494192 1.883071e-04 ## [4,] 0.0362208825 0.2034908716 8.494192e-04 0.0537527665 9.233834e-03 ## [5,] 0.0047911057 0.0175952145 1.883071e-04 0.0092338339 2.025681e-03 ## [6,] 0.0002806814 0.0069872997 5.927322e-05 0.0022094833 5.159884e-04 ## [7,] 0.0004460359 0.0050694680 3.681033e-05 0.0015434529 3.533021e-04 ## [8,] 0.0003534434 0.0067831655 2.512625e-05 0.0012076081 2.447445e-04 ## [9,] -0.0007109371 -0.0016479324 7.650478e-07 -0.0004062029 -2.683243e-05 ## [10,] -0.0000553334 -0.0004081029 1.197491e-05 0.0002737232 9.262531e-05 ## [11,] -0.0029878532 -0.0080415120 1.254804e-05 -0.0009961479 -2.047116e-05 ## [,6] [,7] [,8] [,9] [,10] ## [1,] 2.806814e-04 4.460359e-04 3.534434e-04 -7.109371e-04 -5.533340e-05 ## [2,] 6.987300e-03 5.069468e-03 6.783165e-03 -1.647932e-03 -4.081029e-04 ## [3,] 5.927322e-05 3.681033e-05 2.512625e-05 7.650478e-07 1.197491e-05 ## [4,] 2.209483e-03 1.543453e-03 1.207608e-03 -4.062029e-04 2.737232e-04 ## [5,] 5.159884e-04 3.533021e-04 2.447445e-04 -2.683243e-05 9.262531e-05 ## [6,] 1.978205e-04 1.122435e-04 8.652660e-05 6.271313e-06 2.874236e-05 ## [7,] 1.122435e-04 7.793564e-05 6.332929e-05 9.824226e-06 2.377953e-05 ## [8,] 8.652660e-05 6.332929e-05 6.041004e-05 1.166114e-05 1.888443e-05 ## [9,] 6.271313e-06 9.824226e-06 1.166114e-05 2.040727e-05 7.247626e-06 ## [10,] 2.874236e-05 2.377953e-05 1.888443e-05 7.247626e-06 3.690638e-05 ## [11,] 5.017231e-05 3.605326e-05 2.870467e-05 5.739495e-05 -8.671147e-06 ## [,11] ## [1,] -2.987853e-03 ## [2,] -8.041512e-03 ## [3,] 1.254804e-05 ## [4,] -9.961479e-04 ## [5,] -2.047116e-05 ## [6,] 5.017231e-05 ## [7,] 3.605326e-05 ## [8,] 2.870467e-05 ## [9,] 5.739495e-05 ## [10,] -8.671147e-06 ## [11,] 2.694516e-04 SE = sqrt(diag(Cov)) ; SE ## [1] 0.287398636 1.681568144 0.004979295 0.231846429 0.045007569 ## [6] 0.014064867 0.008828117 0.007772390 0.004517440 0.006075062 ## [11] 0.016414981 Correl = cov2cor(Cov) ; Correl ## [,1] [,2] [,3] [,4] [,5] [,6] ## [1,] 1.00000000 0.63946585 0.1242841 0.5435931 0.37039532 0.06943738 ## [2,] 0.63946585 1.00000000 0.2773084 0.5219514 0.23248479 0.29543318 ## [3,] 0.12428413 0.27730839 1.0000000 0.7357899 0.84025941 0.84635989 ## [4,] 0.54359307 0.52195138 0.7357899 1.0000000 0.88490386 0.67757080 ## [5,] 0.37039532 0.23248479 0.8402594 0.8849039 1.00000000 0.81511481 ## [6,] 0.06943738 0.29543318 0.8463599 0.6775708 0.81511481 1.00000000 ## [7,] 0.17579928 0.34149146 0.8374017 0.7540930 0.88918594 0.90397763 ## [8,] 0.15822699 0.51899523 0.6492401 0.6701485 0.69963719 0.79151551 ## [9,] -0.54758817 -0.21693643 0.0340117 -0.3878378 -0.13197208 0.09870302 ## [10,] -0.03169217 -0.03994887 0.3958711 0.1943393 0.33876098 0.33638456 ## [11,] -0.63333598 -0.29132842 0.1535210 -0.2617478 -0.02770872 0.21731419 ## [,7] [,8] [,9] [,10] [,11] ## [1,] 0.1757993 0.1582270 -0.54758817 -0.03169217 -0.63333598 ## [2,] 0.3414915 0.5189952 -0.21693643 -0.03994887 -0.29132842 ## [3,] 0.8374017 0.6492401 0.03401170 0.39587106 0.15352102 ## [4,] 0.7540930 0.6701485 -0.38783785 0.19433926 -0.26174780 ## [5,] 0.8891859 0.6996372 -0.13197208 0.33876098 -0.02770872 ## [6,] 0.9039776 0.7915155 0.09870302 0.33638456 0.21731419 ## [7,] 1.0000000 0.9229581 0.24634166 0.44338861 0.24879183 ## [8,] 0.9229581 1.0000000 0.33211912 0.39994344 0.22498708 ## [9,] 0.2463417 0.3321191 1.00000000 0.26409041 0.77399984 ## [10,] 0.4433886 0.3999434 0.26409041 1.00000000 -0.08695317 ## [11,] 0.2487918 0.2249871 0.77399984 -0.08695317 1.00000000 InvCov = Rmat %*% solve(Smat) %*% Rmat ; InvCov ## [,1] [,2] [,3] [,4] [,5] ## [1,] 552.4435 -142.55170 44452.23 -682.7351 -8479.25 ## [2,] -142.5517 65.72761 -16427.77 326.1255 8230.10 ## [3,] 44452.2276 -16427.76511 4978976.01 -98768.6060 -1624669.60 ## [4,] -682.7351 326.12549 -98768.61 2795.1195 39145.43 ## [5,] -8479.2495 8230.10018 -1624669.60 39145.4345 1469221.38 ## [6,] -9544.9891 10006.04711 -2173348.39 59720.5221 1765816.70 ## [7,] 27404.9731 -64714.92859 11345301.90 -330591.6662 -13219324.64 ## [8,] 39331.7230 3440.33831 1589647.81 -4864.7196 2629156.01 ## [9,] -52468.7777 35276.75832 -8360211.09 214385.5509 5427686.43 ## [10,] -8530.7975 8494.49833 -1774586.45 44766.5830 1484583.49 ## [11,] 1455.3183 2165.37673 -276814.44 9476.4640 535132.41 ## [,6] [,7] [,8] [,9] [,10] ## [1,] -9544.989 27404.97 39331.723 -52468.78 -8530.798 ## [2,] 10006.047 -64714.93 3440.338 35276.76 8494.498 ## [3,] -2173348.394 11345301.90 1589647.805 -8360211.09 -1774586.446 ## [4,] 59720.522 -330591.67 -4864.720 214385.55 44766.583 ## [5,] 1765816.698 -13219324.64 2629156.008 5427686.43 1484583.494 ## [6,] 2292172.909 -16203066.57 2957354.476 7029769.70 1837586.030 ## [7,] -16203066.575 124551761.75 -28929537.625 -47570623.90 -13447710.984 ## [8,] 2957354.476 -28929537.63 11562127.579 6320558.10 2543660.167 ## [9,] 7029769.702 -47570623.90 6320558.099 23153873.06 5605465.137 ## [10,] 1837586.030 -13447710.98 2543660.167 5605465.14 1589612.533 ## [11,] 636831.896 -5248626.67 1470542.422 1696489.24 563195.975 ## [,11] ## [1,] 1455.318 ## [2,] 2165.377 ## [3,] -276814.442 ## [4,] 9476.464 ## [5,] 535132.408 ## [6,] 636831.896 ## [7,] -5248626.669 ## [8,] 1470542.422 ## [9,] 1696489.245 ## [10,] 563195.975 ## [11,] 256856.467 EigenVal = sort(eigen(Correl)$values) ; EigenVal # Sorted Eigenvalues ## [1] 7.111772e-05 1.322763e-03 1.047517e-02 8.485791e-02 1.540581e-01 ## [6] 2.400174e-01 3.405631e-01 8.899970e-01 1.025880e+00 2.813940e+00 ## [11] 5.438818e+00 ## EBE EBE ## ID ETA1 ETA2 ETA3 Oi ## [1,] 1 -0.10509349 -0.192333103 -0.28210406 20.162953 ## [2,] 2 0.32977045 0.055266188 0.04640550 17.645308 ## [3,] 3 0.41106117 0.043467764 -0.01197311 -1.386363 ## [4,] 4 -0.34521288 -0.042537999 0.01640898 9.327955 ## [5,] 5 -0.03262193 -0.110819881 -0.09213746 20.292254 ## [6,] 6 -0.47061028 0.139959837 0.22816828 4.093721 ## [7,] 7 -0.85954225 0.003774988 0.14413229 1.248520 ## [8,] 8 -0.06341051 0.072178866 0.07566939 3.945330 ## [9,] 9 1.33415145 0.176965062 -0.01274820 2.978721 ## [10,] 10 -0.71302263 -0.215112114 -0.14868270 4.732470 ## [11,] 11 0.86581903 0.176165815 0.07797860 -2.502996 ## [12,] 12 -0.50051654 -0.137088210 -0.02397317 11.685128 ## sdtab SqrtInvCov = function(M) { EigenResult = eigen(as.matrix(M)) EigenVector = EigenResult$vectors EigenValues = abs(EigenResult$values) return(EigenVector %*% diag(1/sqrt(EigenValues)) %*% t(EigenVector)) } THETA = r1$THETA OM = r1$OMEGA SG = r1$SIGMA tSD = vector() for (i in 1:nID) { cID = IDs[i] FGH0 = PRED(THETA, rep(0, nEta)) G0i = FGH0[, GNames, drop=FALSE] H0i = FGH0[, HNames, drop=FALSE] R0i = DATA[DATA$ID == cID, &quot;DV&quot;] - FGH0[,&quot;F&quot;] C0i = G0i %*% OM %*% t(G0i) + diag(diag(H0i %*% SG %*% t(H0i))) WRES = SqrtInvCov(C0i) %*% R0i cEBE = EBE[EBE[,&quot;ID&quot;]==cID, 2:(nEta + 1)] FGH1 = PRED(THETA, cEBE) G1i = FGH1[, GNames, drop=FALSE] H1i = FGH1[, HNames, drop=FALSE] R1i = DATA[DATA$ID == cID, &quot;DV&quot;] - FGH1[,&quot;F&quot;] C1i = G1i %*% OM %*% t(G1i) + diag(diag(H1i %*% SG %*% t(H1i))) CWRES = SqrtInvCov(C1i) %*% (R1i + G1i %*% cEBE) tSD = rbind(tSD, cbind(DATA[DATA$ID == cID, c(&quot;ID&quot;, &quot;TIME&quot;, &quot;DV&quot;)], PRED=FGH0[,&quot;F&quot;], RES=R0i, WRES, CIPREDI=FGH1[,&quot;F&quot;], CIRESI=R1i, CWRES, G1i, H1i)) } ; tSD ID TIME DV PRED RES WRES CIPREDI CIRESI CWRES G1 G2 G3 H1 H2 1 0.00 0.74 0.000000 0.7400000 2.6468003 0.0000000 0.7400000 2.6468003 0.0000000 0.0000000 0.0000000 0.0000000 1 1 0.25 2.84 3.030112 -0.1901122 -1.1822290 3.3744021 -0.5344021 -1.0763354 2.8385452 -3.3744021 -0.0292326 3.3744021 1 1 0.57 6.57 5.483570 1.0864296 0.4379603 6.2520564 0.3179436 0.4003840 4.1487522 -6.2520564 -0.1313548 6.2520564 1 1 1.12 10.50 7.521171 2.9788288 1.8221051 8.8733350 1.6266650 1.5722675 3.7429156 -8.8733350 -0.4023755 8.8733350 1 1 2.02 9.66 8.260688 1.3993123 0.0455598 10.1620707 -0.5020707 0.0664912 1.7407705 -10.1620707 -0.9378400 10.1620707 1 1 3.82 8.58 7.465515 1.1144854 -0.3918602 9.6945364 -1.1145364 -0.2460150 -0.1172633 -9.6945364 -1.9559026 9.6945364 1 1 5.10 8.36 6.702856 1.6571440 0.1037487 8.9665806 -0.6065806 0.1535905 -0.3707682 -8.9665806 -2.5515046 8.9665806 1 1 7.03 7.47 5.668071 1.8019286 0.2746610 7.9078429 -0.4378429 0.2905702 -0.3984305 -7.9078429 -3.2511577 7.9078429 1 1 9.05 6.89 4.752310 2.1376904 0.8286773 6.9242714 -0.0342714 0.6879875 -0.3563765 -6.9242714 -3.7669249 6.9242714 1 1 12.12 5.94 3.635485 2.3045150 1.4626029 5.6576014 0.2823986 1.0999488 -0.2918308 -5.6576014 -4.2208772 5.6576014 1 1 24.37 3.28 1.248316 2.0316840 3.4261116 2.5264255 0.7535745 2.3857684 -0.1303262 -2.5264255 -3.9216409 2.5264255 1 2 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 2 0.27 1.72 3.224044 -1.5040440 -3.7630741 3.9428680 -2.2228680 -3.0255727 2.9376090 -3.9428680 -0.0529709 3.9428680 1 2 0.52 7.91 5.180804 2.7291963 2.9743933 5.9821107 1.9278893 2.7969841 3.3026140 -5.9821107 -0.1661556 5.9821107 1 2 1.00 8.31 7.234871 1.0751295 0.7037193 7.6754632 0.6345368 0.7633442 2.1908621 -7.6754632 -0.4596815 7.6754632 1 2 1.92 8.33 8.254713 0.0752869 0.1228009 8.0029245 0.3270755 0.1374239 0.3567559 -8.0029245 -1.0672693 8.0029245 1 2 3.50 6.85 7.656358 -0.8063579 -0.4325292 7.0777338 -0.2277338 -0.5150962 -0.2764932 -7.0777338 -1.9399499 7.0777338 1 2 5.02 6.08 6.749185 -0.6691851 -0.3081006 6.1653438 -0.0853438 -0.3987696 -0.2813941 -6.1653438 -2.5446762 6.1653438 1 2 7.03 5.40 5.668071 -0.2680714 0.1117518 5.1308191 0.2691809 0.0596580 -0.2366713 -5.1308191 -3.0602410 5.1308191 1 2 9.00 4.55 4.773088 -0.2230884 0.1536323 4.2853265 0.2646735 0.1130372 -0.1977253 -4.2853265 -3.3276068 4.2853265 1 2 12.00 3.01 3.673753 -0.6637533 -0.6678758 3.2575630 -0.2475630 -0.7712576 -0.1503053 -3.2575630 -3.4228167 3.2575630 1 2 24.30 0.90 1.255964 -0.3559644 -0.6223872 1.0583255 -0.1583255 -0.6568562 -0.0488316 -1.0583255 -2.3018798 1.0583255 1 3 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 3 0.27 4.40 3.224044 1.1759560 0.6665845 4.2387388 0.1612612 0.4775384 3.0768236 -4.2387388 -0.0541116 4.2387388 1 3 0.58 6.90 5.541103 1.3588966 0.4745744 6.6697644 0.2302356 0.4485223 3.2073622 -6.6697644 -0.2007442 6.6697644 1 3 1.02 8.20 7.287405 0.9125955 0.1667451 7.9955388 0.2044612 0.2472645 1.9528716 -7.9955388 -0.4714098 7.9955388 1 3 2.02 7.80 8.260688 -0.4606877 -0.4966823 8.1393235 -0.3393235 -0.4205627 0.1505224 -8.1393235 -1.1112015 8.1393235 1 3 3.62 7.50 7.585319 -0.0853190 0.1579214 7.1787562 0.3212438 0.1670867 -0.2629877 -7.1787562 -1.9552348 7.1787562 1 3 5.08 6.20 6.714415 -0.5144149 -0.2613580 6.3320491 -0.1320491 -0.3064927 -0.2513294 -6.3320491 -2.5209881 6.3320491 1 3 7.07 5.30 5.648338 -0.3483379 -0.1530324 5.3337686 -0.0337686 -0.2010209 -0.2127227 -5.3337686 -3.0386843 5.3337686 1 3 9.00 4.90 4.773088 0.1269116 0.4442090 4.5161008 0.3838992 0.4241033 -0.1801285 -4.5161008 -3.3243739 4.5161008 1 3 12.15 3.70 3.625980 0.0740197 0.3500047 3.4419849 0.2580151 0.3248022 -0.1372867 -3.4419849 -3.4685454 3.4419849 1 3 24.17 1.05 1.270293 -0.2202931 -0.6291491 1.2209811 -0.1709811 -0.6542302 -0.0487000 -1.2209811 -2.4958199 1.2209811 1 4 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 4 0.35 1.89 3.939688 -2.0496882 -2.0974996 3.1237839 -1.2337839 -2.6960194 2.5793986 -3.1237839 -0.0512202 3.1237839 1 4 0.60 4.60 5.653268 -1.0532679 -0.2916200 4.6845097 -0.0845097 -0.4402631 3.3440926 -4.6845097 -0.1366430 4.6845097 1 4 1.07 8.60 7.410099 1.1899010 1.6943132 6.5805831 2.0194169 1.8889524 3.4947730 -6.5805831 -0.3651864 6.5805831 1 4 2.13 8.38 8.254839 0.1251614 0.0587297 8.1082140 0.2717860 0.1057478 1.9219311 -8.1082140 -1.0119350 8.1082140 1 4 3.50 7.54 7.656358 -0.1163579 -0.4194899 7.9513727 -0.4113727 -0.3667108 0.3023512 -7.9513727 -1.8256324 7.9513727 1 4 5.02 6.88 6.749185 0.1308149 -0.2386856 7.1364232 -0.2564232 -0.2036304 -0.3572631 -7.1364232 -2.5478878 7.1364232 1 4 7.02 5.78 5.673015 0.1069846 -0.2597424 6.0165583 -0.2365583 -0.2361339 -0.5017384 -6.0165583 -3.1986027 6.0165583 1 4 9.02 5.33 4.764766 0.5652340 0.4274865 5.0433663 0.2866337 0.4093164 -0.4550160 -5.0433663 -3.5730670 5.0433663 1 4 11.98 4.19 3.680170 0.5098296 0.5326225 3.8793292 0.3106708 0.5036758 -0.3555793 -3.8793292 -3.7664930 3.8793292 1 4 24.65 1.15 1.218185 -0.0681854 -0.4030470 1.2608468 -0.1108468 -0.4183635 -0.1157184 -1.2608468 -2.6412112 1.2608468 1 5 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 5 0.30 2.02 3.503396 -1.4833961 -3.0031778 3.8184412 -1.7984412 -2.8210029 3.0484035 -3.8184412 -0.0486783 3.8184412 1 5 0.52 5.63 5.180804 0.4491963 0.1921787 5.6765900 -0.0465900 0.1744225 3.7970515 -5.6765900 -0.1312118 5.6765900 1 5 1.00 11.40 7.234871 4.1651295 3.6100705 8.0075136 3.3924864 3.2931430 3.5052396 -8.0075136 -0.3888466 8.0075136 1 5 2.02 9.33 8.260688 1.0693123 0.2441968 9.2902578 0.0397422 0.2440223 1.3003207 -9.2902578 -1.0526186 9.2902578 1 5 3.50 8.74 7.656358 1.0836421 0.1877632 8.7454278 -0.0054278 0.2018365 -0.1330411 -8.7454278 -1.9460409 8.7454278 1 5 5.02 7.56 6.749185 0.8108149 -0.0936742 7.8069669 -0.2469669 -0.0431286 -0.3954012 -7.8069669 -2.6662978 7.8069669 1 5 7.02 7.09 5.673015 1.4169846 0.6697555 6.6649007 0.4250993 0.6179338 -0.3844548 -6.6649007 -3.3344519 6.6649007 1 5 9.10 5.90 4.731621 1.1683788 0.4781151 5.6485224 0.2514776 0.4448900 -0.3295248 -5.6485224 -3.7607361 5.6485224 1 5 12.00 4.37 3.673753 0.6962467 -0.1230870 4.4844474 -0.1144474 -0.0814543 -0.2618506 -4.4844474 -4.0206254 4.4844474 1 5 24.35 1.57 1.250496 0.3195035 -0.2801349 1.6783299 -0.1083299 -0.2952642 -0.0980014 -1.6783299 -3.1542315 1.6783299 1 6 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 6 0.27 1.29 3.224044 -1.9340440 -1.4294000 1.8750662 -0.5850662 -2.0679713 1.6481363 -1.8750662 -0.0287747 1.8750662 1 6 0.58 3.08 5.541103 -2.4611034 -1.1034118 3.4534144 -0.3734144 -1.4577276 2.5949018 -3.4534144 -0.1184719 3.4534144 1 6 1.15 6.44 7.582591 -1.1425906 0.3675963 5.2318841 1.2081159 0.7738555 2.8659261 -5.2318841 -0.3809447 5.2318841 1 6 2.03 6.32 8.260663 -1.9406627 -0.6685669 6.3064582 0.0135418 -0.6824165 1.9316203 -6.3064582 -0.8882198 6.3064582 1 6 3.57 5.53 7.615017 -2.0850174 -1.0813174 6.2165207 -0.6865207 -1.2395481 0.3332866 -6.2165207 -1.7400579 6.2165207 1 6 5.00 4.94 6.760806 -1.8208060 -0.9394473 5.5212941 -0.5812941 -1.0912017 -0.3066777 -5.5212941 -2.3400239 5.5212941 1 6 7.00 4.02 5.682916 -1.6629162 -0.8762279 4.4941518 -0.4741518 -1.0333852 -0.5062909 -4.4941518 -2.8598243 4.4941518 1 6 9.22 3.46 4.682335 -1.2223354 -0.3876632 3.5327808 -0.0727808 -0.4422220 -0.4559740 -3.5327808 -3.1010025 3.5327808 1 6 12.10 2.78 3.641835 -0.8618352 0.1034323 2.5775257 0.2024743 0.1601231 -0.3426699 -2.5775257 -3.0751042 2.5775257 1 6 23.85 0.92 1.306264 -0.3862640 0.6002856 0.7108999 0.2091001 0.5398182 -0.0948980 -0.7108999 -1.7638015 0.7108999 1 7 0.00 0.15 0.000000 0.1500000 0.5365136 0.0000000 0.1500000 0.5365136 0.0000000 0.0000000 0.0000000 0.0000000 1 7 0.25 0.85 3.030112 -2.1801122 -1.1342216 1.4142814 -0.5642814 -2.1762892 1.3052081 -1.4142814 -0.0182116 1.4142814 1 7 0.50 2.35 5.052361 -2.7023614 -0.8685500 2.5870022 -0.2370022 -1.3236179 2.1969632 -2.5870022 -0.0680621 2.5870022 1 7 1.02 5.02 7.287405 -2.2674045 -0.4955429 4.4036513 0.6163487 -0.0558964 3.1137839 -4.4036513 -0.2466608 4.4036513 1 7 2.02 6.58 8.260688 -1.6806877 -0.8467002 6.2654818 0.3145182 -0.5437434 2.9722781 -6.2654818 -0.7495263 6.2654818 1 7 3.48 7.09 7.668111 -0.5781114 -0.4038134 6.9275478 0.1624522 -0.3606093 1.5381439 -6.9275478 -1.5688568 6.9275478 1 7 5.00 6.66 6.760806 -0.1008060 -0.0034257 6.5608383 0.0991617 -0.1354664 0.3249752 -6.5608383 -2.3101331 6.5608383 1 7 6.98 5.25 5.692834 -0.4428340 -0.3511619 5.6392510 -0.3892510 -0.5574629 -0.4427841 -5.6392510 -2.9956639 5.6392510 1 7 9.00 4.39 4.773088 -0.3830884 -0.2351274 4.6770924 -0.2870924 -0.4498284 -0.6623417 -4.6770924 -3.3896389 4.6770924 1 7 12.05 3.53 3.657759 -0.1277594 0.2620799 3.4628506 0.0671494 0.0699027 -0.6140273 -3.4628506 -3.5543969 3.4628506 1 7 24.22 1.15 1.264763 -0.1147628 0.4041757 1.0173104 0.1326896 0.3047783 -0.1933744 -1.0173104 -2.2899735 1.0173104 1 8 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 8 0.25 3.05 3.030112 0.0198878 0.8575190 2.6722099 0.3777901 0.9343304 2.2303572 -2.6722099 -0.0331445 2.6722099 1 8 0.52 3.05 5.180804 -2.1308037 -2.1112458 4.6108692 -1.5608692 -2.3125948 3.1222137 -4.6108692 -0.1254944 4.6108692 1 8 0.98 7.31 7.180270 0.1297299 0.7404488 6.4681488 0.8418512 0.8386082 2.9549364 -6.4681488 -0.3602003 6.4681488 1 8 2.02 7.56 8.260688 -0.7006877 -0.1795398 7.5456199 0.0143801 -0.1732472 1.1022803 -7.5456199 -1.0010159 7.5456199 1 8 3.53 6.59 7.638678 -1.0486775 -0.5904924 6.9810280 -0.3910280 -0.6260837 -0.1554909 -6.9810280 -1.8391837 6.9810280 1 8 5.05 5.88 6.731782 -0.8517825 -0.4574493 6.1031568 -0.2231568 -0.4855443 -0.3808914 -6.1031568 -2.4645556 6.1031568 1 8 7.15 4.73 5.609074 -0.8790742 -0.5684495 5.0150445 -0.2850445 -0.6101869 -0.3573541 -5.0150445 -3.0134080 5.0150445 1 8 9.07 4.57 4.744023 -0.1740234 0.3603969 4.1862826 0.3837174 0.4163826 -0.3016368 -4.1862826 -3.2717088 4.1862826 1 8 12.10 3.00 3.641835 -0.6418352 -0.4370597 3.1475866 -0.1475866 -0.4691158 -0.2270776 -3.1475866 -3.3575590 3.1475866 1 8 24.12 1.25 1.275848 -0.0258476 0.6509089 1.0154289 0.2345711 0.6779753 -0.0732589 -1.0154289 -2.2319472 1.0154289 1 9 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 9 0.30 7.37 3.503396 3.8666039 3.1607820 6.6349762 0.7350238 1.6629301 2.5040380 -6.6349762 -0.1085918 6.6349762 1 9 0.63 9.03 5.814475 3.2155249 1.1621662 7.7042147 1.3257853 1.1766810 0.7268940 -7.7042147 -0.3119285 7.7042147 1 9 1.05 7.14 7.362465 -0.2224655 -1.6886676 7.6372742 -0.4972742 -0.8802570 0.0128749 -7.6372742 -0.5747998 7.6372742 1 9 2.02 6.33 8.260688 -1.9306877 -1.4913941 7.0451470 -0.7151470 -1.1688335 -0.1078911 -7.0451470 -1.1171809 7.0451470 1 9 3.53 5.66 7.638678 -1.9786775 -0.7555276 6.1858037 -0.5258037 -0.9931082 -0.0956451 -6.1858037 -1.7856392 6.1858037 1 9 5.02 5.67 6.749185 -1.0791851 0.1866059 5.4405767 0.2294233 -0.0450870 -0.0841227 -5.4405767 -2.2689336 5.4405767 1 9 7.17 4.24 5.599301 -1.3593005 -0.3196780 4.5206259 -0.2806259 -0.7091878 -0.0698983 -4.5206259 -2.7226544 4.5206259 1 9 8.80 4.11 4.857115 -0.7471152 0.3305277 3.9283394 0.1816606 0.0597629 -0.0607403 -3.9283394 -2.9176069 3.9283394 1 9 11.60 3.16 3.804247 -0.6442474 0.2408203 3.0863249 0.0736751 -0.0453438 -0.0477210 -3.0863249 -3.0367684 3.0863249 1 9 24.43 1.12 1.241797 -0.1217973 0.3917837 1.0218394 0.0981606 0.2553561 -0.0157998 -1.0218394 -2.1349494 1.0218394 1 10 0.00 0.24 0.000000 0.2400000 0.8584217 0.0000000 0.2400000 0.8584217 0.0000000 0.0000000 0.0000000 0.0000000 1 10 0.37 2.89 4.104452 -1.2144518 0.0700930 2.8525107 0.0374893 -0.2160329 2.4825918 -2.8525107 -0.0412890 2.8525107 1 10 0.77 5.22 6.465075 -1.2450750 -0.3340586 5.0941290 0.1258710 -0.1823954 3.7814655 -5.0941290 -0.1598464 5.0941290 1 10 1.02 6.41 7.287405 -0.8774045 -0.3500685 6.1503328 0.2596672 -0.0352353 4.1124402 -6.1503328 -0.2619778 6.1503328 1 10 2.05 7.83 8.260296 -0.4302958 -1.2207528 8.6292829 -0.7992829 -0.7899683 3.5730529 -8.6292829 -0.8098214 8.6292829 1 10 3.55 10.21 7.626859 2.5831408 0.8484832 9.4123092 0.7976908 0.8439359 1.5615908 -9.4123092 -1.7046185 9.4123092 1 10 5.05 9.18 6.731782 2.4482175 0.7125720 8.9777377 0.2022623 0.5731177 0.2259721 -8.9777377 -2.5085896 8.9777377 1 10 7.08 8.02 5.643415 2.3765849 0.8349249 7.9216829 0.0983171 0.5891563 -0.5093630 -7.9216829 -3.3499104 7.9216829 1 10 9.38 7.14 4.617418 2.5225817 1.3904305 6.7140329 0.4259671 0.9567231 -0.6718602 -6.7140329 -3.9758366 6.7140329 1 10 12.10 5.68 3.641835 2.0381648 1.0928961 5.4817520 0.1982480 0.7125432 -0.6116830 -5.4817520 -4.3609565 5.4817520 1 10 23.70 2.42 1.323474 1.0965257 0.9406984 2.2919528 0.1280472 0.5468682 -0.2630416 -2.2919528 -3.8220461 2.2919528 1 11 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 11 0.25 4.86 3.030112 1.8298878 1.0354884 4.7899200 0.0700800 0.5791757 2.9699978 -4.7899200 -0.0644998 4.7899200 1 11 0.50 7.24 5.052361 2.1876386 0.8873674 6.6540063 0.5859937 0.8368746 2.3761692 -6.6540063 -0.1999357 6.6540063 1 11 0.98 8.00 7.180270 0.8197299 -0.1648447 7.4760742 0.5239258 0.2551507 0.7111710 -7.4760742 -0.5110094 7.4760742 1 11 1.98 6.81 8.259692 -1.4496918 -0.9351480 7.0354457 -0.2254457 -0.6957400 -0.1389379 -7.0354457 -1.1230761 7.0354457 1 11 3.60 5.87 7.597214 -1.7272137 -0.5525810 6.0448971 -0.1748971 -0.6705543 -0.1650777 -6.0448971 -1.8875617 6.0448971 1 11 5.02 5.22 6.749185 -1.5291851 -0.3501157 5.2870414 -0.0670414 -0.5406394 -0.1446531 -5.2870414 -2.3591591 5.2870414 1 11 7.03 4.45 5.668071 -1.2180714 -0.1369458 4.3738334 0.0761666 -0.3135758 -0.1196701 -4.3738334 -2.7810335 4.3738334 1 11 9.03 3.62 4.760610 -1.1406102 -0.2095701 3.6217749 -0.0017749 -0.4133488 -0.0990934 -3.6217749 -2.9861895 3.6217749 1 11 12.12 2.69 3.635485 -0.9454850 -0.2043776 2.7059698 -0.0159698 -0.4081099 -0.0740366 -2.7059698 -3.0198997 2.7059698 1 11 24.08 0.86 1.280309 -0.4203086 -0.1422158 0.8756228 -0.0156228 -0.2598964 -0.0239574 -0.8756228 -1.9651551 0.8756228 1 12 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 12 0.25 1.25 3.030112 -1.7801122 -1.8183581 2.2600953 -1.0100953 -2.7946743 2.0135618 -2.2600953 -0.0248883 2.2600953 1 12 0.50 3.96 5.052361 -1.0923614 -0.1610549 4.0156448 -0.0556448 -0.5761906 3.1703544 -4.0156448 -0.0913427 4.0156448 1 12 1.00 7.82 7.234871 0.5851295 1.0438956 6.4042867 1.4157133 1.0947042 3.9015618 -6.4042867 -0.3095974 6.4042867 1 12 2.00 9.72 8.260412 1.4595876 0.7689164 8.4761555 1.2438445 0.8498311 2.8194817 -8.4761555 -0.9108051 8.4761555 1 12 3.52 9.75 7.644577 2.1054226 0.9276588 8.7276846 1.0223154 0.9380527 0.7416190 -8.7276846 -1.8641887 8.7276846 1 12 5.07 8.57 6.720200 1.8497998 0.7305433 7.9748725 0.5951275 0.7293468 -0.2443478 -7.9748725 -2.6695335 7.9748725 1 12 7.07 6.59 5.648338 0.9416621 -0.1747582 6.8123995 -0.2223995 -0.0591007 -0.5751513 -6.8123995 -3.4066002 6.8123995 1 12 9.03 6.11 4.760610 1.3493898 0.5362996 5.7789626 0.3310374 0.5244373 -0.5725377 -5.7789626 -3.8468116 5.7789626 1 12 12.05 4.57 3.657759 0.9122406 0.1563469 4.4705197 0.0994803 0.1748889 -0.4629254 -4.4705197 -4.1241494 4.4705197 1 12 24.15 1.17 1.272512 -0.1025120 -1.4312142 1.5947392 -0.4247392 -1.3591130 -0.1660432 -1.5947392 -3.1150269 1.5947392 1 "],
["focei-v3.html", "3.3 FOCEI v3", " 3.3 FOCEI v3 DATA = Theoph colnames(DATA) = c(&quot;ID&quot;, &quot;BWT&quot;, &quot;DOSE&quot;, &quot;TIME&quot;, &quot;DV&quot;) DATA[,&quot;ID&quot;] = as.numeric(as.character(DATA[,&quot;ID&quot;])) require(lattice) xyplot(DV ~ TIME | as.factor(ID), data=DATA, type=&quot;b&quot;) ## INIT STEP IDs = unique(DATA[,&quot;ID&quot;]) ; IDs ## [1] 1 2 3 4 5 6 7 8 9 10 11 12 nID = length(IDs) ; nID ## [1] 12 nTheta = 3 nEta = 3 nEps = 2 nPara = nTheta + nEta*(nEta + 1)/2 + nEps ; nPara ## [1] 11 GNames = outer(&quot;G&quot;, 1:nEta, paste0)[1,] ; GNames ## [1] &quot;G1&quot; &quot;G2&quot; &quot;G3&quot; HNames = outer(&quot;H&quot;, 1:nEps, paste0)[1,] ; HNames ## [1] &quot;H1&quot; &quot;H2&quot; iOM = (nTheta + 1):(nTheta + nEta*(nEta + 1)/2) ; iOM ## [1] 4 5 6 7 8 9 iSG = (nTheta + nEta*(nEta + 1)/2 + 1):(nTheta + nEta*(nEta + 1)/2 + nEps) ; iSG ## [1] 10 11 IE = c(2, 50, 0.1) LB = rep(0, nTheta) UB = rep(1e6, nTheta) alpha = 0.1 - log((IE - LB)/(UB - LB)/(1 - (IE - LB)/(UB - LB))) ; alpha ## [1] 13.22236 10.00344 16.21810 p0 = rep(0.1, nTheta) p1 = exp(p0 - alpha) p2 = p1/(p1 + 1)*(UB - LB) + LB ; p2 ## [1] 2.0 50.0 0.1 OM0 = matrix(c(0.2, 0.1, 0.1, 0.1, 0.2, 0.1, 0.1, 0.1, 0.2), nrow=nEta) ; OM0 ## [,1] [,2] [,3] ## [1,] 0.2 0.1 0.1 ## [2,] 0.1 0.2 0.1 ## [3,] 0.1 0.1 0.2 SG0 = diag(c(0.1, 0.1)) ; SG0 ## [,1] [,2] ## [1,] 0.1 0.0 ## [2,] 0.0 0.1 EXPP1 = exp(0.1) ScaleVar = function(VarMat, dim1) { M1 = chol(VarMat) V1 = diag(M1) M2 = abs(10 * (M1 - diag(V1, nrow=dim1))) + diag(V1/EXPP1, nrow=dim1) return(t(M2)) } OMscl = ScaleVar(OM0, nEta) ; OMscl ## [,1] [,2] [,3] ## [1,] 0.4046556 0.000000 0.0000000 ## [2,] 2.2360680 0.350442 0.0000000 ## [3,] 2.2360680 1.290994 0.3303999 SGscl = ScaleVar(SG0, nEps) ; SGscl ## [,1] [,2] ## [1,] 0.2861347 0.0000000 ## [2,] 0.0000000 0.2861347 DesclVar = function(mUCP, mSCL) { nRow = dim(mUCP)[1] maT = matrix(nrow=nRow, ncol=nRow) for (i in 1:nRow) { for (j in 1:nRow) { if (i==j) { maT[i,j] = exp(mUCP[i,j]) * mSCL[i,j] } else if(i &gt; j) { maT[i,j] = mUCP[i,j] * mSCL[i,j] } else { maT[i,j] = 0 } } } return(maT %*% t(maT)) } DesclVar(matrix(rep(0.1, nEta*nEta), nrow=nEta), OMscl) ## [,1] [,2] [,3] ## [1,] 0.2 0.1 0.1 ## [2,] 0.1 0.2 0.1 ## [3,] 0.1 0.1 0.2 DesclVar(diag(rep(0.1, nEps)), SGscl) ## [,1] [,2] ## [1,] 0.1 0.0 ## [2,] 0.0 0.1 ltv2mat = function(vec) { LENGTH = length(vec) DIM = round((sqrt(8*LENGTH+1)-1)/2,0) if (DIM*(DIM+1)/2 != LENGTH) return(NULL) mat = matrix(nrow=DIM, ncol=DIM) for (m in 1:DIM) { for (n in 1:DIM) { k = max(m,n) l = min(m,n) p = k*(k - 1)/2 + l mat[m,n] = vec[p] } } return(mat) } s2o = function(p) { p0 = p[1:nTheta] p1 = exp(p0 - alpha) p2 = p1/(p1 + 1)*(UB - LB) + LB OM = DesclVar(ltv2mat(p[iOM]), OMscl) SG = DesclVar(diag(p[iSG]), SGscl) Res = list(p2, OM, SG) names(Res) = c(&quot;THETA&quot;, &quot;OMEGA&quot;, &quot;SIGMA&quot;) return(Res) } s2o(rep(0.1, nPara)) ## $THETA ## [1] 2.0 50.0 0.1 ## ## $OMEGA ## [,1] [,2] [,3] ## [1,] 0.2 0.1 0.1 ## [2,] 0.1 0.2 0.1 ## [3,] 0.1 0.1 0.2 ## ## $SIGMA ## [,1] [,2] ## [1,] 0.1 0.0 ## [2,] 0.0 0.1 ## EST STEP PRED = function(THETA, ETA) { # Extern: DATA[,c(&quot;ID&quot;, &quot;TIME&quot;, &quot;DV&quot;)], cID KA = THETA[1]*exp(ETA[1]) V = THETA[2]*exp(ETA[2]) K = THETA[3]*exp(ETA[3]) TIME = DATA[DATA$ID == cID, &quot;TIME&quot;] TERM1 = KA/(KA - K) TERM2 = K /(KA - K) TERM3 = 320/V*TERM1 TERM4 = exp(-K*TIME) TERM5 = exp(-KA*TIME) F = TERM3*(TERM4 - TERM5) G1 = -F*TERM2 + KA*TIME*TERM3*TERM5 G2 = -F G3 = F*TERM2 - K*TIME*TERM3*TERM4 H1 = F H2 = 1 return(cbind(F, G1, G2, G3, H1, H2)) } ObjEta = function(ETA) { # External: THETA, invOM, SG, cID, DATA[,&quot;DV&quot;] FGH = PRED(THETA, ETA) Hi = FGH[, HNames, drop=FALSE] # always INTER==TRUE Ri = DATA[DATA$ID == cID, &quot;DV&quot;] - FGH[,&quot;F&quot;] ## Slower version # Vi = diag(diag(Hi %*% SG %*% t(Hi))) # iSum = log(det(Vi)) + t(Ri) %*% solve(Vi) %*% Ri + t(ETA) %*% invOM %*% ETA ## Faster version Vi = diag(Hi %*% SG %*% t(Hi)) return(sum(log(Vi) + Ri*Ri/Vi) + t(ETA) %*% invOM %*% ETA) } EBE = cbind(ID = IDs, ETA1=0, ETA2=0, ETA3=0, Oi=0) ## Preliminary fitting OBJ1a = function(p) { # External: DATA, nTheta, nEta, nEps if (STEP == &quot;EST&quot;) { r = s2o(p[1:nPara]) THETA &lt;&lt;- r$THETA # for ObjEta OM = r$OMEGA SG &lt;&lt;- r$SIGMA # for ObjEta } else { THETA &lt;&lt;- p[1:nTheta] # for ObjEta OM = ltv2mat(p[iOM]) SG &lt;&lt;- diag(p[iSG]) # for ObjEta } invOM &lt;&lt;- solve(OM) # for ObjEta Term3 = determinant(OM, logarithm=TRUE)$modulus[[1]] for (i in 1:nID) { cID &lt;&lt;- IDs[i] # for PRED ETA = p[(nPara + (i - 1)*nEta + 1):(nPara + i*nEta)] FGH = PRED(THETA, ETA) # no EBE estimation Gi = FGH[, GNames, drop=FALSE] Hi = FGH[, HNames, drop=FALSE] # always INTER==TRUE Ri = DATA[DATA$ID == cID, &quot;DV&quot;] - FGH[,&quot;F&quot;] Vi = diag(Hi %*% SG %*% t(Hi)) Hsum = invOM + t(Gi) %*% solve(diag(Vi)) %*% Gi EBE[i, 2:(1+nEta)] &lt;&lt;- ETA EBE[i, (2+nEta)] &lt;&lt;- sum(log(Vi) + Ri*Ri/Vi) + t(ETA) %*% invOM %*% ETA + Term3 + determinant(Hsum, logarithm=TRUE)$modulus[[1]] } return(sum(EBE[,5])) } STEP = &quot;EST&quot; OBJ1a(c(rep(0.1, nPara), rep(0, nEta*nID))) ## [1] 704.6327 StartTime = Sys.time() r0 = optim(c(rep(0.1, nPara), rep(0, nEta*nID)), OBJ1a, method=&quot;L-BFGS-B&quot;) difftime(Sys.time(), StartTime) ## Time difference of 22.36428 secs r0 ## $par ## [1] -0.198420707 -0.332103374 -0.036591232 0.476942665 0.038944671 ## [6] -1.124822561 -0.005118835 0.080998871 -1.157305201 -0.764268880 ## [11] -0.045336909 -0.081176943 -0.178378765 -0.299721324 0.341529015 ## [16] 0.053264316 0.054619193 0.430569012 0.047063875 -0.013165238 ## [21] -0.340492147 -0.042563282 0.019541572 -0.036617850 -0.116969614 ## [26] -0.079039409 -0.443997821 0.151413284 0.214650631 -0.855217057 ## [31] 0.006795525 0.141972592 -0.033767831 0.083488599 0.062895409 ## [36] 1.371985455 0.181158405 -0.018582794 -0.702983251 -0.211870271 ## [41] -0.150221103 0.873920080 0.177658669 0.078867755 -0.506386257 ## [46] -0.146353344 -0.004184245 ## ## $value ## [1] 92.19595 ## ## $counts ## function gradient ## 111 111 ## ## $convergence ## [1] 1 ## ## $message ## [1] &quot;NEW_X&quot; OBJ1a(r0$par) ## [1] 92.19595 ### END of Preliminary Fitting r1 = s2o(r0$par[1:nPara]) ; r1 ## $THETA ## [1] 1.48397899 32.45768285 0.08723267 ## ## $OMEGA ## [,1] [,2] [,3] ## [1,] 0.425048252 0.05677435 -0.007462344 ## [2,] 0.056774348 0.02053207 0.010902375 ## [3,] -0.007462344 0.01090238 0.021851631 ## ## $SIGMA ## [,1] [,2] ## [1,] 0.01775438 0.00000000 ## [2,] 0.00000000 0.07477595 OBJ1 = function(p) { # External: DATA, nTheta, nEta, nEps if (STEP == &quot;EST&quot;) { r = s2o(p) THETA &lt;&lt;- r$THETA # for ObjEta OM = r$OMEGA SG &lt;&lt;- r$SIGMA # for ObjEta } else { THETA &lt;&lt;- p[1:nTheta] # for ObjEta OM = ltv2mat(p[iOM]) SG &lt;&lt;- diag(p[iSG]) # for ObjEta } invOM &lt;&lt;- solve(OM) # for ObjEta Term3 = determinant(OM, logarithm=TRUE)$modulus[[1]] for (i in 1:nID) { cID &lt;&lt;- IDs[i] # for PRED Res = optim(EBE[i,2:(nEta+1)], ObjEta, method=&quot;BFGS&quot;) FGH = PRED(THETA, Res$par) Gi = FGH[, GNames, drop=FALSE] Hi = FGH[, HNames, drop=FALSE] Vi = diag(Hi %*% SG %*% t(Hi)) Hsum = invOM + t(Gi) %*% solve(diag(Vi)) %*% Gi EBE[i, 2:(1 + nEta)] &lt;&lt;- Res$par EBE[i, (2 + nEta)] &lt;&lt;- Res$value + Term3 + determinant(Hsum, logarithm=TRUE)$modulus[[1]] } return(sum(EBE[,5])) } STEP = &quot;EST&quot; OBJ1(r0$par[1:nPara]) ## [1] 92.26438 StartTime = Sys.time() r0 = optim(r0$par[1:nPara], OBJ1, method=&quot;L-BFGS-B&quot;) difftime(Sys.time(), StartTime) ## Time difference of 1.811854 mins r0 ## $par ## [1] -0.195276648 -0.331969341 -0.035832978 0.489952425 0.038719394 ## [6] -1.157441650 -0.004477226 0.089135781 -1.368911340 -0.768731746 ## [11] -0.023780298 ## ## $value ## [1] 92.21518 ## ## $counts ## function gradient ## 63 63 ## ## $convergence ## [1] 0 ## ## $message ## [1] &quot;CONVERGENCE: REL_REDUCTION_OF_F &lt;= FACTR*EPSMCH&quot; OBJ1(r0$par) ## [1] 92.21518 r1 = s2o(r0$par) ; r1 ## $THETA ## [1] 1.48865205 32.46203338 0.08729884 ## ## $OMEGA ## [,1] [,2] [,3] ## [1,] 0.436252942 0.05718508 -0.006612463 ## [2,] 0.057185080 0.01962681 0.011807468 ## [3,] -0.006612463 0.01180747 0.020406335 ## ## $SIGMA ## [,1] [,2] ## [1,] 0.01759662 0.00000000 ## [2,] 0.00000000 0.07807029 ## COV STEP STEP = &quot;COV&quot; p = c(r1$THETA, r1$OMEGA[upper.tri(r1$OMEGA, diag=TRUE)], diag(r1$SIGMA)) OBJ1(p) ## [1] 92.21519 require(numDeriv) Rmat = hessian(OBJ1, p)/2 ; Rmat ## [,1] [,2] [,3] [,4] [,5] ## [1,] 19.3875698 -2.2539467 229.21671 -0.3262344 -17.758600 ## [2,] -2.2539467 0.6753218 -34.60504 -0.5354217 6.013072 ## [3,] 229.2167105 -34.6050398 43492.20722 148.9108617 -1539.932802 ## [4,] -0.3262344 -0.5354217 148.91086 71.4000816 -366.161001 ## [5,] -17.7586004 6.0130717 -1539.93280 -366.1610010 3338.018090 ## [6,] 20.0793759 -11.5819752 2164.52664 347.4968306 -5315.912101 ## [7,] -20.2615081 -4.1974799 161.28344 5.9206093 -1255.676942 ## [8,] -27.1278187 3.7979744 -812.78000 -275.5200801 1508.649392 ## [9,] -14.8450973 1.5973610 -1114.50990 29.1440760 -656.934396 ## [10,] 100.0557580 -28.3018809 2850.37244 140.8580746 -2044.090096 ## [11,] -8.5415724 -0.8257649 -59.67890 -0.1064240 -451.852766 ## [,6] [,7] [,8] [,9] [,10] ## [1,] 20.07938 -20.261508 -27.127819 -14.845097 100.05576 ## [2,] -11.58198 -4.197480 3.797974 1.597361 -28.30188 ## [3,] 2164.52664 161.283444 -812.780003 -1114.509897 2850.37244 ## [4,] 347.49683 5.920609 -275.520080 29.144076 140.85807 ## [5,] -5315.91210 -1255.676942 1508.649392 -656.934396 -2044.09010 ## [6,] 18460.93705 -2065.996448 -3941.739578 -184.935525 4905.63308 ## [7,] -2065.99645 13798.636967 -2621.782489 -923.373835 -1310.80462 ## [8,] -3941.73958 -2621.782489 23935.799230 -5232.380084 -8362.79121 ## [9,] -184.93553 -923.373835 -5232.380084 7004.561122 2231.98146 ## [10,] 4905.63308 -1310.804621 -8362.791209 2231.981464 88908.65842 ## [11,] 100.24227 -1560.394319 -1994.529545 -276.378300 5893.91514 ## [,11] ## [1,] -8.5415724 ## [2,] -0.8257649 ## [3,] -59.6789037 ## [4,] -0.1064240 ## [5,] -451.8527656 ## [6,] 100.2422681 ## [7,] -1560.3943188 ## [8,] -1994.5295452 ## [9,] -276.3782999 ## [10,] 5893.9151353 ## [11,] 1333.3556571 OiS1 = function(p) { THETA &lt;&lt;- p[1:nTheta] # for ObjEta OM = ltv2mat(p[iOM]) invOM &lt;&lt;- solve(OM) # for ObjEta SG &lt;&lt;- diag(p[iSG]) # for ObjEta Res = optim(EBE[EBE[,&quot;ID&quot;]==cID, 2:(nEta+1)], ObjEta, method=&quot;BFGS&quot;) FGH = PRED(THETA, Res$par) Gi = FGH[, GNames, drop=FALSE] Hi = FGH[, HNames, drop=FALSE] Vi = diag(Hi %*% SG %*% t(Hi)) Hsum = invOM + t(Gi) %*% solve(diag(Vi)) %*% Gi return(Res$value + determinant(OM, logarithm=TRUE)$modulus[[1]] + determinant(Hsum, logarithm=TRUE)$modulus[[1]]) } CalcSmat = function(p) { Smat = matrix(rep(0, nPara*nPara), nrow=nPara, ncol=nPara) for (i in 1:nID) { cID &lt;&lt;- IDs[i] # for PRED gr = grad(OiS1, p) Smat = Smat + gr %*% t(gr) } return(Smat/4) } Smat = CalcSmat(p) ; Smat ## [,1] [,2] [,3] [,4] [,5] ## [1,] 18.822969 -2.3719442 215.16015 -4.152861 140.30294 ## [2,] -2.371944 0.6631114 -33.16395 3.072463 -26.28493 ## [3,] 215.160146 -33.1639478 40332.44219 298.103447 -2265.80507 ## [4,] -4.152861 3.0724627 298.10345 44.060767 -193.99576 ## [5,] 140.302937 -26.2849311 -2265.80507 -193.995758 2585.70170 ## [6,] -299.993819 31.2147530 8515.57944 248.184807 -5779.68564 ## [7,] 19.897928 -5.4519907 -824.00806 -51.236155 379.53653 ## [8,] -62.867367 35.4680328 -5814.07703 227.501905 -136.60531 ## [9,] -62.641826 1.1904679 -16247.18120 -241.854035 976.28109 ## [10,] 357.402642 -138.4789356 31764.54113 -876.594687 -4639.61736 ## [11,] -34.102919 -7.5085851 -6383.90788 -150.936257 115.58789 ## [,6] [,7] [,8] [,9] [,10] ## [1,] -299.99382 19.897928 -62.86737 -62.641826 357.4026 ## [2,] 31.21475 -5.451991 35.46803 1.190468 -138.4789 ## [3,] 8515.57944 -824.008059 -5814.07703 -16247.181199 31764.5411 ## [4,] 248.18481 -51.236155 227.50191 -241.854035 -876.5947 ## [5,] -5779.68564 379.536534 -136.60531 976.281093 -4639.6174 ## [6,] 17538.91746 -651.339584 -3385.36097 -2258.491614 17546.9813 ## [7,] -651.33958 141.735432 -217.48590 618.369506 1271.7122 ## [8,] -3385.36097 -217.485898 6834.84220 -976.649199 -22483.8033 ## [9,] -2258.49161 618.369506 -976.64920 9384.893324 -1998.9869 ## [10,] 17546.98131 1271.712217 -22483.80329 -1998.986885 269837.5280 ## [11,] 148.43599 291.627636 -1823.89980 4545.673398 10786.1897 ## [,11] ## [1,] -34.102919 ## [2,] -7.508585 ## [3,] -6383.907880 ## [4,] -150.936257 ## [5,] 115.587894 ## [6,] 148.435985 ## [7,] 291.627636 ## [8,] -1823.899804 ## [9,] 4545.673398 ## [10,] 10786.189718 ## [11,] 2995.862465 invR = solve(Rmat) ; invR ## [,1] [,2] [,3] [,4] ## [1,] 0.0774899372 0.2530890144 -2.889945e-04 -1.310829e-02 ## [2,] 0.2530890144 2.4062751224 2.337539e-04 -3.604222e-02 ## [3,] -0.0002889945 0.0002337539 2.479102e-05 -9.102505e-05 ## [4,] -0.0131082938 -0.0360422174 -9.102505e-05 4.518982e-04 ## [5,] -0.0036163597 -0.0115629036 -1.046308e-05 -3.244190e-03 ## [6,] -0.0009143694 -0.0021613723 -4.774784e-06 -1.374726e-03 ## [7,] -0.0007539212 -0.0017043824 -4.336630e-06 -1.463191e-03 ## [8,] -0.0005147554 -0.0014174440 -2.320877e-06 -9.244497e-04 ## [9,] -0.0009018895 -0.0029177410 -4.732725e-07 -1.605611e-03 ## [10,] 0.0001556629 0.0009251788 4.611227e-07 3.382343e-04 ## [11,] -0.0030449516 -0.0094461871 -1.447423e-05 -6.029509e-03 ## [,5] [,6] [,7] [,8] ## [1,] -3.616360e-03 -9.143694e-04 -7.539212e-04 -5.147554e-04 ## [2,] -1.156290e-02 -2.161372e-03 -1.704382e-03 -1.417444e-03 ## [3,] -1.046308e-05 -4.774784e-06 -4.336630e-06 -2.320877e-06 ## [4,] -3.244190e-03 -1.374726e-03 -1.463191e-03 -9.244497e-04 ## [5,] -6.631968e-04 -2.368558e-04 -3.246469e-04 -2.420894e-04 ## [6,] -2.368558e-04 -1.317629e-05 -8.198103e-05 -5.763496e-05 ## [7,] -3.246469e-04 -8.198103e-05 -1.744148e-05 -5.001423e-05 ## [8,] -2.420894e-04 -5.763496e-05 -5.001423e-05 1.397198e-05 ## [9,] -3.655074e-04 -9.318917e-05 -8.509033e-05 -2.884808e-05 ## [10,] 7.821589e-05 1.806714e-05 1.665501e-05 1.260776e-05 ## [11,] -1.401561e-03 -3.681301e-04 -2.965353e-04 -1.814009e-04 ## [,9] [,10] [,11] ## [1,] -9.018895e-04 1.556629e-04 -3.044952e-03 ## [2,] -2.917741e-03 9.251788e-04 -9.446187e-03 ## [3,] -4.732725e-07 4.611227e-07 -1.447423e-05 ## [4,] -1.605611e-03 3.382343e-04 -6.029509e-03 ## [5,] -3.655074e-04 7.821589e-05 -1.401561e-03 ## [6,] -9.318917e-05 1.806714e-05 -3.681301e-04 ## [7,] -8.509033e-05 1.665501e-05 -2.965353e-04 ## [8,] -2.884808e-05 1.260776e-05 -1.814009e-04 ## [9,] 6.106039e-05 1.522724e-05 -3.219780e-04 ## [10,] 1.522724e-05 1.151516e-05 1.737131e-05 ## [11,] -3.219780e-04 1.737131e-05 -4.856963e-04 Cov = invR %*% Smat %*% invR ; Cov ## [,1] [,2] [,3] [,4] [,5] ## [1,] 1.079407e-01 0.402761996 7.928086e-04 0.1030729570 2.036088e-02 ## [2,] 4.027620e-01 3.118471088 3.954180e-03 0.4795335118 8.182133e-02 ## [3,] 7.928086e-04 0.003954180 2.746468e-05 0.0019709339 4.572411e-04 ## [4,] 1.030730e-01 0.479533512 1.970934e-03 0.1922529585 4.139760e-02 ## [5,] 2.036088e-02 0.081821328 4.572411e-04 0.0413975987 9.527650e-03 ## [6,] 4.313886e-03 0.023530442 1.293300e-04 0.0108087155 2.530993e-03 ## [7,] 3.890230e-03 0.019139770 9.815671e-05 0.0086756573 2.027085e-03 ## [8,] 2.207466e-03 0.013993491 4.948554e-05 0.0048730490 1.088229e-03 ## [9,] 1.294875e-03 0.009702841 4.115739e-05 0.0035719941 8.941644e-04 ## [10,] 5.179028e-05 -0.001163627 -2.461254e-06 -0.0003365813 -4.107103e-05 ## [11,] 6.381714e-03 0.040744770 2.305145e-04 0.0190957909 4.599121e-03 ## [,6] [,7] [,8] [,9] [,10] ## [1,] 4.313886e-03 3.890230e-03 2.207466e-03 1.294875e-03 5.179028e-05 ## [2,] 2.353044e-02 1.913977e-02 1.399349e-02 9.702841e-03 -1.163627e-03 ## [3,] 1.293300e-04 9.815671e-05 4.948554e-05 4.115739e-05 -2.461254e-06 ## [4,] 1.080872e-02 8.675657e-03 4.873049e-03 3.571994e-03 -3.365813e-04 ## [5,] 2.530993e-03 2.027085e-03 1.088229e-03 8.941644e-04 -4.107103e-05 ## [6,] 7.393653e-04 5.640367e-04 3.094355e-04 2.679546e-04 -1.227543e-05 ## [7,] 5.640367e-04 4.528617e-04 2.531707e-04 2.237611e-04 -4.392451e-06 ## [8,] 3.094355e-04 2.531707e-04 1.562061e-04 1.348397e-04 -2.932859e-06 ## [9,] 2.679546e-04 2.237611e-04 1.348397e-04 1.440455e-04 2.746940e-06 ## [10,] -1.227543e-05 -4.392451e-06 -2.932859e-06 2.746940e-06 3.064949e-05 ## [11,] 1.338008e-03 1.081859e-03 6.173023e-04 5.908038e-04 -2.836484e-05 ## [,11] ## [1,] 6.381714e-03 ## [2,] 4.074477e-02 ## [3,] 2.305145e-04 ## [4,] 1.909579e-02 ## [5,] 4.599121e-03 ## [6,] 1.338008e-03 ## [7,] 1.081859e-03 ## [8,] 6.173023e-04 ## [9,] 5.908038e-04 ## [10,] -2.836484e-05 ## [11,] 2.828521e-03 SE = sqrt(diag(Cov)) ; SE ## [1] 0.328543263 1.765919332 0.005240675 0.438466599 0.097609681 ## [6] 0.027191273 0.021280548 0.012498245 0.012001895 0.005536198 ## [11] 0.053183838 Correl = cov2cor(Cov) ; Correl ## [,1] [,2] [,3] [,4] [,5] [,6] ## [1,] 1.00000000 0.6942007 0.4604564 0.7155099 0.63490830 0.48288811 ## [2,] 0.69420072 1.0000000 0.4272660 0.6193150 0.47468200 0.49003792 ## [3,] 0.46045641 0.4272660 1.0000000 0.8577254 0.89385105 0.90757506 ## [4,] 0.71550991 0.6193150 0.8577254 1.0000000 0.96726560 0.90658397 ## [5,] 0.63490830 0.4746820 0.8938510 0.9672656 1.00000000 0.95360482 ## [6,] 0.48288811 0.4900379 0.9075751 0.9065840 0.95360482 1.00000000 ## [7,] 0.55641638 0.5093110 0.8801363 0.9297861 0.97587959 0.97475393 ## [8,] 0.53759144 0.6340247 0.7555132 0.8892323 0.89202762 0.91052446 ## [9,] 0.32838650 0.4578025 0.6543510 0.6787727 0.76326376 0.82107305 ## [10,] 0.02847371 -0.1190231 -0.0848316 -0.1386570 -0.07600306 -0.08154467 ## [11,] 0.36522889 0.4338317 0.8270491 0.8188823 0.88593576 0.92522988 ## [,7] [,8] [,9] [,10] [,11] ## [1,] 0.55641638 0.53759144 0.32838650 0.02847371 0.36522889 ## [2,] 0.50931098 0.63402470 0.45780255 -0.11902308 0.43383175 ## [3,] 0.88013628 0.75551323 0.65435096 -0.08483160 0.82704915 ## [4,] 0.92978613 0.88923230 0.67877273 -0.13865703 0.81888225 ## [5,] 0.97587959 0.89202762 0.76326376 -0.07600306 0.88593576 ## [6,] 0.97475393 0.91052446 0.82107305 -0.08154467 0.92522988 ## [7,] 1.00000000 0.95187883 0.87609637 -0.03728314 0.95589097 ## [8,] 0.95187883 1.00000000 0.89891526 -0.04238679 0.92868655 ## [9,] 0.87609637 0.89891526 1.00000000 0.04134164 0.92557965 ## [10,] -0.03728314 -0.04238679 0.04134164 1.00000000 -0.09633609 ## [11,] 0.95589097 0.92868655 0.92557965 -0.09633609 1.00000000 InvCov = Rmat %*% solve(Smat) %*% Rmat ; InvCov ## [,1] [,2] [,3] [,4] [,5] ## [1,] 169.32467 -22.872641 5743.5440 58.38885 1421.4042 ## [2,] -22.87264 6.233360 -680.8053 -57.67070 366.8454 ## [3,] 5743.54397 -680.805272 736633.0673 -7966.24089 172817.8071 ## [4,] 58.38885 -57.670698 -7966.2409 1279.01448 -11251.3721 ## [5,] 1421.40422 366.845394 172817.8071 -11251.37209 201779.5710 ## [6,] 4721.15915 -436.469988 161778.1913 -717.17157 135888.1884 ## [7,] -26915.46574 497.536409 -1770330.5561 50957.75616 -1513436.8899 ## [8,] 7277.82326 -10.212671 718164.1668 -27228.24172 461329.5001 ## [9,] 6232.19858 -823.542858 352393.5123 4361.61672 189773.1591 ## [10,] 1841.46840 49.206089 90661.5967 -2846.46842 130245.6711 ## [11,] 1963.78552 1.065952 80760.5239 -3140.50280 100862.8491 ## [,6] [,7] [,8] [,9] ## [1,] 4721.1591 -26915.4657 7.277823e+03 6232.1986 ## [2,] -436.4700 497.5364 -1.021267e+01 -823.5429 ## [3,] 161778.1913 -1770330.5561 7.181642e+05 352393.5123 ## [4,] -717.1716 50957.7562 -2.722824e+04 4361.6167 ## [5,] 135888.1884 -1513436.8899 4.613295e+05 189773.1591 ## [6,] 241487.4193 -1571627.8700 3.642851e+05 314400.2954 ## [7,] -1571627.8700 13850586.0087 -3.789127e+06 -2323105.8084 ## [8,] 364285.1373 -3789126.5822 1.423714e+06 468514.5280 ## [9,] 314400.2954 -2323105.8084 4.685145e+05 635910.1187 ## [10,] 142145.4691 -1214596.1749 2.741718e+05 197051.7516 ## [11,] 109480.7714 -939526.4564 2.300352e+05 137793.8852 ## [,10] [,11] ## [1,] 1.841468e+03 1.963786e+03 ## [2,] 4.920609e+01 1.065952e+00 ## [3,] 9.066160e+04 8.076052e+04 ## [4,] -2.846468e+03 -3.140503e+03 ## [5,] 1.302457e+05 1.008628e+05 ## [6,] 1.421455e+05 1.094808e+05 ## [7,] -1.214596e+06 -9.395265e+05 ## [8,] 2.741718e+05 2.300352e+05 ## [9,] 1.970518e+05 1.377939e+05 ## [10,] 1.595494e+05 9.311402e+04 ## [11,] 9.311402e+04 7.603902e+04 EigenVal = sort(eigen(Correl)$values) ; EigenVal # Sorted Eigenvalues ## [1] 0.0001176097 0.0018574319 0.0125885068 0.0204849822 0.0413248050 ## [6] 0.1010161938 0.2474589241 0.5598582699 1.0250308967 1.1448367689 ## [11] 7.8454256110 ## EBE EBE ## ID ETA1 ETA2 ETA3 Oi ## [1,] 1 -0.10256085 -0.190982552 -0.28411241 20.154278 ## [2,] 2 0.32990345 0.054931337 0.04702787 17.627401 ## [3,] 3 0.41181515 0.043553641 -0.01209834 -1.380024 ## [4,] 4 -0.34473091 -0.042649496 0.01657244 9.321832 ## [5,] 5 -0.03215317 -0.110880980 -0.09181956 20.283676 ## [6,] 6 -0.47043656 0.139551080 0.22833482 4.116907 ## [7,] 7 -0.85934526 0.003403124 0.14444062 1.253260 ## [8,] 8 -0.06243313 0.072278129 0.07530383 3.950278 ## [9,] 9 1.33510599 0.177196428 -0.01316978 2.984217 ## [10,] 10 -0.71176288 -0.214669713 -0.14926232 4.742085 ## [11,] 11 0.86630606 0.176042463 0.07812507 -2.496232 ## [12,] 12 -0.50055790 -0.137557247 -0.02294610 11.664224 ## sdtab SqrtInvCov = function(M) { EigenResult = eigen(as.matrix(M)) EigenVector = EigenResult$vectors EigenValues = abs(EigenResult$values) return(EigenVector %*% diag(1/sqrt(EigenValues)) %*% t(EigenVector)) } THETA = r1$THETA OM = r1$OMEGA SG = r1$SIGMA tSD = vector() for (i in 1:nID) { cID = IDs[i] FGH0 = PRED(THETA, rep(0, nEta)) G0i = FGH0[, GNames, drop=FALSE] H0i = FGH0[, HNames, drop=FALSE] R0i = DATA[DATA$ID == cID, &quot;DV&quot;] - FGH0[,&quot;F&quot;] C0i = G0i %*% OM %*% t(G0i) + diag(diag(H0i %*% SG %*% t(H0i))) WRES = SqrtInvCov(C0i) %*% R0i cEBE = EBE[EBE[,&quot;ID&quot;]==cID, 2:(nEta + 1)] FGH1 = PRED(THETA, cEBE) G1i = FGH1[, GNames, drop=FALSE] H1i = FGH1[, HNames, drop=FALSE] R1i = DATA[DATA$ID == cID, &quot;DV&quot;] - FGH1[,&quot;F&quot;] C1i = G1i %*% OM %*% t(G1i) + diag(diag(H1i %*% SG %*% t(H1i))) CWRES = SqrtInvCov(C1i) %*% (R1i + G1i %*% cEBE) tSD = rbind(tSD, cbind(DATA[DATA$ID == cID, c(&quot;ID&quot;, &quot;TIME&quot;, &quot;DV&quot;)], PRED=FGH0[,&quot;F&quot;], RES=R0i, WRES, CIPREDI=FGH1[,&quot;F&quot;], CIRESI=R1i, CWRES, G1i, H1i)) } ; tSD ID TIME DV PRED RES WRES CIPREDI CIRESI CWRES G1 G2 G3 H1 H2 1 0.00 0.74 0.000000 0.7400000 2.6484320 0.0000000 0.7400000 2.6484320 0.0000000 0.0000000 0.0000000 0.0000000 1 1 0.25 2.84 3.028118 -0.1881184 -1.1825222 3.3748146 -0.5348146 -1.0749069 2.8381642 -3.3748146 -0.0291925 3.3748146 1 1 0.57 6.57 5.481072 1.0889275 0.4396466 6.2513344 0.3186656 0.4026097 4.1456813 -6.2513344 -0.1311551 6.2513344 1 1 1.12 10.50 7.519725 2.9802751 1.8244894 8.8695460 1.6304540 1.5750611 3.7361999 -8.8695460 -0.4016838 8.8695460 1 1 2.02 9.66 8.261110 1.3988896 0.0490750 10.1548008 -0.4948008 0.0692171 1.7343496 -10.1548008 -0.9360373 10.1548008 1 1 3.82 8.58 7.466725 1.1132745 -0.3881877 9.6867020 -1.1067020 -0.2440045 -0.1180349 -9.6867020 -1.9518990 9.6867020 1 1 5.10 8.36 6.703775 1.6562251 0.1066331 8.9601237 -0.6001237 0.1554222 -0.3698571 -8.9601237 -2.5463479 8.9601237 1 1 7.03 7.47 5.668468 1.8015316 0.2764778 7.9036195 -0.4336195 0.2920403 -0.3970465 -7.9036195 -3.2449539 7.9036195 1 1 9.05 6.89 4.752282 2.1377183 0.8290792 6.9220095 -0.0320095 0.6889600 -0.3551412 -6.9220095 -3.7603397 6.9220095 1 1 12.12 5.94 3.635041 2.3049587 1.4609378 5.6575506 0.2824494 1.0998711 -0.2909028 -5.6575506 -4.2146649 5.6575506 1 1 24.37 3.28 1.247585 2.0324150 3.4210430 2.5296094 0.7503906 2.3803851 -0.1300765 -2.5296094 -3.9206138 2.5296094 1 2 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 2 0.27 1.72 3.221967 -1.5019671 -3.7626002 3.9422880 -2.2222880 -3.0241906 2.9380329 -3.9422880 -0.0530146 3.9422880 1 2 0.52 7.91 5.178293 2.7317072 2.9750787 5.9822395 1.9277605 2.7962337 3.3046885 -5.9822395 -0.1663105 5.9822395 1 2 1.00 8.31 7.233125 1.0768747 0.7029074 7.6773180 0.6326820 0.7624625 2.1943376 -7.6773180 -0.4601777 7.6773180 1 2 1.92 8.33 8.254987 0.0750127 0.1211345 8.0060749 0.3239251 0.1358631 0.3583835 -8.0060749 -1.0685614 8.0060749 1 2 3.50 6.85 7.657592 -0.8075917 -0.4336210 7.0800322 -0.2300322 -0.5162173 -0.2769537 -7.0800322 -1.9423044 7.0800322 1 2 5.02 6.08 6.750126 -0.6701263 -0.3086605 6.1664812 -0.0864812 -0.3994069 -0.2820154 -6.1664812 -2.5475385 6.1664812 1 2 7.03 5.40 5.668468 -0.2684684 0.1117557 5.1307720 0.2692280 0.0597591 -0.2371662 -5.1307720 -3.0631986 5.1307720 1 2 9.00 4.55 4.773069 -0.2230693 0.1543965 4.2844720 0.2655280 0.1141569 -0.1981018 -4.2844720 -3.3302516 4.2844720 1 2 12.00 3.01 3.673322 -0.6633216 -0.6658040 3.2559698 -0.2459698 -0.7687215 -0.1505479 -3.2559698 -3.4246003 3.2559698 1 2 24.30 0.90 1.255232 -0.3552322 -0.6183214 1.0565520 -0.1565520 -0.6520696 -0.0488523 -1.0565520 -2.3003996 1.0565520 1 3 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 3 0.27 4.40 3.221967 1.1780329 0.6684819 4.2383638 0.1616362 0.4785331 3.0768928 -4.2383638 -0.0541218 4.2383638 1 3 0.58 6.90 5.538611 1.3613890 0.4753984 6.6696808 0.2303192 0.4491051 3.2081699 -6.6696808 -0.2007921 6.6696808 1 3 1.02 8.20 7.285709 0.9142915 0.1665216 7.9959950 0.2040050 0.2472689 1.9540287 -7.9959950 -0.4715454 7.9959950 1 3 2.02 7.80 8.261110 -0.4611104 -0.4973894 8.1402029 -0.3402029 -0.4208912 0.1509160 -8.1402029 -1.1115772 8.1402029 1 3 3.62 7.50 7.586549 -0.0865485 0.1572564 7.1793623 0.3206377 0.1664935 -0.2631430 -7.1793623 -1.9559034 7.1793623 1 3 5.08 6.20 6.715339 -0.5153393 -0.2613457 6.3323444 -0.1323444 -0.3065791 -0.2515050 -6.3323444 -2.5217935 6.3323444 1 3 7.07 5.30 5.648725 -0.3487251 -0.1527307 5.3337353 -0.0337353 -0.2008107 -0.2128630 -5.3337353 -3.0395269 5.3337353 1 3 9.00 4.90 4.773069 0.1269307 0.4445399 4.5158408 0.3841592 0.4244367 -0.1802381 -4.5158408 -3.3251438 4.5158408 1 3 12.15 3.70 3.625534 0.0744663 0.3507775 3.4414983 0.2585017 0.3256871 -0.1373588 -3.4414983 -3.4690761 3.4414983 1 3 24.17 1.05 1.269559 -0.2195588 -0.6281297 1.2204181 -0.1704181 -0.6528425 -0.0487099 -1.2204181 -2.4954215 1.2204181 1 4 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 4 0.35 1.89 3.937361 -2.0473614 -2.0974848 3.1233006 -1.2333006 -2.6945487 2.5793051 -3.1233006 -0.0512409 3.1233006 1 4 0.60 4.60 5.650789 -1.0507890 -0.2909482 4.6840656 -0.0840656 -0.4391217 3.3444840 -4.6840656 -0.1367032 4.6840656 1 4 1.07 8.60 7.408527 1.1914729 1.6944693 6.5805819 2.0194181 1.8885489 3.4962016 -6.5805819 -0.3653680 6.5805819 1 4 2.13 8.38 8.255407 0.1245933 0.0585057 8.1093163 0.2706837 0.1051768 1.9240996 -8.1093163 -1.0125233 8.1093163 1 4 3.50 7.54 7.657592 -0.1175917 -0.4200079 7.9529117 -0.4129117 -0.3673142 0.3034110 -7.9529117 -1.8267722 7.9529117 1 4 5.02 6.88 6.750126 0.1298737 -0.2392680 7.1376411 -0.2576411 -0.2041757 -0.3573228 -7.1376411 -2.5494642 7.1376411 1 4 7.02 5.78 5.673415 0.1065852 -0.2598475 6.0170787 -0.2370787 -0.2362073 -0.5022917 -6.0170787 -3.2004162 6.0170787 1 4 9.02 5.33 4.764743 0.5652566 0.4276849 5.0432906 0.2867094 0.4095128 -0.4555722 -5.0432906 -3.5748211 5.0432906 1 4 11.98 4.19 3.679741 0.5102593 0.5337098 3.8786662 0.3113338 0.5047379 -0.3559821 -3.8786662 -3.7678448 3.8786662 1 4 24.65 1.15 1.217459 -0.0674591 -0.4003128 1.2597853 -0.1097853 -0.4155966 -0.1157727 -1.2597853 -2.6404815 1.2597853 1 5 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 5 0.30 2.02 3.501211 -1.4812106 -3.0027577 3.8176818 -1.7976818 -2.8190671 3.0482332 -3.8176818 -0.0487030 3.8176818 1 5 0.52 5.63 5.178293 0.4517072 0.1933738 5.6758700 -0.0458700 0.1759073 3.7975582 -5.6758700 -0.1312843 5.6758700 1 5 1.00 11.40 7.233125 4.1668747 3.6103006 8.0074865 3.3925135 3.2927829 3.5071702 -8.0074865 -0.3890916 8.0074865 1 5 2.02 9.33 8.261110 1.0688896 0.2448251 9.2914812 0.0385188 0.2445103 1.3023461 -9.2914812 -1.0533789 9.2914812 1 5 3.50 8.74 7.657592 1.0824083 0.1883746 8.7466991 -0.0066991 0.2022470 -0.1327665 -8.7466991 -1.9475009 8.7466991 1 5 5.02 7.56 6.750126 0.8098737 -0.0926259 7.8075741 -0.2475741 -0.0423238 -0.3958411 -7.8075741 -2.6682080 7.8075741 1 5 7.02 7.09 5.673415 1.4165852 0.6709113 6.6646523 0.4253477 0.6188967 -0.3849760 -6.6646523 -3.3365650 6.6646523 1 5 9.10 5.90 4.731584 1.1684156 0.4799472 5.6476114 0.2523886 0.4464645 -0.3299473 -5.6476114 -3.7627269 5.6476114 1 5 12.00 4.37 3.673322 0.6966784 -0.1203339 4.4829463 -0.1129463 -0.0790902 -0.2621423 -4.4829463 -4.0221190 4.4829463 1 5 24.35 1.57 1.249765 0.3202349 -0.2759753 1.6765287 -0.1065287 -0.2912353 -0.0980381 -1.6765287 -3.1531472 1.6765287 1 6 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 6 0.27 1.29 3.221967 -1.9319671 -1.4301930 1.8747663 -0.5847663 -2.0671762 1.6480698 -1.8747663 -0.0287862 1.8747663 1 6 0.58 3.08 5.538611 -2.4586110 -1.1038288 3.4532243 -0.3732243 -1.4569358 2.5954601 -3.4532243 -0.1185269 3.4532243 1 6 1.15 6.44 7.581220 -1.1412200 0.3663651 5.2324464 1.2075536 0.7723919 2.8679220 -5.2324464 -0.3811591 5.2324464 1 6 2.03 6.32 8.261099 -1.9410994 -0.6704955 6.3082675 0.0117325 -0.6848077 1.9345517 -6.3082675 -0.8888180 6.3082675 1 6 3.57 5.53 7.616249 -2.0862494 -1.0837929 6.2192185 -0.6892185 -1.2425170 0.3349621 -6.2192185 -1.7414061 6.2192185 1 6 5.00 4.94 6.761753 -1.8217527 -0.9419317 5.5237633 -0.5837633 -1.0941582 -0.3064681 -5.5237633 -2.3418901 5.5237633 1 6 7.00 4.02 5.683320 -1.6633205 -0.8782242 4.4958225 -0.4758225 -1.0356287 -0.5069914 -4.4958225 -2.8620070 4.4958225 1 6 9.22 3.46 4.682278 -1.2222778 -0.3891863 3.5336349 -0.0736349 -0.4437039 -0.4567756 -3.5336349 -3.1031041 3.5336349 1 6 12.10 2.78 3.641393 -0.8613935 0.1026356 2.5776700 0.2023300 0.1599680 -0.3432652 -2.5776700 -3.0767409 2.5776700 1 6 23.85 0.92 1.305525 -0.3855247 0.6014328 0.7103904 0.2096096 0.5423907 -0.0949927 -0.7103904 -1.7634900 0.7103904 1 7 0.00 0.15 0.000000 0.1500000 0.5368443 0.0000000 0.1500000 0.5368443 0.0000000 0.0000000 0.0000000 0.0000000 1 7 0.25 0.85 3.028118 -2.1781184 -1.1350326 1.4139763 -0.5639763 -2.1755946 1.3050205 -1.4139763 -0.0182207 1.4139763 1 7 0.50 2.35 5.049853 -2.6998525 -0.8682963 2.5865875 -0.2365875 -1.3221677 2.1969360 -2.5865875 -0.0680983 2.5865875 1 7 1.02 5.02 7.285709 -2.2657085 -0.4949063 4.4034044 0.6165956 -0.0552090 3.1146045 -4.4034044 -0.2468059 4.4034044 1 7 2.02 6.58 8.261110 -1.6811104 -0.8470138 6.2661302 0.3138698 -0.5444258 2.9747050 -6.2661302 -0.7500313 6.2661302 1 7 3.48 7.09 7.669345 -0.5793454 -0.4057550 6.9292693 0.1607307 -0.3626448 1.5409333 -6.9292693 -1.5700305 6.9292693 1 7 5.00 6.66 6.761753 -0.1017527 -0.0058485 6.5628631 0.0971369 -0.1379278 0.3266345 -6.5628631 -2.3119243 6.5628631 1 7 6.98 5.25 5.693243 -0.4432432 -0.3529727 5.6408839 -0.3908839 -0.5591928 -0.4426889 -5.6408839 -2.9979267 5.6408839 1 7 9.00 4.39 4.773069 -0.3830693 -0.2364111 4.6780375 -0.2880375 -0.4508588 -0.6630940 -4.6780375 -3.3919825 4.6780375 1 7 12.05 3.53 3.657323 -0.1273227 0.2615266 3.4628848 0.0671152 0.0700253 -0.6150110 -3.4628848 -3.5563346 3.4628848 1 7 24.22 1.15 1.264029 -0.1140293 0.4055241 1.0164077 0.1335923 0.3080955 -0.1935777 -1.0164077 -2.2894079 1.0164077 1 8 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 8 0.25 3.05 3.028118 0.0218816 0.8580796 2.6723479 0.3776521 0.9346527 2.2305172 -2.6723479 -0.0331483 2.6723479 1 8 0.52 3.05 5.178293 -2.1282928 -2.1110342 4.6111812 -1.5611812 -2.3114475 3.1225639 -4.6111812 -0.1255099 4.6111812 1 8 0.98 7.31 7.178477 0.1315235 0.7400492 6.4687284 0.8412716 0.8377210 2.9554763 -6.4687284 -0.3602500 6.4687284 1 8 2.02 7.56 8.261110 -0.7011104 -0.1807205 7.5465106 0.0134894 -0.1746722 1.1026951 -7.5465106 -1.0011745 7.5465106 1 8 3.53 6.59 7.639911 -1.0499108 -0.5918376 6.9819173 -0.3919173 -0.6275824 -0.1554476 -6.9819173 -1.8394956 6.9819173 1 8 5.05 5.88 6.732715 -0.8527154 -0.4587058 6.1039024 -0.2239024 -0.4868727 -0.3809802 -6.1039024 -2.4649746 6.1039024 1 8 7.15 4.73 5.609442 -0.8794420 -0.5692208 5.0155946 -0.2855946 -0.6109349 -0.3574573 -5.0155946 -3.0139005 5.0155946 1 8 9.07 4.57 4.743992 -0.1739919 0.3596693 4.1866906 0.3833094 0.4156802 -0.3017229 -4.1866906 -3.2722142 4.1866906 1 8 12.10 3.00 3.641393 -0.6413935 -0.4370074 3.1478322 -0.1478322 -0.4688648 -0.2271383 -3.1478322 -3.3580224 3.1478322 1 8 24.12 1.25 1.275113 -0.0251125 0.6520381 1.0154298 0.2345702 0.6794251 -0.0732728 -1.0154298 -2.2320925 1.0154298 1 9 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 9 0.30 7.37 3.501211 3.8687894 3.1639419 6.6347181 0.7352819 1.6626982 2.5042995 -6.6347181 -0.1085861 6.6347181 1 9 0.63 9.03 5.812023 3.2179772 1.1625052 7.7041989 1.3258011 1.1755213 0.7271727 -7.7041989 -0.3119220 7.7041989 1 9 1.05 7.14 7.360844 -0.2208437 -1.6894917 7.6373481 -0.4973481 -0.8808572 0.0129432 -7.6373481 -0.5747982 7.6373481 1 9 2.02 6.33 8.261110 -1.9311104 -1.4926228 7.0452238 -0.7152238 -1.1692363 -0.1079067 -7.0452238 -1.1171922 7.0452238 1 9 3.53 5.66 7.639911 -1.9799108 -0.7558957 6.1858615 -0.5258615 -0.9933527 -0.0956599 -6.1858615 -1.7856648 6.1858615 1 9 5.02 5.67 6.750126 -1.0801263 0.1862685 5.4406190 0.2293810 -0.0455103 -0.0841356 -5.4406190 -2.2689676 5.4406190 1 9 7.17 4.24 5.599663 -1.3596634 -0.3198332 4.5206509 -0.2806509 -0.7090866 -0.0699089 -4.5206509 -2.7226932 4.5206509 1 9 8.80 4.11 4.857133 -0.7471326 0.3297882 3.9283544 0.1816456 0.0597860 -0.0607494 -3.9283544 -2.9176454 3.9283544 1 9 11.60 3.16 3.803858 -0.6438580 0.2394441 3.0863276 0.0736724 -0.0450507 -0.0477280 -3.0863276 -3.0368016 3.0863276 1 9 24.43 1.12 1.241067 -0.1210673 0.3882737 1.0218266 0.0981734 0.2559852 -0.0158019 -1.0218266 -2.1349464 1.0218266 1 10 0.00 0.24 0.000000 0.2400000 0.8589509 0.0000000 0.2400000 0.8589509 0.0000000 0.0000000 0.0000000 0.0000000 1 10 0.37 2.89 4.102081 -1.2120812 0.0703072 2.8523775 0.0376225 -0.2150648 2.4824149 -2.8523775 -0.0412814 2.8523775 1 10 0.77 5.22 6.462825 -1.2428254 -0.3314802 5.0937903 0.1262097 -0.1809678 3.7810108 -5.0937903 -0.1598151 5.0937903 1 10 1.02 6.41 7.285709 -0.8757085 -0.3468126 6.1498552 0.2601448 -0.0337194 4.1118188 -6.1498552 -0.2619247 6.1498552 1 10 2.05 7.83 8.260760 -0.4307599 -1.2168924 8.6282950 -0.7982950 -0.7880564 3.5720433 -8.6282950 -0.8096393 8.6282950 1 10 3.55 10.21 7.628092 2.5819081 0.8498249 9.4109452 0.7990548 0.8450845 1.5607744 -9.4109452 -1.7042027 9.4109452 1 10 5.05 9.18 6.732715 2.4472846 0.7132521 8.9763456 0.2036544 0.5742727 0.2256139 -8.9763456 -2.5079582 8.9763456 1 10 7.08 8.02 5.643800 2.3762001 0.8350655 7.9204970 0.0995030 0.5903257 -0.5092876 -7.9204970 -3.3490712 7.9204970 1 10 9.38 7.14 4.617333 2.5226665 1.3899298 6.7131518 0.4268482 0.9578621 -0.6716082 -6.7131518 -3.9748840 6.7131518 1 10 12.10 5.68 3.641393 2.0386065 1.0919477 5.4811842 0.1988158 0.7138381 -0.6114215 -5.4811842 -4.3599982 5.4811842 1 10 23.70 2.42 1.322733 1.0972672 0.9384737 2.2920057 0.1279943 0.5478394 -0.2629539 -2.2920057 -3.8216321 2.2920057 1 11 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 11 0.25 4.86 3.028118 1.8318816 1.0377448 4.7898550 0.0701450 0.5794287 2.9708616 -4.7898550 -0.0645314 4.7898550 1 11 0.50 7.24 5.049853 2.1901475 0.8879194 6.6548994 0.5851006 0.8361737 2.3781231 -6.6548994 -0.2000539 6.6548994 1 11 0.98 8.00 7.178477 0.8215235 -0.1662869 7.4780845 0.5219155 0.2534926 0.7125883 -7.4780845 -0.5113681 7.4780845 1 11 1.98 6.81 8.260057 -1.4500569 -0.9372231 7.0374492 -0.2274492 -0.6973146 -0.1390116 -7.0374492 -1.1239325 7.0374492 1 11 3.60 5.87 7.598444 -1.7284443 -0.5538621 6.0461103 -0.1761103 -0.6716954 -0.1653090 -6.0461103 -1.8889318 6.0461103 1 11 5.02 5.22 6.750126 -1.5301263 -0.3508537 5.2876915 -0.0676915 -0.5413726 -0.1448461 -5.2876915 -2.3607272 5.2876915 1 11 7.03 4.45 5.668468 -1.2184684 -0.1373580 4.3738899 0.0761101 -0.3137102 -0.1198167 -4.3738899 -2.7826079 4.3738899 1 11 9.03 3.62 4.760586 -1.1405859 -0.2097117 3.6214251 -0.0014251 -0.4127919 -0.0992040 -3.6214251 -2.9875715 3.6214251 1 11 12.12 2.69 3.635041 -0.9450413 -0.2042947 2.7052507 -0.0152507 -0.4066695 -0.0741066 -2.7052507 -3.0208026 2.7052507 1 11 24.08 0.86 1.279573 -0.4195729 -0.1420679 0.8748171 -0.0148171 -0.2573804 -0.0239644 -0.8748171 -1.9644711 0.8748171 1 12 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 12 0.25 1.25 3.028118 -1.7781184 -1.8181176 2.2593968 -1.0093968 -2.7933241 2.0132050 -2.2593968 -0.0249158 2.2593968 1 12 0.50 3.96 5.049853 -1.0898525 -0.1596281 4.0147935 -0.0547935 -0.5744568 3.1705488 -4.0147935 -0.0914488 4.0147935 1 12 1.00 7.82 7.233125 0.5868747 1.0453728 6.4039903 1.4160097 1.0952117 3.9036682 -6.4039903 -0.3099853 6.4039903 1 12 2.00 9.72 8.260807 1.4591933 0.7693864 8.4776728 1.2423272 0.8492330 2.8237985 -8.4776728 -0.9120577 8.4776728 1 12 3.52 9.75 7.645811 2.1041891 0.9269709 8.7303302 1.0196698 0.9370574 0.7444228 -8.7303302 -1.8668729 8.7303302 1 12 5.07 8.57 6.721127 1.8488726 0.7301048 7.9769179 0.5930821 0.7289660 -0.2439924 -7.9769179 -2.6732856 7.9769179 1 12 7.07 6.59 5.648725 0.9412749 -0.1738965 6.8129142 -0.2229142 -0.0582211 -0.5762860 -6.8129142 -3.4109479 6.8129142 1 12 9.03 6.11 4.760586 1.3494141 0.5378629 5.7780960 0.3319040 0.5258763 -0.5739043 -5.7780960 -3.8510437 5.7780960 1 12 12.05 4.57 3.657323 0.9126773 0.1596364 4.4681938 0.1018062 0.1777361 -0.4639836 -4.4681938 -4.1273816 4.4681938 1 12 24.15 1.17 1.271777 -0.1017774 -1.4250175 1.5915105 -0.4215105 -1.3535014 -0.1661812 -1.5915105 -3.1130328 1.5915105 1 "],
["lapli-v2-1.html", "3.4 LAPLI v2.1", " 3.4 LAPLI v2.1 DATA = Theoph colnames(DATA) = c(&quot;ID&quot;, &quot;BWT&quot;, &quot;DOSE&quot;, &quot;TIME&quot;, &quot;DV&quot;) DATA[,&quot;ID&quot;] = as.numeric(as.character(DATA[,&quot;ID&quot;])) require(lattice) xyplot(DV ~ TIME | as.factor(ID), data=DATA, type=&quot;b&quot;) ## INIT STEP IDs = unique(DATA[,&quot;ID&quot;]) ; IDs ## [1] 1 2 3 4 5 6 7 8 9 10 11 12 nID = length(IDs) ; nID ## [1] 12 nTheta = 3 nEta = 3 nEps = 2 nPara = nTheta + nEta*(nEta + 1)/2 + nEps ; nPara ## [1] 11 GNames = outer(&quot;G&quot;, 1:nEta, paste0)[1,] ; GNames ## [1] &quot;G1&quot; &quot;G2&quot; &quot;G3&quot; HNames = outer(&quot;H&quot;, 1:nEps, paste0)[1,] ; HNames ## [1] &quot;H1&quot; &quot;H2&quot; iOM = (nTheta + 1):(nTheta + nEta*(nEta + 1)/2) ; iOM ## [1] 4 5 6 7 8 9 iSG = (nTheta + nEta*(nEta + 1)/2 + 1):(nTheta + nEta*(nEta + 1)/2 + nEps) ; iSG ## [1] 10 11 IE = c(2, 50, 0.1) LB = c(0.2, 5, 0.01) UB = c(10, 100, 1) alpha = 0.1 - log((IE - LB)/(UB - LB)/(1 - (IE - LB)/(UB - LB))) p0 = rep(0.1, nTheta) p1 = exp(p0 - alpha) p2 = p1/(p1 + 1)*(UB - LB) + LB ; p2 ## [1] 2.0 50.0 0.1 OM0 = matrix(c(0.2, 0.1, 0.1, 0.1, 0.2, 0.1, 0.1, 0.1, 0.2), nrow=nEta) ; OM0 ## [,1] [,2] [,3] ## [1,] 0.2 0.1 0.1 ## [2,] 0.1 0.2 0.1 ## [3,] 0.1 0.1 0.2 SG0 = diag(c(0.1, 0.1)) ; SG0 ## [,1] [,2] ## [1,] 0.1 0.0 ## [2,] 0.0 0.1 EXPP1 = exp(0.1) ScaleVar = function(VarMat, dim1) { M1 = chol(VarMat) V1 = diag(M1) M2 = abs(10 * (M1 - diag(V1, nrow=dim1))) + diag(V1/EXPP1, nrow=dim1) return(t(M2)) } OMscl = ScaleVar(OM0, nEta) ; OMscl ## [,1] [,2] [,3] ## [1,] 0.4046556 0.000000 0.0000000 ## [2,] 2.2360680 0.350442 0.0000000 ## [3,] 2.2360680 1.290994 0.3303999 SGscl = ScaleVar(SG0, nEps) ; SGscl ## [,1] [,2] ## [1,] 0.2861347 0.0000000 ## [2,] 0.0000000 0.2861347 DesclVar = function(mUCP, mSCL) { nRow = dim(mUCP)[1] maT = matrix(nrow=nRow, ncol=nRow) for (i in 1:nRow) { for (j in 1:nRow) { if (i==j) { maT[i,j] = exp(mUCP[i,j]) * mSCL[i,j] } else if(i &gt; j) { maT[i,j] = mUCP[i,j] * mSCL[i,j] } else { maT[i,j] = 0 } } } return(maT %*% t(maT)) } DesclVar(matrix(rep(0.1, nEta*nEta), nrow=nEta), OMscl) ## [,1] [,2] [,3] ## [1,] 0.2 0.1 0.1 ## [2,] 0.1 0.2 0.1 ## [3,] 0.1 0.1 0.2 DesclVar(diag(rep(0.1, nEps)), SGscl) ## [,1] [,2] ## [1,] 0.1 0.0 ## [2,] 0.0 0.1 ltv2mat = function(vec) { LENGTH = length(vec) DIM = round((sqrt(8*LENGTH+1)-1)/2,0) if (DIM*(DIM+1)/2 != LENGTH) return(NULL) mat = matrix(nrow=DIM, ncol=DIM) for (m in 1:DIM) { for (n in 1:DIM) { k = max(m,n) l = min(m,n) p = k*(k - 1)/2 + l mat[m,n] = vec[p] } } return(mat) } s2o = function(p) { p0 = p[1:nTheta] p1 = exp(p0 - alpha) p2 = p1/(p1 + 1)*(UB - LB) + LB OM = DesclVar(ltv2mat(p[iOM]), OMscl) SG = DesclVar(diag(p[iSG]), SGscl) Res = list(p2, OM, SG) names(Res) = c(&quot;THETA&quot;, &quot;OMEGA&quot;, &quot;SIGMA&quot;) return(Res) } s2o(rep(0.1, nPara)) ## $THETA ## [1] 2.0 50.0 0.1 ## ## $OMEGA ## [,1] [,2] [,3] ## [1,] 0.2 0.1 0.1 ## [2,] 0.1 0.2 0.1 ## [3,] 0.1 0.1 0.2 ## ## $SIGMA ## [,1] [,2] ## [1,] 0.1 0.0 ## [2,] 0.0 0.1 ## EST STEP FGD = deriv(~DOSE/(TH2*exp(ETA2))*TH1*exp(ETA1)/(TH1*exp(ETA1) - TH3*exp(ETA3))*(exp(-TH3*exp(ETA3)*TIME)-exp(-TH1*exp(ETA1)*TIME)), c(&quot;ETA1&quot;,&quot;ETA2&quot;,&quot;ETA3&quot;), function.arg=c(&quot;TH1&quot;, &quot;TH2&quot;, &quot;TH3&quot;, &quot;ETA1&quot;, &quot;ETA2&quot;, &quot;ETA3&quot;, &quot;DOSE&quot;, &quot;TIME&quot;), func=TRUE, hessian=TRUE) H = deriv(~F + F*EPS1 + EPS2, c(&quot;EPS1&quot;, &quot;EPS2&quot;), function.arg=c(&quot;F&quot;, &quot;EPS1&quot;, &quot;EPS2&quot;), func=TRUE) PRED = function(THETA, ETA) { # External: DATA[,c(&quot;ID&quot;, &quot;TIME&quot;)], cID FGDres = FGD(THETA[1], THETA[2], THETA[3], ETA[1], ETA[2], ETA[3], DOSE=320, DATA[DATA$ID==cID,&quot;TIME&quot;]) Gres = attr(FGDres, &quot;gradient&quot;) Hres = attr(H(FGDres, 0, 0), &quot;gradient&quot;) Dres = attr(FGDres, &quot;hessian&quot;) Res = cbind(FGDres, Gres, Hres, Dres[,1,1], Dres[,2,1], Dres[,2,2], Dres[,3,]) colnames(Res) = c(&quot;F&quot;, &quot;G1&quot;, &quot;G2&quot;, &quot;G3&quot;, &quot;H1&quot;, &quot;H2&quot;, &quot;D11&quot;, &quot;D21&quot;, &quot;D22&quot;, &quot;D31&quot;, &quot;D32&quot;, &quot;D33&quot;) return(Res) } ObjEta = function(ETA) { # External: THETA, invOM, SG, cID, DATA[,&quot;DV&quot;] FGH = PRED(THETA, ETA) Hi = FGH[, HNames, drop=FALSE] # always INTER==TRUE Ri = DATA[DATA$ID == cID, &quot;DV&quot;] - FGH[,&quot;F&quot;] ## Slower version # Vi = diag(diag(Hi %*% SG %*% t(Hi))) # iSum = log(det(Vi)) + t(Ri) %*% solve(Vi) %*% Ri + t(ETA) %*% invOM %*% ETA ## Faster version Vi = diag(Hi %*% SG %*% t(Hi)) return(sum(log(Vi) + Ri*Ri/Vi) + t(ETA) %*% invOM %*% ETA) } EBE = cbind(ID = IDs, ETA1=0, ETA2=0, ETA3=0, Oi=0) ## Preliminary fittting OBJ2a = function(p) { # External: DATA, nTheta, nEta, nEps if (STEP == &quot;EST&quot;) { r = s2o(p[1:nPara]) THETA &lt;&lt;- r$THETA # for ObjEta OM = r$OMEGA SG &lt;&lt;- r$SIGMA # for ObjEta } else { THETA &lt;&lt;- p[1:nTheta] # for ObjEta OM = ltv2mat(p[iOM]) SG &lt;&lt;- diag(p[iSG]) # for ObjEta } invOM &lt;&lt;- solve(OM) # for ObjEta Term3 = determinant(OM, logarithm=TRUE)$modulus[[1]] for (i in 1:nID) { cID &lt;&lt;- IDs[i] # for PRED ETA = p[(nPara + (i - 1)*nEta + 1):(nPara + i*nEta)] FGHDi = PRED(THETA, ETA) Gi = FGHDi[, GNames, drop=FALSE] Hi = FGHDi[, HNames, drop=FALSE] # always INTER==TRUE D11 = FGHDi[, &quot;D11&quot;] D21 = FGHDi[, &quot;D21&quot;] D22 = FGHDi[, &quot;D22&quot;] D31 = FGHDi[, &quot;D31&quot;] D32 = FGHDi[, &quot;D32&quot;] D33 = FGHDi[, &quot;D33&quot;] Ri = DATA[DATA$ID == cID, &quot;DV&quot;] - FGHDi[,&quot;F&quot;] Vi = diag(Hi %*% SG %*% t(Hi)) Hsum = invOM + t(Gi) %*% solve(diag(Vi)) %*% Gi EBE[i, 2:(1+nEta)] &lt;&lt;- ETA EBE[i, (2+nEta)] &lt;&lt;- sum(log(Vi) + Ri*Ri/Vi) + t(ETA) %*% invOM %*% ETA + Term3 + determinant(Hsum, logarithm=TRUE)$modulus[[1]] } return(sum(EBE[,5])) } STEP = &quot;EST&quot; OBJ2a(c(rep(0.1, nPara), rep(0, nEta*nID))) ## [1] 704.6327 StartTime = Sys.time() r0 = optim(c(rep(0.1, nPara), rep(0, nEta*nID)), OBJ2a, method=&quot;L-BFGS-B&quot;) difftime(Sys.time(), StartTime) ## Time difference of 31.4448 secs r0 ## $par ## [1] -0.299129824 -0.693305348 -0.066467812 0.474043180 0.037596199 ## [6] -1.144134250 -0.003998964 0.085532827 -1.274798050 -0.768763511 ## [11] -0.027352885 -0.089411796 -0.185681901 -0.293387710 0.340370258 ## [16] 0.054626492 0.049015200 0.425694591 0.044904129 -0.013441303 ## [21] -0.334659360 -0.040919527 0.014600779 -0.024453549 -0.111671454 ## [26] -0.089932359 -0.459519582 0.144384879 0.222346649 -0.848226600 ## [31] 0.007711974 0.139087492 -0.053602455 0.075572703 0.071114772 ## [36] 1.362632440 0.178768536 -0.014266837 -0.700372782 -0.211777004 ## [41] -0.152624376 0.889408390 0.177996754 0.077069504 -0.498413492 ## [46] -0.139781935 -0.018243083 ## ## $value ## [1] 92.15124 ## ## $counts ## function gradient ## 115 115 ## ## $convergence ## [1] 1 ## ## $message ## [1] &quot;NEW_X&quot; OBJ2a(r0$par) ## [1] 92.15124 ### END of Preliminary fitting OBJ2 = function(p) { # External: DATA, nTheta, nEta, nEps if (STEP == &quot;EST&quot;) { r = s2o(p) THETA &lt;&lt;- r$THETA # for ObjEta OM = r$OMEGA SG &lt;&lt;- r$SIGMA # for ObjEta } else { THETA &lt;&lt;- p[1:nTheta] # for ObjEta OM = ltv2mat(p[iOM]) SG &lt;&lt;- diag(p[iSG]) # for ObjEta } invOM &lt;&lt;- solve(OM) # for ObjEta Term3 = determinant(OM, logarithm=TRUE)$modulus[[1]] for (i in 1:nID) { cID &lt;&lt;- i # for PRED Yi = DATA[DATA$ID == cID, &quot;DV&quot;] TIME = DATA[DATA$ID == cID, &quot;TIME&quot;] Res = optim(EBE[i,2:(nEta+1)], ObjEta, method=&quot;BFGS&quot;) FGHDi = PRED(THETA, Res$par) Fi = FGHDi[, &quot;F&quot;] Gi = FGHDi[, GNames, drop=FALSE] Hi = FGHDi[, HNames, drop=FALSE] D11 = FGHDi[, &quot;D11&quot;] D21 = FGHDi[, &quot;D21&quot;] D22 = FGHDi[, &quot;D22&quot;] D31 = FGHDi[, &quot;D31&quot;] D32 = FGHDi[, &quot;D32&quot;] D33 = FGHDi[, &quot;D33&quot;] Vi = diag(Hi %*% SG %*% t(Hi)) Hsum = invOM for (j in 1:length(TIME)) { Dij = matrix(c(D11[j], D21[j], D31[j], D21[j], D22[j], D32[j], D31[j], D32[j], D33[j]), nrow=3) Hsum = Hsum + (Gi[j,] %*% t(Gi[j,]) - (Yi[j] - Fi[j])*Dij)/Vi[j] } EBE[i, 2:4] &lt;&lt;- Res$par EBE[i, 5] &lt;&lt;- Res$value + Term3 + determinant(Hsum, logarithm=TRUE)$modulus[[1]] } return(sum(EBE[,5])) } STEP = &quot;EST&quot; OBJ2(r0$par[1:nPara]) ; EBE ## [1] 93.73714 ## ID ETA1 ETA2 ETA3 Oi ## [1,] 1 -0.09543195 -0.187331706 -0.28958660 20.087421 ## [2,] 2 0.32831658 0.051848211 0.05131758 17.723775 ## [3,] 3 0.41191039 0.042238658 -0.01069153 -1.254441 ## [4,] 4 -0.34157563 -0.042766313 0.01642110 9.444721 ## [5,] 5 -0.03309006 -0.114024390 -0.08699728 20.359790 ## [6,] 6 -0.46168422 0.143670314 0.22186852 4.082607 ## [7,] 7 -0.85196351 0.006423628 0.13980729 1.361105 ## [8,] 8 -0.05666701 0.074539067 0.07128616 3.893063 ## [9,] 9 1.32715900 0.174635489 -0.01002113 3.601923 ## [10,] 10 -0.70670762 -0.213521416 -0.15097286 4.832433 ## [11,] 11 0.86348161 0.173857684 0.08055610 -2.216612 ## [12,] 12 -0.50158203 -0.141276923 -0.01708747 11.821359 StartTime = Sys.time() r0 = optim(r0$par[1:nPara], OBJ2, method=&quot;L-BFGS-B&quot;) difftime(Sys.time(), StartTime) ## Time difference of 1.850923 mins r0 ## $par ## [1] -0.290556010 -0.698404226 -0.059909635 0.473328459 0.037433804 ## [6] -1.178893970 -0.003161618 0.091287885 -1.407598813 -0.767769261 ## [11] -0.026690244 ## ## $value ## [1] 93.69494 ## ## $counts ## function gradient ## 40 40 ## ## $convergence ## [1] 0 ## ## $message ## [1] &quot;CONVERGENCE: REL_REDUCTION_OF_F &lt;= FACTR*EPSMCH&quot; OBJ2(r0$par) ## [1] 93.69494 r1 = s2o(r0$par) ; r1 ## $THETA ## [1] 1.49492430 32.38635839 0.08774433 ## ## $OMEGA ## [,1] [,2] [,3] ## [1,] 0.421986906 0.05437490 -0.004592443 ## [2,] 0.054374897 0.01862784 0.012113006 ## [3,] -0.004592443 0.01211301 0.020477262 ## ## $SIGMA ## [,1] [,2] ## [1,] 0.01763052 0.00000000 ## [2,] 0.00000000 0.07761725 ## COV STEP STEP = &quot;COV&quot; p = c(r1$THETA, r1$OMEGA[upper.tri(r1$OMEGA, diag=TRUE)], diag(r1$SIGMA)) OBJ2(p) ## [1] 93.69494 require(numDeriv) Rmat = hessian(OBJ2, p)/2 ; Rmat ## [,1] [,2] [,3] [,4] [,5] ## [1,] 19.0589876 -2.27286140 222.65771 -0.5747289 -11.851066 ## [2,] -2.2728614 0.69549449 -34.59380 -0.4430880 6.113428 ## [3,] 222.6577095 -34.59379875 42652.56145 156.8473096 -1577.475724 ## [4,] -0.5747289 -0.44308804 156.84731 71.3213625 -364.804091 ## [5,] -11.8510661 6.11342835 -1577.47572 -364.8040906 3277.627149 ## [6,] 30.3416993 -11.44673647 2707.86939 402.0442187 -5294.058235 ## [7,] 20.1544095 -2.31242754 831.10519 145.2892284 -140.583352 ## [8,] 3.6799785 3.98509584 -430.13680 -175.8790033 2224.263303 ## [9,] -5.0077836 3.20957737 -951.89539 70.4561705 -368.187888 ## [10,] 109.4164782 -26.10404790 2269.20566 183.2251811 -1609.075753 ## [11,] 2.6090229 -0.01801195 45.96711 41.3810841 -138.119538 ## [,6] [,7] [,8] [,9] [,10] ## [1,] 30.34170 20.154409 3.679979 -5.007784 109.41648 ## [2,] -11.44674 -2.312428 3.985096 3.209577 -26.10405 ## [3,] 2707.86939 831.105190 -430.136804 -951.895388 2269.20566 ## [4,] 402.04422 145.289228 -175.879003 70.456171 183.22518 ## [5,] -5294.05824 -140.583352 2224.263303 -368.187888 -1609.07575 ## [6,] 17991.57490 328.031016 -2569.264191 748.969967 6237.92443 ## [7,] 328.03102 -7266.513497 505.401498 2012.915410 2125.85126 ## [8,] -2569.26419 505.401498 17586.563551 -2481.327156 -6279.51051 ## [9,] 748.96997 2012.915410 -2481.327156 5009.229946 3269.62952 ## [10,] 6237.92443 2125.851264 -6279.510514 3269.629524 86592.53003 ## [11,] 1053.55881 1408.525363 -414.552404 605.085356 6945.97085 ## [,11] ## [1,] 2.60902295 ## [2,] -0.01801195 ## [3,] 45.96710756 ## [4,] 41.38108405 ## [5,] -138.11953786 ## [6,] 1053.55880637 ## [7,] 1408.52536276 ## [8,] -414.55240421 ## [9,] 605.08535566 ## [10,] 6945.97084640 ## [11,] 894.97580896 OiS2 = function(p) { THETA &lt;&lt;- p[1:nTheta] # for ObjEta OM = ltv2mat(p[iOM]) invOM &lt;&lt;- solve(OM) # for ObjEta SG &lt;&lt;- diag(p[iSG]) # for ObjEta TIME = DATA[DATA$ID == cID, &quot;TIME&quot;] Yi = DATA[DATA$ID == cID, &quot;DV&quot;] Res = optim(EBE[EBE[,&quot;ID&quot;]==cID, 2:(nEta+1)], ObjEta, method=&quot;BFGS&quot;) FGHDi = PRED(THETA, Res$par) Fi = FGHDi[, &quot;F&quot;] Gi = FGHDi[, GNames, drop=FALSE] Hi = FGHDi[, HNames, drop=FALSE] D11 = FGHDi[, &quot;D11&quot;] D21 = FGHDi[, &quot;D21&quot;] D22 = FGHDi[, &quot;D22&quot;] D31 = FGHDi[, &quot;D31&quot;] D32 = FGHDi[, &quot;D32&quot;] D33 = FGHDi[, &quot;D33&quot;] Vi = diag(Hi %*% SG %*% t(Hi)) Hsum = invOM for (j in 1:length(TIME)) { Dij = matrix(c(D11[j], D21[j], D31[j], D21[j], D22[j], D32[j], D31[j], D32[j], D33[j]), nrow=3) Hsum = Hsum + (Gi[j,] %*% t(Gi[j,]) - (Yi[j] - Fi[j])*Dij)/Vi[j] } return(Res$value + determinant(OM, logarithm=TRUE)$modulus[[1]] + determinant(Hsum, logarithm=TRUE)$modulus[[1]]) } CalcSmat = function(p) { Smat = matrix(rep(0, nPara*nPara), nrow=nPara, ncol=nPara) for (i in 1:nID) { cID &lt;&lt;- i # for ObjEta gr = grad(OiS2, p) Smat = Smat + gr %*% t(gr) } return(Smat/4) } Smat = CalcSmat(p) ; Smat ## [,1] [,2] [,3] [,4] [,5] ## [1,] 18.655845 -2.0860713 189.92960 -4.171439 148.08088 ## [2,] -2.086071 0.6892472 -30.94515 3.029398 -24.55780 ## [3,] 189.929601 -30.9451486 41501.64989 297.833694 -2603.04405 ## [4,] -4.171439 3.0293980 297.83369 47.457080 -224.09994 ## [5,] 148.080875 -24.5577985 -2603.04405 -224.099945 2882.36212 ## [6,] -315.226552 21.6838436 9825.85403 307.965320 -6466.98276 ## [7,] 66.094775 -31.6690683 1528.91371 -46.158208 -411.37136 ## [8,] -72.586375 46.8034435 -7015.15404 224.893135 68.04648 ## [9,] -32.932485 -9.2011099 -15183.76676 -231.211499 928.37751 ## [10,] 249.841538 -174.7073512 37819.00702 -662.321113 -6272.25643 ## [11,] -39.033073 -9.2152924 -6287.14551 -153.116332 157.52414 ## [,6] [,7] [,8] [,9] [,10] ## [1,] -315.22655 66.09478 -72.58638 -32.93249 249.8415 ## [2,] 21.68384 -31.66907 46.80344 -9.20111 -174.7074 ## [3,] 9825.85403 1528.91371 -7015.15404 -15183.76676 37819.0070 ## [4,] 307.96532 -46.15821 224.89314 -231.21150 -662.3211 ## [5,] -6466.98276 -411.37136 68.04648 928.37751 -6272.2564 ## [6,] 20030.60464 2815.49723 -4736.94854 -2154.56290 23721.3946 ## [7,] 2815.49723 5833.14316 -2819.90085 544.29026 23858.6761 ## [8,] -4736.94854 -2819.90085 8214.03010 -904.63729 -29471.1421 ## [9,] -2154.56290 544.29026 -904.63729 9117.63039 1588.4354 ## [10,] 23721.39463 23858.67611 -29471.14214 1588.43540 278535.4047 ## [11,] -16.75949 344.11053 -1802.58684 4782.04879 9654.2143 ## [,11] ## [1,] -39.033073 ## [2,] -9.215292 ## [3,] -6287.145506 ## [4,] -153.116332 ## [5,] 157.524145 ## [6,] -16.759493 ## [7,] 344.110534 ## [8,] -1802.586836 ## [9,] 4782.048789 ## [10,] 9654.214274 ## [11,] 3036.330592 invR = solve(Rmat) ; invR ## [,1] [,2] [,3] [,4] ## [1,] 8.926160e-02 0.2827017218 -2.522390e-04 4.614800e-03 ## [2,] 2.827017e-01 2.4395928771 3.435898e-04 1.491699e-02 ## [3,] -2.522390e-04 0.0003435898 2.552647e-05 -6.324835e-06 ## [4,] 4.614800e-03 0.0149169948 -6.324835e-06 4.559777e-02 ## [5,] 3.903035e-04 -0.0004133088 1.111581e-05 7.215513e-03 ## [6,] 1.009629e-04 0.0006999931 2.793652e-07 1.250670e-03 ## [7,] 3.750635e-05 -0.0010338525 1.778673e-06 -7.682494e-05 ## [8,] -1.148407e-04 -0.0002584579 -2.220256e-07 -2.780040e-04 ## [9,] -1.984929e-04 -0.0009938063 5.146704e-06 -1.566783e-05 ## [10,] 1.837863e-05 0.0008981982 3.230501e-07 3.374025e-04 ## [11,] -6.342234e-04 -0.0071619101 -7.778780e-06 -5.095737e-03 ## [,5] [,6] [,7] [,8] ## [1,] 3.903035e-04 1.009629e-04 3.750635e-05 -1.148407e-04 ## [2,] -4.133088e-04 6.999931e-04 -1.033852e-03 -2.584579e-04 ## [3,] 1.111581e-05 2.793652e-07 1.778673e-06 -2.220256e-07 ## [4,] 7.215513e-03 1.250670e-03 -7.682494e-05 -2.780040e-04 ## [5,] 1.793880e-03 3.865584e-04 -4.292813e-05 -9.451581e-05 ## [6,] 3.865584e-04 1.503243e-04 -2.097571e-05 -1.334559e-05 ## [7,] -4.292813e-05 -2.097571e-05 -7.909776e-05 5.140123e-06 ## [8,] -9.451581e-05 -1.334559e-05 5.140123e-06 6.983463e-05 ## [9,] 2.442607e-05 1.300363e-05 1.285924e-05 3.104584e-05 ## [10,] 6.146340e-05 1.447806e-05 -2.356934e-05 5.885347e-06 ## [11,] -9.833045e-04 -2.697526e-04 3.224935e-04 -2.808963e-05 ## [,9] [,10] [,11] ## [1,] -1.984929e-04 1.837863e-05 -6.342234e-04 ## [2,] -9.938063e-04 8.981982e-04 -7.161910e-03 ## [3,] 5.146704e-06 3.230501e-07 -7.778780e-06 ## [4,] -1.566783e-05 3.374025e-04 -5.095737e-03 ## [5,] 2.442607e-05 6.146340e-05 -9.833045e-04 ## [6,] 1.300363e-05 1.447806e-05 -2.697526e-04 ## [7,] 1.285924e-05 -2.356934e-05 3.224935e-04 ## [8,] 3.104584e-05 5.885347e-06 -2.808963e-05 ## [9,] 2.376438e-04 1.730248e-05 -3.113317e-04 ## [10,] 1.730248e-05 2.948947e-05 -2.239586e-04 ## [11,] -3.113317e-04 -2.239586e-04 2.948956e-03 Cov = invR %*% Smat %*% invR ; Cov ## [,1] [,2] [,3] [,4] [,5] ## [1,] 1.081852e-01 0.381039998 -1.191397e-05 0.0757064688 0.0118643740 ## [2,] 3.810400e-01 3.301767721 2.215414e-03 0.3519546604 0.0362188753 ## [3,] -1.191397e-05 0.002215414 2.281053e-05 0.0011405715 0.0002221212 ## [4,] 7.570647e-02 0.351954660 1.140571e-03 0.1615361044 0.0281642067 ## [5,] 1.186437e-02 0.036218875 2.221212e-04 0.0281642067 0.0054057098 ## [6,] 1.327564e-03 0.010133725 6.708397e-05 0.0062969536 0.0012085772 ## [7,] -1.226834e-03 -0.011450294 -7.538788e-05 -0.0065995945 -0.0012139085 ## [8,] -2.137355e-04 0.003866713 -1.083171e-05 -0.0007286419 -0.0002351632 ## [9,] -1.120959e-04 -0.005284781 -2.312755e-05 -0.0013287399 -0.0002307712 ## [10,] 9.320591e-04 0.009193540 5.140086e-05 0.0039958266 0.0007196571 ## [11,] -1.738849e-02 -0.134035158 -5.312805e-04 -0.0509385243 -0.0089491497 ## [,6] [,7] [,8] [,9] ## [1,] 1.327564e-03 -1.226834e-03 -2.137355e-04 -1.120959e-04 ## [2,] 1.013372e-02 -1.145029e-02 3.866713e-03 -5.284781e-03 ## [3,] 6.708397e-05 -7.538788e-05 -1.083171e-05 -2.312755e-05 ## [4,] 6.296954e-03 -6.599595e-03 -7.286419e-04 -1.328740e-03 ## [5,] 1.208577e-03 -1.213908e-03 -2.351632e-04 -2.307712e-04 ## [6,] 3.462158e-04 -3.362398e-04 -4.610441e-05 -6.185083e-05 ## [7,] -3.362398e-04 4.745775e-04 1.482032e-05 1.799104e-05 ## [8,] -4.610441e-05 1.482032e-05 4.065859e-05 2.171312e-05 ## [9,] -6.185083e-05 1.799104e-05 2.171312e-05 9.120400e-05 ## [10,] 1.948844e-04 -2.889098e-04 -5.762233e-06 -1.206628e-05 ## [11,] -2.315203e-03 2.881196e-03 1.142784e-04 4.458443e-04 ## [,10] [,11] ## [1,] 9.320591e-04 -0.0173884936 ## [2,] 9.193540e-03 -0.1340351577 ## [3,] 5.140086e-05 -0.0005312805 ## [4,] 3.995827e-03 -0.0509385243 ## [5,] 7.196571e-04 -0.0089491497 ## [6,] 1.948844e-04 -0.0023152034 ## [7,] -2.889098e-04 0.0028811959 ## [8,] -5.762233e-06 0.0001142784 ## [9,] -1.206628e-05 0.0004458443 ## [10,] 2.054842e-04 -0.0018725456 ## [11,] -1.872546e-03 0.0204906319 SE = sqrt(diag(Cov)) ; SE ## [1] 0.328915243 1.817076696 0.004776037 0.401915544 0.073523532 ## [6] 0.018606875 0.021784799 0.006376409 0.009550079 0.014334720 ## [11] 0.143145492 Correl = cov2cor(Cov) ; Correl ## [,1] [,2] [,3] [,4] [,5] ## [1,] 1.000000000 0.6375486 -0.007584111 0.5726829 0.4906078 ## [2,] 0.637548616 1.0000000 0.255278279 0.4819241 0.2711036 ## [3,] -0.007584111 0.2552783 1.000000000 0.5941827 0.6325516 ## [4,] 0.572682863 0.4819241 0.594182687 1.0000000 0.9530954 ## [5,] 0.490607817 0.2711036 0.632551558 0.9530954 1.0000000 ## [6,] 0.216919215 0.2997246 0.754879432 0.8420197 0.8834350 ## [7,] -0.171217525 -0.2892610 -0.724569843 -0.7537527 -0.7578897 ## [8,] -0.101909949 0.3337279 -0.355674894 -0.2843173 -0.5016107 ## [9,] -0.035686062 -0.3045417 -0.507054819 -0.3461770 -0.3286610 ## [10,] 0.197683423 0.3529558 0.750781383 0.6935577 0.6828260 ## [11,] -0.369317838 -0.5153091 -0.777102800 -0.8853885 -0.8503109 ## [,6] [,7] [,8] [,9] [,10] ## [1,] 0.2169192 -0.17121753 -0.10190995 -0.03568606 0.19768342 ## [2,] 0.2997246 -0.28926097 0.33372793 -0.30454170 0.35295578 ## [3,] 0.7548794 -0.72456984 -0.35567489 -0.50705482 0.75078138 ## [4,] 0.8420197 -0.75375271 -0.28431726 -0.34617702 0.69355771 ## [5,] 0.8834350 -0.75788971 -0.50161073 -0.32866103 0.68282600 ## [6,] 1.0000000 -0.82951082 -0.38859112 -0.34806882 0.73065841 ## [7,] -0.8295108 1.00000000 0.10669102 0.08647603 -0.92516573 ## [8,] -0.3885911 0.10669102 1.00000000 0.35656538 -0.06304135 ## [9,] -0.3480688 0.08647603 0.35656538 1.00000000 -0.08814086 ## [10,] 0.7306584 -0.92516573 -0.06304135 -0.08814086 1.00000000 ## [11,] -0.8692367 0.92393529 0.12520177 0.32613591 -0.91256855 ## [,11] ## [1,] -0.3693178 ## [2,] -0.5153091 ## [3,] -0.7771028 ## [4,] -0.8853885 ## [5,] -0.8503109 ## [6,] -0.8692367 ## [7,] 0.9239353 ## [8,] 0.1252018 ## [9,] 0.3261359 ## [10,] -0.9125686 ## [11,] 1.0000000 InvCov = Rmat %*% solve(Smat) %*% Rmat ; InvCov ## [,1] [,2] [,3] [,4] [,5] ## [1,] 173.39124 -23.834365 2527.3966 16.41490 -522.3018 ## [2,] -23.83437 8.704852 350.3526 -50.57403 663.5319 ## [3,] 2527.39664 350.352595 405877.5799 -5911.45274 84605.8034 ## [4,] 16.41490 -50.574030 -5911.4527 638.56601 -6601.2821 ## [5,] -522.30176 663.531938 84605.8034 -6601.28212 80282.8191 ## [6,] 2655.82029 -381.931371 13357.5147 620.48085 -12068.4899 ## [7,] -1004.43111 -500.043234 -97491.7673 5136.43019 -68177.9951 ## [8,] 4984.72480 1255.917256 422598.1424 -20600.75879 255028.2818 ## [9,] -3290.49921 -364.918471 -124630.1799 7634.48535 -95343.3353 ## [10,] 2417.79594 789.842486 154383.6369 -9736.45854 132861.6326 ## [11,] 575.51589 310.141268 66896.5114 -3358.91122 45760.1332 ## [,6] [,7] [,8] [,9] [,10] ## [1,] 2655.8203 -1004.4311 4984.725 -3290.4992 2417.7959 ## [2,] -381.9314 -500.0432 1255.917 -364.9185 789.8425 ## [3,] 13357.5147 -97491.7673 422598.142 -124630.1799 154383.6369 ## [4,] 620.4808 5136.4302 -20600.759 7634.4853 -9736.4585 ## [5,] -12068.4899 -68177.9951 255028.282 -95343.3353 132861.6326 ## [6,] 66362.5605 -5456.1040 79469.401 -53263.6481 54935.2000 ## [7,] -5456.1040 114472.9940 -272301.823 136154.8149 -145684.1475 ## [8,] 79469.4013 -272301.8229 1147687.573 -476468.3818 582249.7915 ## [9,] -53263.6481 136154.8149 -476468.382 251364.0992 -280214.0927 ## [10,] 54935.2000 -145684.1475 582249.791 -280214.0927 398182.2560 ## [11,] 10374.7889 -55128.3267 188015.328 -84654.9009 110972.9439 ## [,11] ## [1,] 575.5159 ## [2,] 310.1413 ## [3,] 66896.5114 ## [4,] -3358.9112 ## [5,] 45760.1332 ## [6,] 10374.7889 ## [7,] -55128.3267 ## [8,] 188015.3283 ## [9,] -84654.9009 ## [10,] 110972.9439 ## [11,] 35794.3214 EigenVal = sort(eigen(Correl)$values) ; EigenVal # Sorted Eigenvalues ## [1] 0.000750329 0.006937068 0.028563116 0.047405995 0.088834893 ## [6] 0.166194592 0.304350396 1.014189480 1.334729662 1.680142556 ## [11] 6.327901913 ## EBE EBE ## ID ETA1 ETA2 ETA3 Oi ## [1,] 1 -0.11099849 -0.191246928 -0.285866994 20.293306 ## [2,] 2 0.32264742 0.054848795 0.046434159 17.712516 ## [3,] 3 0.40218887 0.042369385 -0.011527722 -1.434585 ## [4,] 4 -0.35086663 -0.042091229 0.014441664 9.413174 ## [5,] 5 -0.03576969 -0.108388149 -0.096206131 20.424353 ## [6,] 6 -0.48287099 0.135571729 0.231116217 4.319961 ## [7,] 7 -0.86682846 0.002659347 0.143424453 1.404465 ## [8,] 8 -0.07301653 0.069615788 0.077067775 3.983465 ## [9,] 9 1.32012882 0.174004505 -0.008525731 3.418454 ## [10,] 10 -0.71503219 -0.212020321 -0.154412718 4.735143 ## [11,] 11 0.85332309 0.173068743 0.081635180 -2.436323 ## [12,] 12 -0.50222387 -0.133709714 -0.029243531 11.871562 ## sdtab SqrtInvCov = function(M) { EigenResult = eigen(as.matrix(M)) EigenVector = EigenResult$vectors EigenValues = abs(EigenResult$values) return(EigenVector %*% diag(1/sqrt(EigenValues)) %*% t(EigenVector)) } THETA = r1$THETA OM = r1$OMEGA SG = r1$SIGMA tSD = vector() for (i in 1:nID) { cID = IDs[i] FGH0 = PRED(THETA, rep(0, nEta)) G0i = FGH0[, GNames, drop=FALSE] H0i = FGH0[, HNames, drop=FALSE] R0i = DATA[DATA$ID == cID, &quot;DV&quot;] - FGH0[,&quot;F&quot;] C0i = G0i %*% OM %*% t(G0i) + diag(diag(H0i %*% SG %*% t(H0i))) WRES = SqrtInvCov(C0i) %*% R0i cEBE = EBE[EBE[,&quot;ID&quot;]==cID, 2:(nEta + 1)] FGH1 = PRED(THETA, cEBE) G1i = FGH1[, GNames, drop=FALSE] H1i = FGH1[, HNames, drop=FALSE] R1i = DATA[DATA$ID == cID, &quot;DV&quot;] - FGH1[,&quot;F&quot;] C1i = G1i %*% OM %*% t(G1i) + diag(diag(H1i %*% SG %*% t(H1i))) CWRES = SqrtInvCov(C1i) %*% (R1i + G1i %*% cEBE) tSD = rbind(tSD, cbind(DATA[DATA$ID == cID, c(&quot;ID&quot;, &quot;TIME&quot;, &quot;DV&quot;)], PRED=FGH0[,&quot;F&quot;], RES=R0i, WRES, CIPREDI=FGH1[,&quot;F&quot;], CIRESI=R1i, CWRES, G1i, H1i)) } ; tSD ID TIME DV PRED RES WRES CIPREDI CIRESI CWRES G1 G2 G3 H1 H2 1 0.00 0.74 0.000000 0.7400000 2.6561500 0.0000000 0.7400000 2.6561500 0.0000000 0.0000000 0.0000000 0.0000000 1 1 0.25 2.84 3.045554 -0.2055536 -1.1745319 3.3714687 -0.5314687 -1.0759590 2.8374772 -3.3714687 -0.0292542 3.3714687 1 1 0.57 6.57 5.507682 1.0623178 0.4362261 6.2495741 0.3204259 0.3982537 4.1521061 -6.2495741 -0.1314922 6.2495741 1 1 1.12 10.50 7.546834 2.9531664 1.8118110 8.8754044 1.6245956 1.5665990 3.7537387 -8.8754044 -0.4029654 8.8754044 1 1 2.02 9.66 8.279489 1.3805114 0.0420244 10.1706983 -0.5106983 0.0638962 1.7525331 -10.1706983 -0.9396416 10.1706983 1 1 3.82 8.58 7.472642 1.1073583 -0.3930624 9.7058648 -1.1258648 -0.2446651 -0.1151616 -9.7058648 -1.9604026 9.7058648 1 1 5.10 8.36 6.704715 1.6552852 0.1031540 8.9764841 -0.6164841 0.1558665 -0.3718341 -8.9764841 -2.5575103 8.9764841 1 1 7.03 7.47 5.664272 1.8057278 0.2765339 7.9150122 -0.4450122 0.2949161 -0.4005154 -7.9150122 -3.2586152 7.9150122 1 1 9.05 6.89 4.744483 2.1455169 0.8338127 6.9289472 -0.0389472 0.6937388 -0.3583040 -6.9289472 -3.7750296 6.9289472 1 1 12.12 5.94 3.624116 2.3158843 1.4744857 5.6594083 0.2805917 1.1079683 -0.2933227 -5.6594083 -4.2287813 5.6594083 1 1 24.37 3.28 1.237066 2.0429341 3.4665718 2.5236443 0.7563557 2.4020105 -0.1308067 -2.5236443 -3.9238328 2.5236443 1 2 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 2 0.27 1.72 3.240324 -1.5203236 -3.7467841 3.9426059 -2.2226059 -3.0297960 2.9410022 -3.9426059 -0.0532433 3.9426059 1 2 0.52 7.91 5.204117 2.7058832 2.9595086 5.9858531 1.9241469 2.7844277 3.3130713 -5.9858531 -0.1670818 5.9858531 1 2 1.00 8.31 7.260954 1.0490459 0.6937344 7.6870928 0.6229072 0.7495964 2.2064700 -7.6870928 -0.4625110 7.6870928 1 2 1.92 8.33 8.274352 0.0556478 0.1097808 8.0195185 0.3104815 0.1229191 0.3634899 -8.0195185 -1.0743404 8.0195185 1 2 3.50 6.85 7.665105 -0.8151047 -0.4445284 7.0892438 -0.2392438 -0.5242639 -0.2788680 -7.0892438 -1.9525270 7.0892438 1 2 5.02 6.08 6.751329 -0.6713291 -0.3161193 6.1707695 -0.0907695 -0.4026064 -0.2843770 -6.1707695 -2.5598264 6.1707695 1 2 7.03 5.40 5.664272 -0.2642722 0.1108387 5.1300947 0.2699053 0.0630803 -0.2390127 -5.1300947 -3.0757846 5.1300947 1 2 9.00 4.55 4.765343 -0.2153429 0.1601715 4.2804281 0.2695719 0.1239068 -0.1994841 -4.2804281 -3.3414242 4.2804281 1 2 12.00 3.01 3.662477 -0.6524768 -0.6528156 3.2488752 -0.2388752 -0.7520965 -0.1514110 -3.2488752 -3.4320230 3.2488752 1 2 24.30 0.90 1.244687 -0.3446875 -0.5926428 1.0489164 -0.1489164 -0.6266956 -0.0488838 -1.0489164 -2.2939003 1.0489164 1 3 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 3 0.27 4.40 3.240324 1.1596764 0.6647621 4.2362711 0.1637289 0.4786044 3.0809358 -4.2362711 -0.0543744 4.2362711 1 3 0.58 6.90 5.565356 1.3346442 0.4696924 6.6745769 0.2254231 0.4419853 3.2243577 -6.6745769 -0.2018901 6.6745769 1 3 1.02 8.20 7.313437 0.8865629 0.1589433 8.0108245 0.1891755 0.2347834 1.9747237 -8.0108245 -0.4744940 8.0108245 1 3 2.02 7.80 8.279489 -0.4794886 -0.5079143 8.1617293 -0.3617293 -0.4355207 0.1573924 -8.1617293 -1.1193984 8.1617293 1 3 3.62 7.50 7.593440 -0.0934403 0.1441966 7.1949722 0.3050278 0.1538445 -0.2660787 -7.1949722 -1.9696263 7.1949722 1 3 5.08 6.20 6.716344 -0.5163445 -0.2703398 6.3416897 -0.1416897 -0.3126522 -0.2547358 -6.3416897 -2.5383570 6.3416897 1 3 7.07 5.30 5.644442 -0.3444424 -0.1550843 5.3364109 -0.0364109 -0.1997359 -0.2154375 -5.3364109 -3.0570543 5.3364109 1 3 9.00 4.90 4.765343 0.1346571 0.4494998 4.5138389 0.3861611 0.4323265 -0.1822469 -4.5138389 -3.3414710 4.5138389 1 3 12.15 3.70 3.614588 0.0854116 0.3663854 3.4346714 0.2653286 0.3441843 -0.1386756 -3.4346714 -3.4810370 3.4346714 1 3 24.17 1.05 1.258967 -0.2089666 -0.5974952 1.2108503 -0.1608503 -0.6213193 -0.0488884 -1.2108503 -2.4896265 1.2108503 1 4 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 4 0.35 1.89 3.958863 -2.0688629 -2.0942539 3.1237126 -1.2337126 -2.7017697 2.5806183 -3.1237126 -0.0513931 3.1237126 1 4 0.60 4.60 5.677783 -1.0777834 -0.3006852 4.6855169 -0.0855169 -0.4485920 3.3477713 -4.6855169 -0.1371225 4.6855169 1 4 1.07 8.60 7.435969 1.1640312 1.6730389 6.5844290 2.0155710 1.8744046 3.5027581 -6.5844290 -0.3665431 6.5844290 1 4 2.13 8.38 8.272733 0.1072666 0.0456500 8.1169978 0.2630022 0.0937251 1.9317834 -8.1169978 -1.0159715 8.1169978 1 4 3.50 7.54 7.665105 -0.1251047 -0.4267696 7.9610365 -0.4210365 -0.3743457 0.3064453 -7.9610365 -1.8330387 7.9610365 1 4 5.02 6.88 6.751329 0.1286709 -0.2416364 7.1434544 -0.2634544 -0.2074508 -0.3582179 -7.1434544 -2.5578272 7.1434544 1 4 7.02 5.78 5.669240 0.1107596 -0.2572531 6.0192526 -0.2392526 -0.2347307 -0.5047098 -6.0192526 -3.2098073 6.0192526 1 4 9.02 5.33 4.756988 0.5730120 0.4353103 5.0425351 0.2874649 0.4150483 -0.4578357 -5.0425351 -3.5837839 5.0425351 1 4 11.98 4.19 3.668910 0.5210904 0.5478913 3.8750792 0.3149208 0.5163706 -0.3575480 -3.8750792 -3.7746656 3.8750792 1 4 24.65 1.15 1.207043 -0.0570435 -0.3803379 1.2544329 -0.1044329 -0.3961231 -0.1158982 -1.2544329 -2.6367794 1.2544329 1 5 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 5 0.30 2.02 3.520844 -1.5008441 -2.9903755 3.8188333 -1.7988333 -2.8226660 3.0487323 -3.8188333 -0.0487538 3.8188333 1 5 0.52 5.63 5.204117 0.4258832 0.1905088 5.6771084 -0.0471084 0.1703718 3.7974243 -5.6771084 -0.1314133 5.6771084 1 5 1.00 11.40 7.260954 4.1390459 3.5912265 8.0080018 3.3919982 3.2847000 3.5054451 -8.0080018 -0.3894289 8.0080018 1 5 2.02 9.33 8.279489 1.0505114 0.2403597 9.2900286 0.0399714 0.2409279 1.3000094 -9.2900286 -1.0540971 9.2900286 1 5 3.50 8.74 7.665105 1.0748953 0.1867023 8.7438607 -0.0038607 0.2018875 -0.1336206 -8.7438607 -1.9484778 8.7438607 1 5 5.02 7.56 6.751329 0.8086709 -0.0912295 7.8042236 -0.2442236 -0.0398778 -0.3959325 -7.8042236 -2.6691917 7.8042236 1 5 7.02 7.09 5.669240 1.4207596 0.6755897 6.6610199 0.4289801 0.6242825 -0.3848373 -6.6610199 -3.3373180 6.6610199 1 5 9.10 5.90 4.723715 1.1762854 0.4880563 5.6438734 0.2561266 0.4545830 -0.3297712 -5.6438734 -3.7630741 5.6438734 1 5 12.00 4.37 3.662477 0.7075232 -0.1093681 4.4792510 -0.1092510 -0.0682304 -0.2619583 -4.4792510 -4.0217837 4.4792510 1 5 24.35 1.57 1.239239 0.3307613 -0.2592447 1.6739878 -0.1039878 -0.2781519 -0.0979015 -1.6739878 -3.1506407 1.6739878 1 6 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 6 0.27 1.29 3.240324 -1.9503236 -1.4298170 1.8728050 -0.5828050 -2.0711618 1.6481130 -1.8728050 -0.0289727 1.8728050 1 6 0.58 3.08 5.565356 -2.4853558 -1.1154533 3.4527029 -0.3727029 -1.4655368 2.6013480 -3.4527029 -0.1193557 3.4527029 1 6 1.15 6.44 7.608110 -1.1681096 0.3401487 5.2388093 1.2011907 0.7520667 2.8864844 -5.2388093 -0.3841195 5.2388093 1 6 2.03 6.32 8.279381 -1.9593805 -0.6942942 6.3250913 -0.0050913 -0.7089655 1.9607480 -6.3250913 -0.8964443 6.3250913 1 6 3.57 5.53 7.623397 -2.0933966 -1.1015247 6.2419697 -0.7119697 -1.2624472 0.3490151 -6.2419697 -1.7573239 6.2419697 1 6 5.00 4.94 6.763022 -1.8230221 -0.9536554 5.5426988 -0.6026988 -1.1084127 -0.3057652 -5.5426988 -2.3629511 5.5426988 1 6 7.00 4.02 5.679190 -1.6591897 -0.8815859 4.5058199 -0.4858199 -1.0405328 -0.5142525 -4.5058199 -2.8853774 4.5058199 1 6 9.22 3.46 4.674240 -1.2142400 -0.3833560 3.5352311 -0.0752311 -0.4386032 -0.4645569 -3.5352311 -3.1242091 3.5352311 1 6 12.10 2.78 3.630481 -0.8504812 0.1199674 2.5724996 0.2075004 0.1789669 -0.3487803 -2.5724996 -3.0912271 2.5724996 1 6 23.85 0.92 1.294817 -0.3748171 0.6376046 0.7017849 0.2182151 0.5772292 -0.0955726 -0.7017849 -1.7549054 0.7017849 1 7 0.00 0.15 0.000000 0.1500000 0.5384088 0.0000000 0.1500000 0.5384088 0.0000000 0.0000000 0.0000000 0.0000000 1 7 0.25 0.85 3.045554 -2.1955536 -1.1394542 1.4139744 -0.5639744 -2.1846664 1.3053639 -1.4139744 -0.0182932 1.4139744 1 7 0.50 2.35 5.075308 -2.7253075 -0.8838222 2.5870653 -0.2370653 -1.3331782 2.1985339 -2.5870653 -0.0683754 2.5870653 1 7 1.02 5.02 7.313437 -2.2934371 -0.5193629 4.4057322 0.6142678 -0.0718178 3.1198864 -4.4057322 -0.2478500 4.4057322 1 7 2.02 6.58 8.279489 -1.6994886 -0.8673496 6.2725923 0.3074077 -0.5632082 2.9854215 -6.2725923 -0.7533641 6.2725923 1 7 3.48 7.09 7.676965 -0.5869646 -0.4181371 6.9391304 0.1508696 -0.3780931 1.5515185 -6.9391304 -1.5771886 6.9391304 1 7 5.00 6.66 6.763022 -0.1030221 -0.0116916 6.5725572 0.0874428 -0.1479180 0.3320468 -6.5725572 -2.3222901 6.5725572 1 7 6.98 5.25 5.689156 -0.4391563 -0.3520015 5.6474692 -0.3974692 -0.5613283 -0.4434685 -5.6474692 -3.0104227 5.6474692 1 7 9.00 4.39 4.765343 -0.3753429 -0.2296325 4.6807759 -0.2907759 -0.4472906 -0.6669056 -4.6807759 -3.4044510 4.6807759 1 7 12.05 3.53 3.646444 -0.1164439 0.2769412 3.4610554 0.0689446 0.0808290 -0.6192837 -3.4610554 -3.5660740 3.4610554 1 7 24.22 1.15 1.253455 -0.1034553 0.4324536 1.0108448 0.1391552 0.3306587 -0.1942099 -1.0108448 -2.2852647 1.0108448 1 8 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 8 0.25 3.05 3.045554 0.0044464 0.8506052 2.6712353 0.3787647 0.9311091 2.2322133 -2.6712353 -0.0333499 2.6712353 1 8 0.52 3.05 5.204117 -2.1541168 -2.1125530 4.6134131 -1.5634131 -2.3200447 3.1321981 -4.6134131 -0.1263424 4.6134131 1 8 0.98 7.31 7.206396 0.1036038 0.7199486 6.4796773 0.8303227 0.8203437 2.9765042 -6.4796773 -0.3629084 6.4796773 1 8 2.02 7.56 8.279489 -0.7194886 -0.1991568 7.5702872 -0.0102872 -0.1928120 1.1223219 -7.5702872 -1.0095345 7.5702872 1 8 3.53 6.59 7.647266 -1.0572658 -0.6058361 7.0051817 -0.4151817 -0.6414985 -0.1533949 -7.0051817 -1.8553881 7.0051817 1 8 5.05 5.88 6.733819 -0.8538190 -0.4676159 6.1199198 -0.2399198 -0.4963042 -0.3857436 -6.1199198 -2.4853641 6.1199198 1 8 7.15 4.73 5.604988 -0.8749882 -0.5706399 5.0222350 -0.2922350 -0.6122561 -0.3628261 -5.0222350 -3.0359792 5.0222350 1 8 9.07 4.57 4.736165 -0.1661648 0.3657031 4.1870497 0.3829503 0.4211504 -0.3060357 -4.1870497 -3.2927624 4.1870497 1 8 12.10 3.00 3.630481 -0.6304812 -0.4224425 3.1419353 -0.1419353 -0.4528118 -0.2299531 -3.1419353 -3.3731014 3.1419353 1 8 24.12 1.25 1.264502 -0.0145021 0.6866476 1.0056718 0.2443282 0.7152530 -0.0736061 -1.0056718 -2.2253079 1.0056718 1 9 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 9 0.30 7.37 3.520844 3.8491559 3.1531153 6.6431892 0.7268108 1.6594951 2.5368023 -6.6431892 -0.1095550 6.6431892 1 9 0.63 9.03 5.839342 3.1906576 1.1579927 7.7358339 1.2941661 1.1551708 0.7527906 -7.7358339 -0.3154514 7.7358339 1 9 1.05 7.14 7.388406 -0.2484061 -1.6871601 7.6738562 -0.5338562 -0.9031540 0.0178073 -7.6738562 -0.5819938 7.6738562 1 9 2.02 6.33 8.279489 -1.9494886 -1.5056235 7.0744671 -0.7444671 -1.1890677 -0.1105312 -7.0744671 -1.1315725 7.0744671 1 9 3.53 5.66 7.647266 -1.9872658 -0.7792137 6.2036490 -0.5436490 -1.0055435 -0.0979539 -6.2036490 -1.8072357 6.2036490 1 9 5.02 5.67 6.751329 -1.0813291 0.1652372 5.4494164 0.2205836 -0.0512787 -0.0860451 -5.4494164 -2.2939172 5.4494164 1 9 7.17 4.24 5.595167 -1.3551674 -0.3295092 4.5197640 -0.2797640 -0.7018138 -0.0713661 -4.5197640 -2.7479987 4.5197640 1 9 8.80 4.11 4.849702 -0.7397023 0.3298974 3.9221921 0.1878079 0.0762826 -0.0619306 -3.9221921 -2.9408797 3.9221921 1 9 11.60 3.16 3.793304 -0.6333037 0.2554061 3.0742235 0.0857765 -0.0147260 -0.0485413 -3.0742235 -3.0539443 3.0742235 1 9 24.43 1.12 1.230570 -0.1105703 0.4426912 1.0068733 0.1131267 0.3090216 -0.0158983 -1.0068733 -2.1241060 1.0068733 1 10 0.00 0.24 0.000000 0.2400000 0.8614540 0.0000000 0.2400000 0.8614540 0.0000000 0.0000000 0.0000000 0.0000000 1 10 0.37 2.89 4.124245 -1.2342452 0.0594178 2.8538019 0.0361981 -0.2255322 2.4833245 -2.8538019 -0.0413012 2.8538019 1 10 0.77 5.22 6.490992 -1.2709916 -0.3473995 5.0957289 0.1242711 -0.1934314 3.7813461 -5.0957289 -0.1598791 5.0957289 1 10 1.02 6.41 7.313437 -0.9034371 -0.3630550 6.1517758 0.2582242 -0.0460278 4.1114579 -6.1517758 -0.2620176 6.1517758 1 10 2.05 7.83 8.278848 -0.4488477 -1.2240706 8.6289609 -0.7989609 -0.7950024 3.5689803 -8.6289609 -0.8097961 8.6289609 1 10 3.55 10.21 7.635343 2.5746574 0.8474355 9.4095373 0.8004627 0.8441514 1.5570654 -9.4095373 -1.7042425 9.4095373 1 10 5.05 9.18 6.733819 2.4461810 0.7158036 8.9738755 0.2061245 0.5781168 0.2233455 -8.9738755 -2.5077314 8.9738755 1 10 7.08 8.02 5.639496 2.3805043 0.8407141 7.9177245 0.1022755 0.5972980 -0.5096894 -7.9177245 -3.3484477 7.9177245 1 10 9.38 7.14 4.609079 2.5309214 1.3989847 6.7106466 0.4293534 0.9661650 -0.6710474 -6.7106466 -3.9739027 6.7106466 1 10 12.10 5.68 3.630481 2.0495188 1.1041073 5.4791473 0.2008527 0.7227185 -0.6106254 -5.4791473 -4.3587590 5.4791473 1 10 23.70 2.42 1.311972 1.1080284 0.9605746 2.2912679 0.1287321 0.5546576 -0.2625778 -2.2912679 -3.8204467 2.2912679 1 11 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 11 0.25 4.86 3.045554 1.8144464 1.0345632 4.7885832 0.0714168 0.5791098 2.9832865 -4.7885832 -0.0649988 4.7885832 1 11 0.50 7.24 5.075308 2.1646925 0.8832560 6.6675254 0.5724746 0.8256013 2.4066407 -6.6675254 -0.2017998 6.6675254 1 11 0.98 8.00 7.206396 0.7936038 -0.1715617 7.5070849 0.4929151 0.2310718 0.7335095 -7.5070849 -0.5166673 7.5070849 1 11 1.98 6.81 8.278827 -1.4688266 -0.9508327 7.0663828 -0.2563828 -0.7209376 -0.1400659 -7.0663828 -1.1365791 7.0663828 1 11 3.60 5.87 7.605438 -1.7354376 -0.5740380 6.0633811 -0.1933811 -0.6872435 -0.1687390 -6.0633811 -1.9091319 6.0633811 1 11 5.02 5.22 6.751329 -1.5313291 -0.3675960 5.2966630 -0.0766630 -0.5490415 -0.1477059 -5.2966630 -2.3837959 5.2966630 1 11 7.03 4.45 5.664272 -1.2142722 -0.1447934 4.3741371 0.0758629 -0.3100584 -0.1219826 -4.3741371 -2.8056762 4.3741371 1 11 9.03 3.62 4.752816 -1.1328160 -0.2071930 3.6157292 0.0042708 -0.3983592 -0.1008327 -3.6157292 -3.0077069 3.6157292 1 11 12.12 2.69 3.624116 -0.9341157 -0.1874335 2.6942000 -0.0042000 -0.3780889 -0.0751338 -2.6942000 -3.0337551 2.6942000 1 11 24.08 0.86 1.268948 -0.4089480 -0.0990606 0.8627895 -0.0027895 -0.2138028 -0.0240608 -0.8627895 -1.9539746 0.8627895 1 12 0.00 0.00 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1 12 0.25 1.25 3.045554 -1.7955536 -1.8179354 2.2611175 -1.0111175 -2.8017969 2.0141375 -2.2611175 -0.0249071 2.2611175 1 12 0.50 3.96 5.075308 -1.1153075 -0.1704834 4.0168736 -0.0568736 -0.5833466 3.1702245 -4.0168736 -0.0914027 4.0168736 1 12 1.00 7.82 7.260954 0.5590459 1.0284240 6.4045742 1.4154258 1.0861387 3.8987878 -6.4045742 -0.3097449 6.4045742 1 12 2.00 9.72 8.279380 1.4406200 0.7616318 8.4730999 1.2469001 0.8454976 2.8132957 -8.4730999 -0.9109728 8.4730999 1 12 3.52 9.75 7.653218 2.0967817 0.9286243 8.7212552 1.0287448 0.9391114 0.7368554 -8.7212552 -1.8639519 8.7212552 1 12 5.07 8.57 6.722165 1.8478346 0.7365488 7.9674541 0.6025459 0.7341382 -0.2460098 -7.9674541 -2.6686405 7.9674541 1 12 7.07 6.59 5.644442 0.9455576 -0.1648720 6.8052618 -0.2152618 -0.0509767 -0.5746426 -6.8052618 -3.4048661 6.8052618 1 12 9.03 6.11 4.752816 1.3571840 0.5485297 5.7725465 0.3374535 0.5348541 -0.5714217 -5.7725465 -3.8444036 5.7725465 1 12 12.05 4.57 3.646444 0.9235561 0.1709089 4.4652376 0.1047624 0.1877952 -0.4618189 -4.4652376 -4.1210285 4.4652376 1 12 24.15 1.17 1.261178 -0.0911779 -1.4221210 1.5924377 -0.4224377 -1.3489151 -0.1655917 -1.5924377 -3.1115734 1.5924377 1 "]
]
