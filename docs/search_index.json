[
["index.html", "NONMEM estimation using R 1 nmw 패키지", " NONMEM estimation using R Sungpil Han 2017-11-14 1 nmw 패키지 먼저 설치를 해야 합니다. #install.packages(c(&#39;nmw&#39;, &#39;compiler&#39;)) # CRAN library(nmw) ## Loading required package: numDeriv library(compiler) enableJIT(3) ## [1] 3 THEO-FO.OUT와 비교할 때 값이 같습니다. Scaling factor는 소스 코드를 보고 알아낸 것입니다. "],
["examples.html", "2 패키지를 사용한 예제 2.1 First Order Approximation Method 2.2 First Order Conditional Estimation with Interaction Method 2.3 Laplacian Approximation with Interacton Method", " 2 패키지를 사용한 예제 DataAll = Theoph colnames(DataAll) = c(&quot;ID&quot;, &quot;BWT&quot;, &quot;DOSE&quot;, &quot;TIME&quot;, &quot;DV&quot;) DataAll[,&quot;ID&quot;] = as.numeric(as.character(DataAll[,&quot;ID&quot;])) 그림을 그려보면 다음과 같습니다. (Figure 2.1) require(lattice) ## Loading required package: lattice xyplot(DV ~ TIME | as.factor(ID), data=DataAll, type=&quot;b&quot;) Figure 2.1: xyplot \\(\\theta, \\eta, \\epsilon\\) 개수를 먼저 지정해 주고 초기값을 설정합니다. nTheta = 3 nEta = 3 nEps = 2 THETAinit = c(2, 50, 0.1) OMinit = matrix(c(0.2, 0.1, 0.1, 0.1, 0.2, 0.1, 0.1, 0.1, 0.2), nrow=nEta, ncol=nEta) data.frame(OMinit) X1 X2 X3 0.2 0.1 0.1 0.1 0.2 0.1 0.1 0.1 0.2 SGinit = diag(c(0.1, 0.1)) data.frame(SGinit) X1 X2 0.1 0.0 0.0 0.1 LB = rep(0, nTheta) UB = rep(1000000, nTheta) FGD = deriv(~DOSE/(TH2*exp(ETA2))*TH1*exp(ETA1)/(TH1*exp(ETA1) - TH3*exp(ETA3))*(exp(-TH3*exp(ETA3)*TIME)-exp(-TH1*exp(ETA1)*TIME)), c(&quot;ETA1&quot;,&quot;ETA2&quot;,&quot;ETA3&quot;), function.arg=c(&quot;TH1&quot;, &quot;TH2&quot;, &quot;TH3&quot;, &quot;ETA1&quot;, &quot;ETA2&quot;, &quot;ETA3&quot;, &quot;DOSE&quot;, &quot;TIME&quot;), func=TRUE, hessian=(e$METHOD == &quot;LAPL&quot;)) H = deriv(~F + F*EPS1 + EPS2, c(&quot;EPS1&quot;, &quot;EPS2&quot;), function.arg=c(&quot;F&quot;, &quot;EPS1&quot;, &quot;EPS2&quot;), func=TRUE) PRED = function(THETA, ETA, DATAi) { FGDres = FGD(THETA[1], THETA[2], THETA[3], ETA[1], ETA[2], ETA[3], DOSE=320, DATAi[,&quot;TIME&quot;]) Gres = attr(FGDres, &quot;gradient&quot;) Hres = attr(H(FGDres, 0, 0), &quot;gradient&quot;) if (e$METHOD == &quot;LAPL&quot;) { Dres = attr(FGDres, &quot;hessian&quot;) Res = cbind(FGDres, Gres, Hres, Dres[,1,1], Dres[,2,1], Dres[,2,2], Dres[,3,]) colnames(Res) = c(&quot;F&quot;, &quot;G1&quot;, &quot;G2&quot;, &quot;G3&quot;, &quot;H1&quot;, &quot;H2&quot;, &quot;D11&quot;, &quot;D21&quot;, &quot;D22&quot;, &quot;D31&quot;, &quot;D32&quot;, &quot;D33&quot;) } else { Res = cbind(FGDres, Gres, Hres) colnames(Res) = c(&quot;F&quot;, &quot;G1&quot;, &quot;G2&quot;, &quot;G3&quot;, &quot;H1&quot;, &quot;H2&quot;) } return(Res) } 2.1 First Order Approximation Method InitStep(DataAll, THETAinit=THETAinit, OMinit=OMinit, SGinit=SGinit, nTheta=nTheta, LB=LB, UB=UB, Pred=PRED, METHOD=&quot;ZERO&quot;) 먼저 InitStep()을 통해서 초기화를 합니다. 2.1.1 EstRes (EstRes = EstStep()) # 4 sec ## $`Initial OFV` ## [1] 141.3076 ## ## $Time ## Time difference of 5.473072 secs ## ## $Optim ## $Optim$par ## [1] 0.560417594 -0.167835388 0.148962362 0.995143048 0.056166719 ## [6] 0.151227211 -1.032468525 0.005776729 0.110936464 -0.956899772 ## [11] -0.205559310 ## ## $Optim$value ## [1] 57.32106 ## ## $Optim$counts ## function gradient ## 74 74 ## ## $Optim$convergence ## [1] 0 ## ## $Optim$message ## [1] &quot;CONVERGENCE: REL_REDUCTION_OF_F &lt;= FACTR*EPSMCH&quot; ## ## ## $`Final Estimates` ## [1] 3.16946754 38.25213460 0.10501808 1.19823325 0.13747849 ## [6] 0.03134899 0.37015671 0.04340042 0.25068582 0.01207782 ## [11] 0.05427434 2.1.2 CovRes (CovRes = CovStep()) # 2 sec ## $Time ## Time difference of 2.004253 secs ## ## $`Standard Error` ## [1] 0.641076544 1.685217846 0.023072024 0.420617307 0.082197497 ## [6] 0.019812976 0.340273208 0.023052143 0.289524327 0.003576926 ## [11] 0.032078283 ## ## $`Covariance Matrix of Estimates` ## [,1] [,2] [,3] [,4] [,5] ## [1,] 0.4109791349 0.339158146 5.746694e-03 0.205808965 2.003772e-03 ## [2,] 0.3391581461 2.839959190 5.032613e-03 0.337602836 3.490465e-02 ## [3,] 0.0057466939 0.005032613 5.323183e-04 0.001629451 -1.041991e-03 ## [4,] 0.2058089651 0.337602836 1.629451e-03 0.176918919 1.951490e-02 ## [5,] 0.0020037725 0.034904655 -1.041991e-03 0.019514903 6.756428e-03 ## [6,] -0.0021925236 0.012804811 -2.503963e-04 0.003207225 1.504690e-03 ## [7,] 0.1215890850 0.149089321 7.111900e-03 0.057573149 -1.010198e-02 ## [8,] 0.0009971099 0.023865634 6.271266e-05 0.004215845 8.584714e-04 ## [9,] 0.0669924085 0.057326153 6.226096e-03 0.017986255 -1.309239e-02 ## [10,] 0.0010500117 0.001807746 5.805488e-05 0.000514357 -7.516774e-05 ## [11,] -0.0049728997 -0.009950377 -4.790609e-04 -0.001014500 9.532948e-04 ## [,6] [,7] [,8] [,9] [,10] ## [1,] -2.192524e-03 0.1215890850 9.971099e-04 0.0669924085 1.050012e-03 ## [2,] 1.280481e-02 0.1490893210 2.386563e-02 0.0573261529 1.807746e-03 ## [3,] -2.503963e-04 0.0071119003 6.271266e-05 0.0062260963 5.805488e-05 ## [4,] 3.207225e-03 0.0575731492 4.215845e-03 0.0179862546 5.143570e-04 ## [5,] 1.504690e-03 -0.0101019780 8.584714e-04 -0.0130923877 -7.516774e-05 ## [6,] 3.925540e-04 -0.0028272756 2.326326e-04 -0.0032697941 -2.051327e-05 ## [7,] -2.827276e-03 0.1157858561 3.116262e-03 0.0940102396 9.767199e-04 ## [8,] 2.326326e-04 0.0031162618 5.314013e-04 0.0018656807 2.786064e-05 ## [9,] -3.269794e-03 0.0940102396 1.865681e-03 0.0838243358 8.055388e-04 ## [10,] -2.051327e-05 0.0009767199 2.786064e-05 0.0008055388 1.279440e-05 ## [11,] 1.806783e-04 -0.0038608272 2.199601e-04 -0.0033970159 -2.824858e-05 ## [,11] ## [1,] -4.972900e-03 ## [2,] -9.950377e-03 ## [3,] -4.790609e-04 ## [4,] -1.014500e-03 ## [5,] 9.532948e-04 ## [6,] 1.806783e-04 ## [7,] -3.860827e-03 ## [8,] 2.199601e-04 ## [9,] -3.397016e-03 ## [10,] -2.824858e-05 ## [11,] 1.029016e-03 ## ## $`Correlation Matrix of Estimates` ## [,1] [,2] [,3] [,4] [,5] [,6] ## [1,] 1.00000000 0.3139325 0.3885281 0.76325079 0.03802594 -0.1726174 ## [2,] 0.31393253 1.0000000 0.1294350 0.47628061 0.25198153 0.3835018 ## [3,] 0.38852814 0.1294350 1.0000000 0.16790690 -0.54943908 -0.5477629 ## [4,] 0.76325079 0.4762806 0.1679069 1.00000000 0.56444374 0.3848509 ## [5,] 0.03802594 0.2519815 -0.5494391 0.56444374 1.00000000 0.9239295 ## [6,] -0.17261745 0.3835018 -0.5477629 0.38485092 0.92392947 1.0000000 ## [7,] 0.55738714 0.2599936 0.9058832 0.40225837 -0.36117699 -0.4193635 ## [8,] 0.06747173 0.6143355 0.1179121 0.43479661 0.45306025 0.5093422 ## [9,] 0.36093637 0.1174929 0.9320626 0.14769593 -0.55014251 -0.5700142 ## [10,] 0.45790382 0.2998966 0.7034659 0.34187510 -0.25566008 -0.2894510 ## [11,] -0.24181804 -0.1840655 -0.6472826 -0.07518893 0.36154098 0.2842792 ## [,7] [,8] [,9] [,10] [,11] ## [1,] 0.5573871 0.06747173 0.3609364 0.4579038 -0.24181804 ## [2,] 0.2599936 0.61433553 0.1174929 0.2998966 -0.18406548 ## [3,] 0.9058832 0.11791206 0.9320626 0.7034659 -0.64728262 ## [4,] 0.4022584 0.43479661 0.1476959 0.3418751 -0.07518893 ## [5,] -0.3611770 0.45306025 -0.5501425 -0.2556601 0.36154098 ## [6,] -0.4193635 0.50934215 -0.5700142 -0.2894510 0.28427925 ## [7,] 1.0000000 0.39727833 0.9542504 0.8024764 -0.35370524 ## [8,] 0.3972783 1.00000000 0.2795381 0.3378856 0.29745513 ## [9,] 0.9542504 0.27953808 1.0000000 0.7778421 -0.36576437 ## [10,] 0.8024764 0.33788563 0.7778421 1.0000000 -0.24619292 ## [11,] -0.3537052 0.29745513 -0.3657644 -0.2461929 1.00000000 ## ## $`Inverse Covariance Matrix of Estimates` ## [,1] [,2] [,3] [,4] [,5] ## [1,] 106.16085 -68.57396 6449.005 335.8698 -2554.409 ## [2,] -68.57396 58.03937 -4878.746 -302.1420 2175.297 ## [3,] 6449.00511 -4878.74592 589180.808 26966.6054 -188642.064 ## [4,] 335.86981 -302.14199 26966.605 1681.5577 -11681.346 ## [5,] -2554.40931 2175.29715 -188642.064 -11681.3455 84767.297 ## [6,] -386.87894 570.22260 -66147.099 -3404.8900 13635.511 ## [7,] -1202.16351 939.99683 -90186.464 -5086.8917 35747.139 ## [8,] 10794.57604 -8973.04617 795473.394 47387.2331 -336778.080 ## [9,] -49.38187 87.68163 -10522.263 -442.6127 3308.451 ## [10,] 11656.77317 -10122.84532 899033.050 53311.6419 -378718.159 ## [11,] -1043.11499 1001.74635 -47225.438 -4879.5431 35063.037 ## [,6] [,7] [,8] [,9] [,10] ## [1,] -386.8789 -1202.1635 10794.576 -49.38187 11656.77 ## [2,] 570.2226 939.9968 -8973.046 87.68163 -10122.85 ## [3,] -66147.0985 -90186.4635 795473.394 -10522.26321 899033.05 ## [4,] -3404.8900 -5086.8917 47387.233 -442.61268 53311.64 ## [5,] 13635.5105 35747.1394 -336778.080 3308.45066 -378718.16 ## [6,] 72186.1449 10923.7488 -116902.668 2827.92009 -138707.39 ## [7,] 10923.7488 16640.0640 -149635.853 965.72182 -166637.08 ## [8,] -116902.6682 -149635.8529 1416416.071 -14025.69869 1587796.17 ## [9,] 2827.9201 965.7218 -14025.699 954.65511 -20047.21 ## [10,] -138707.3925 -166637.0774 1587796.174 -20047.20946 2031529.81 ## [11,] 15687.7641 14275.7792 -151936.735 935.29881 -170271.34 ## [,11] ## [1,] -1043.1150 ## [2,] 1001.7463 ## [3,] -47225.4377 ## [4,] -4879.5431 ## [5,] 35063.0375 ## [6,] 15687.7641 ## [7,] 14275.7792 ## [8,] -151936.7354 ## [9,] 935.2988 ## [10,] -170271.3395 ## [11,] 28036.5549 ## ## $`Eigen Values` ## [1] 0.0002519304 0.0096729015 0.0108358602 0.0233184644 0.0520725532 ## [6] 0.2982375047 0.5047779120 0.9114702289 1.2088053269 3.2082379783 ## [11] 4.7723193395 ## ## $`R Matrix` ## [,1] [,2] [,3] [,4] [,5] ## [1,] 17.924787 -1.3343223 -162.767654 -4.1309683 21.546405 ## [2,] -1.334322 0.5507357 -7.672315 0.1118322 -1.462878 ## [3,] -162.767654 -7.6723148 34333.363152 86.0269293 433.962384 ## [4,] -4.130968 0.1118322 86.026929 28.6263094 -177.270130 ## [5,] 21.546405 -1.4628778 433.962384 -177.2701301 1930.445843 ## [6,] 10.225928 -16.5210396 13.387686 272.9370785 -4270.878831 ## [7,] -11.022690 2.9849069 -90.741373 -52.9261900 210.709300 ## [8,] 52.304346 -18.2457139 956.482064 164.3158075 -1421.957500 ## [9,] 7.044855 -2.2338946 -1350.939646 24.4536958 -43.763546 ## [10,] 248.456482 -120.7991176 -7033.212483 50.2328789 -1013.856688 ## [11,] -1.752135 -5.2052276 -1992.414214 6.0120604 124.417556 ## [,6] [,7] [,8] [,9] [,10] ## [1,] 10.22593 -11.022690 52.30435 7.044855 248.45648 ## [2,] -16.52104 2.984907 -18.24571 -2.233895 -120.79912 ## [3,] 13.38769 -90.741373 956.48206 -1350.939646 -7033.21248 ## [4,] 272.93708 -52.926190 164.31581 24.453696 50.23288 ## [5,] -4270.87883 210.709300 -1421.95750 -43.763546 -1013.85669 ## [6,] 16610.43942 -139.814385 1113.59904 18.726078 4680.59998 ## [7,] -139.81438 213.228947 -555.99366 -151.083275 96.25915 ## [8,] 1113.59904 -555.993663 4043.51428 130.794770 -555.76917 ## [9,] 18.72608 -151.083275 130.79477 236.875935 -20.42601 ## [10,] 4680.59998 96.259149 -555.76917 -20.426010 192857.05266 ## [11,] -46.02961 -62.941133 -201.26760 92.656857 6568.90926 ## [,11] ## [1,] -1.752135 ## [2,] -5.205228 ## [3,] -1992.414214 ## [4,] 6.012060 ## [5,] 124.417556 ## [6,] -46.029614 ## [7,] -62.941133 ## [8,] -201.267605 ## [9,] 92.656857 ## [10,] 6568.909258 ## [11,] 3974.804400 ## ## $`S Matrix` ## [,1] [,2] [,3] [,4] [,5] ## [1,] 78.316509 -4.6468525 -1295.13192 -11.873085 142.72165 ## [2,] -4.646852 0.7648878 64.36589 2.623533 -28.61925 ## [3,] -1295.131915 64.3658917 183632.39792 -230.636173 840.38211 ## [4,] -11.873085 2.6235332 -230.63617 18.368716 -171.71679 ## [5,] 142.721653 -28.6192545 840.38211 -171.716794 2005.81552 ## [6,] -145.835176 29.4905946 9000.10288 291.779615 -3809.95407 ## [7,] -26.707401 0.2387057 3794.27704 -19.686952 51.76139 ## [8,] 44.375129 10.7614124 -10813.66434 84.841787 -765.19107 ## [9,] 13.946014 -4.4042212 -6396.75146 3.480210 87.90129 ## [10,] 2039.647982 -397.4745827 -4148.02642 -1170.279733 8916.77585 ## [11,] 279.500822 -47.3111189 -60483.51063 -22.729230 670.78875 ## [,6] [,7] [,8] [,9] [,10] ## [1,] -145.83518 -26.7074009 44.37513 13.946014 2039.6480 ## [2,] 29.49059 0.2387057 10.76141 -4.404221 -397.4746 ## [3,] 9000.10288 3794.2770356 -10813.66434 -6396.751456 -4148.0264 ## [4,] 291.77961 -19.6869516 84.84179 3.480210 -1170.2797 ## [5,] -3809.95407 51.7613882 -765.19107 87.901295 8916.7758 ## [6,] 12023.28651 188.5688359 667.62858 -711.894529 -3829.1367 ## [7,] 188.56884 129.3349738 -292.66398 -155.764410 1796.9713 ## [8,] 667.62858 -292.6639796 1121.03185 294.247258 -10631.8774 ## [9,] -711.89453 -155.7644098 294.24726 327.282119 1812.2113 ## [10,] -3829.13666 1796.9713222 -10631.87741 1812.211287 419517.6545 ## [11,] -3489.01512 -1105.9231023 2773.71160 2358.454996 18067.4267 ## [,11] ## [1,] 279.50082 ## [2,] -47.31112 ## [3,] -60483.51063 ## [4,] -22.72923 ## [5,] 670.78875 ## [6,] -3489.01512 ## [7,] -1105.92310 ## [8,] 2773.71160 ## [9,] 2358.45500 ## [10,] 18067.42672 ## [11,] 24042.66053 2.1.3 PostHocEta PostHocEta() # FinalPara from EstStep() ## ID ETA1 ETA2 ETA3 ## [1,] 1 -0.6367109 -0.232258352 -0.73648224 ## [2,] 2 -0.5895843 -0.153341805 -0.06619115 ## [3,] 3 -0.3083755 -0.124816676 -0.21013190 ## [4,] 4 -1.0305984 -0.186821177 -0.21195510 ## [5,] 5 -0.8235560 -0.302352128 -0.24453948 ## [6,] 6 -1.0025271 0.068181532 -0.08745089 ## [7,] 7 -1.4316285 -0.097903076 -0.13802639 ## [8,] 8 -0.7541785 -0.039239022 -0.19621190 ## [9,] 9 0.7875803 0.010757282 -0.19937965 ## [10,] 10 -1.4555649 -0.369057237 -0.40057582 ## [11,] 11 0.1541451 -0.005061315 -0.08005791 ## [12,] 12 -1.2863346 -0.388864841 -0.10134440 2.2 First Order Conditional Estimation with Interaction Method InitStep(DataAll, THETAinit=THETAinit, OMinit=OMinit, SGinit=SGinit, nTheta=nTheta, LB=LB, UB=UB, Pred=PRED, METHOD=&quot;COND&quot;) (EstRes = EstStep()) # 1.7 min (CovRes = CovStep()) # 44 sec get(&quot;EBE&quot;, envir=e) 2.3 Laplacian Approximation with Interacton Method InitStep(DataAll, THETAinit=THETAinit, OMinit=OMinit, SGinit=SGinit, nTheta=nTheta, LB=LB, UB=UB, Pred=PRED, METHOD=&quot;LAPL&quot;) (EstRes = EstStep()) # 3.4 min (CovRes = CovStep()) # 52 sec get(&quot;EBE&quot;, envir=e) \\[ G = \\begin{bmatrix} \\frac{\\partial F}{\\partial \\eta_1} &amp; \\frac{\\partial^2 F}{\\partial \\eta_1 \\partial \\eta_1} &amp; [blank] &amp; [blank] \\\\ \\frac{F}{\\eta_2} &amp; \\frac{\\partial^2 F}{\\partial \\eta_2 \\partial \\eta_1} &amp; \\frac{\\partial^2 F}{\\partial \\eta_2 \\partial \\eta_2} &amp; [blank] \\\\ \\frac{F}{\\eta_3} &amp; \\frac{\\partial^2 F}{\\partial \\eta_3 \\partial \\eta_1} &amp; \\frac{\\partial^2 F}{\\partial \\eta_3 \\partial \\eta_2} &amp; \\frac{\\partial^2 F}{\\partial \\eta_3 \\partial \\eta_3} \\end{bmatrix} \\] "]
]
