
R version 3.4.2 (2017-09-28) -- "Short Summer"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> DATA = Theoph
> colnames(DATA) = c("ID", "BWT", "DOSE", "TIME", "DV")
> DATA[,"ID"] = as.numeric(as.character(DATA[,"ID"]))
> 
> require(lattice)
Loading required package: lattice
> xyplot(DV ~ TIME | as.factor(ID), data=DATA, type="b")
> 
> ## INIT STEP
> IDs = unique(DATA[,"ID"]) ; IDs
 [1]  1  2  3  4  5  6  7  8  9 10 11 12
> nID = length(IDs) ; nID
[1] 12
> 
> nTheta = 3
> nEta = 3
> nEps = 2
> nPara = nTheta + nEta*(nEta + 1)/2 + nEps ; nPara
[1] 11
> 
> GNames = outer("G", 1:nEta, paste0)[1,] ; GNames
[1] "G1" "G2" "G3"
> HNames = outer("H", 1:nEps, paste0)[1,] ; HNames
[1] "H1" "H2"
> 
> iOM = (nTheta + 1):(nTheta + nEta*(nEta + 1)/2) ; iOM
[1] 4 5 6 7 8 9
> iSG = (nTheta + nEta*(nEta + 1)/2 + 1):(nTheta + nEta*(nEta + 1)/2 + nEps) ; iSG
[1] 10 11
> 
> IE = c(2, 50, 0.1)
> LB = rep(0, nTheta)
> UB = rep(1e6, nTheta)
> 
> alpha = 0.1 - log((IE - LB)/(UB - LB)/(1 - (IE - LB)/(UB - LB))) ; alpha
[1] 13.22236 10.00344 16.21810
> 
> p0 = rep(0.1, nTheta)
> p1 = exp(p0 - alpha)
> p2 = p1/(p1 + 1)*(UB - LB) + LB ; p2
[1]  2.0 50.0  0.1
> 
> OM0 = matrix(c(0.2, 0.1, 0.1, 0.1, 0.2, 0.1, 0.1, 0.1, 0.2), nrow=nEta) ; OM0
     [,1] [,2] [,3]
[1,]  0.2  0.1  0.1
[2,]  0.1  0.2  0.1
[3,]  0.1  0.1  0.2
> SG0 = diag(c(0.1, 0.1)) ; SG0
     [,1] [,2]
[1,]  0.1  0.0
[2,]  0.0  0.1
> 
> EXPP1 = exp(0.1)
> ScaleVar = function(VarMat, dim1)
+ {
+   M1 = chol(VarMat)
+   V1 = diag(M1)
+   M2 = abs(10 * (M1 - diag(V1, nrow=dim1))) + diag(V1/EXPP1, nrow=dim1)
+   return(t(M2))
+ }
> OMscl = ScaleVar(OM0, nEta) ; OMscl
          [,1]     [,2]      [,3]
[1,] 0.4046556 0.000000 0.0000000
[2,] 2.2360680 0.350442 0.0000000
[3,] 2.2360680 1.290994 0.3303999
> SGscl = ScaleVar(SG0, nEps) ; SGscl
          [,1]      [,2]
[1,] 0.2861347 0.0000000
[2,] 0.0000000 0.2861347
> 
> DesclVar = function(mUCP, mSCL)
+ {
+   nRow = dim(mUCP)[1]
+   maT = matrix(nrow=nRow, ncol=nRow)
+ 
+   for (i in 1:nRow) {
+     for (j in 1:nRow) {
+       if (i==j) {
+         maT[i,j] = exp(mUCP[i,j]) * mSCL[i,j]
+       } else if(i > j) {
+         maT[i,j] = mUCP[i,j] * mSCL[i,j]
+       } else {
+         maT[i,j] = 0
+       }
+     }
+   }
+   return(maT %*% t(maT))
+ }
> DesclVar(matrix(rep(0.1, nEta*nEta), nrow=nEta), OMscl)
     [,1] [,2] [,3]
[1,]  0.2  0.1  0.1
[2,]  0.1  0.2  0.1
[3,]  0.1  0.1  0.2
> DesclVar(diag(rep(0.1, nEps)), SGscl)
     [,1] [,2]
[1,]  0.1  0.0
[2,]  0.0  0.1
> 
> ltv2mat = function(vec)
+ {
+   LENGTH = length(vec)
+   DIM = round((sqrt(8*LENGTH+1)-1)/2,0)
+   if (DIM*(DIM+1)/2 != LENGTH) return(NULL)
+   mat = matrix(nrow=DIM, ncol=DIM)
+   for (m in 1:DIM) {
+     for (n in 1:DIM) {
+       k = max(m,n)
+       l = min(m,n)
+       p = k*(k - 1)/2 + l
+       mat[m,n] = vec[p]
+     }
+   }
+   return(mat)
+ }
> 
> s2o = function(p)
+ {
+   p0 = p[1:nTheta]
+   p1 = exp(p0 - alpha)
+   p2 = p1/(p1 + 1)*(UB - LB) + LB
+   OM = DesclVar(ltv2mat(p[iOM]), OMscl)
+   SG = DesclVar(diag(p[iSG]), SGscl)
+   Res = list(p2, OM, SG)
+   names(Res) = c("THETA", "OMEGA", "SIGMA")
+   return(Res)
+ }
> s2o(rep(0.1, nPara))
$THETA
[1]  2.0 50.0  0.1

$OMEGA
     [,1] [,2] [,3]
[1,]  0.2  0.1  0.1
[2,]  0.1  0.2  0.1
[3,]  0.1  0.1  0.2

$SIGMA
     [,1] [,2]
[1,]  0.1  0.0
[2,]  0.0  0.1

> 
> ## EST STEP
> PRED = function(THETA, ETA)
+ {
+ # Extern: DATA[,c("ID", "TIME", "DV")], cID
+   KA   = THETA[1]*exp(ETA[1])
+   V    = THETA[2]*exp(ETA[2])
+   K    = THETA[3]*exp(ETA[3])
+   TIME = DATA[DATA$ID == cID, "TIME"]
+ 
+   TERM1 = KA/(KA - K)
+   TERM2 = K /(KA - K)
+   TERM3 = 320/V*TERM1
+   TERM4 = exp(-K*TIME)
+   TERM5 = exp(-KA*TIME)
+ 
+   F  = TERM3*(TERM4 - TERM5)
+   G1 = -F*TERM2 + KA*TIME*TERM3*TERM5
+   G2 = -F
+   G3 = F*TERM2 - K*TIME*TERM3*TERM4
+   H1 = F
+   H2 = 1
+   return(cbind(F, G1, G2, G3, H1, H2))
+ }
> 
> ObjEta = function(ETA)
+ {
+ # External: THETA, invOM, SG, cID, DATA[,"DV"]
+   FGH = PRED(THETA, ETA)
+   Hi  = FGH[, HNames, drop=FALSE] # always INTER==TRUE
+   Ri  = DATA[DATA$ID == cID, "DV"] - FGH[,"F"]
+ 
+ ## Slower version
+ #  Vi = diag(diag(Hi %*% SG %*% t(Hi)))
+ #  iSum = log(det(Vi)) + t(Ri) %*% solve(Vi) %*% Ri + t(ETA) %*% invOM %*% ETA
+ 
+ ## Faster version
+   Vi    = diag(Hi %*% SG %*% t(Hi))
+   return(sum(log(Vi) + Ri*Ri/Vi) + t(ETA) %*% invOM %*% ETA)
+ }
> 
> EBE = cbind(ID = IDs, ETA1=0, ETA2=0, ETA3=0, Oi=0)
> 
> ## Preliminary fitting
> OBJ1a = function(p)
+ {
+ # External: DATA, nTheta, nEta, nEps
+   if (STEP == "EST") {
+     r     = s2o(p[1:nPara])
+     THETA <<- r$THETA      # for ObjEta
+     OM    = r$OMEGA
+     SG    <<- r$SIGMA      # for ObjEta
+   } else {
+     THETA <<- p[1:nTheta]  # for ObjEta
+     OM    = ltv2mat(p[iOM])
+     SG    <<- diag(p[iSG]) # for ObjEta
+   }
+   invOM <<- solve(OM)      # for ObjEta
+   Term3 = determinant(OM, logarithm=TRUE)$modulus[[1]]
+ 
+   for (i in 1:nID) {
+     cID  <<- IDs[i] # for PRED
+     ETA  = p[(nPara + (i - 1)*nEta + 1):(nPara + i*nEta)]
+     FGH  = PRED(THETA, ETA) # no EBE estimation
+     Gi   = FGH[, GNames, drop=FALSE]
+     Hi   = FGH[, HNames, drop=FALSE] # always INTER==TRUE
+     Ri   = DATA[DATA$ID == cID, "DV"] - FGH[,"F"]
+     Vi   = diag(Hi %*% SG %*% t(Hi))
+     Hsum = invOM + t(Gi) %*% solve(diag(Vi)) %*% Gi
+     EBE[i, 2:(1+nEta)] <<- ETA
+     EBE[i, (2+nEta)] <<-  sum(log(Vi) + Ri*Ri/Vi) + t(ETA) %*% invOM %*% ETA + Term3 + determinant(Hsum, logarithm=TRUE)$modulus[[1]]
+   }
+   return(sum(EBE[,5]))
+ }
> STEP = "EST"
> OBJ1a(c(rep(0.1, nPara), rep(0, nEta*nID)))
[1] 704.6327
> 
> StartTime = Sys.time()
> r0 = optim(c(rep(0.1, nPara), rep(0, nEta*nID)), OBJ1a, method="L-BFGS-B")
> difftime(Sys.time(), StartTime)
Time difference of 19.06462 secs
> r0
$par
 [1] -0.198420707 -0.332103374 -0.036591232  0.476942665  0.038944671 -1.124822561 -0.005118835  0.080998871 -1.157305201 -0.764268880 -0.045336909 -0.081176943
[13] -0.178378765 -0.299721324  0.341529015  0.053264316  0.054619193  0.430569012  0.047063875 -0.013165238 -0.340492147 -0.042563282  0.019541572 -0.036617850
[25] -0.116969614 -0.079039409 -0.443997821  0.151413284  0.214650631 -0.855217057  0.006795525  0.141972592 -0.033767831  0.083488599  0.062895409  1.371985455
[37]  0.181158405 -0.018582794 -0.702983251 -0.211870271 -0.150221103  0.873920080  0.177658669  0.078867755 -0.506386257 -0.146353344 -0.004184245

$value
[1] 92.19595

$counts
function gradient 
     111      111 

$convergence
[1] 1

$message
[1] "NEW_X"

> OBJ1a(r0$par)
[1] 92.19595
> ### END of Preliminary Fitting
> 
> r1 = s2o(r0$par[1:nPara]) ; r1
$THETA
[1]  1.48397899 32.45768285  0.08723267

$OMEGA
             [,1]       [,2]         [,3]
[1,]  0.425048252 0.05677435 -0.007462344
[2,]  0.056774348 0.02053207  0.010902375
[3,] -0.007462344 0.01090238  0.021851631

$SIGMA
           [,1]       [,2]
[1,] 0.01775438 0.00000000
[2,] 0.00000000 0.07477595

> 
> 
> OBJ1 = function(p)
+ {
+ # External: DATA, nTheta, nEta, nEps
+   if (STEP == "EST") {
+     r = s2o(p)
+     THETA <<- r$THETA     # for ObjEta
+     OM    = r$OMEGA
+     SG    <<- r$SIGMA        # for ObjEta
+   } else {
+     THETA <<- p[1:nTheta] # for ObjEta
+     OM    = ltv2mat(p[iOM])
+     SG    <<- diag(p[iSG])   # for ObjEta
+   }
+   invOM <<- solve(OM)     # for ObjEta
+   Term3 = determinant(OM, logarithm=TRUE)$modulus[[1]]
+ 
+   for (i in 1:nID) {
+     cID <<- IDs[i] # for PRED
+     Res  = optim(EBE[i,2:(nEta+1)], ObjEta, method="BFGS")
+     FGH  = PRED(THETA, Res$par)
+     Gi   = FGH[, GNames, drop=FALSE]
+     Hi   = FGH[, HNames, drop=FALSE]
+     Vi   = diag(Hi %*% SG %*% t(Hi))
+     Hsum = invOM + t(Gi) %*% solve(diag(Vi)) %*% Gi
+     EBE[i, 2:(1 + nEta)] <<- Res$par
+     EBE[i, (2 + nEta)] <<-  Res$value + Term3 + determinant(Hsum, logarithm=TRUE)$modulus[[1]]
+   }
+   return(sum(EBE[,5]))
+ }
> STEP = "EST"
> OBJ1(r0$par[1:nPara])
[1] 92.26438
> 
> StartTime = Sys.time()
> r0 = optim(r0$par[1:nPara], OBJ1, method="L-BFGS-B")
> difftime(Sys.time(), StartTime)
Time difference of 1.456037 mins
> r0
$par
 [1] -0.195276648 -0.331969341 -0.035832978  0.489952425  0.038719394 -1.157441650 -0.004477226  0.089135781 -1.368911340 -0.768731746 -0.023780298

$value
[1] 92.21518

$counts
function gradient 
      63       63 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> OBJ1(r0$par)
[1] 92.21518
> 
> r1 = s2o(r0$par) ; r1
$THETA
[1]  1.48865205 32.46203338  0.08729884

$OMEGA
             [,1]       [,2]         [,3]
[1,]  0.436252942 0.05718508 -0.006612463
[2,]  0.057185080 0.01962681  0.011807468
[3,] -0.006612463 0.01180747  0.020406335

$SIGMA
           [,1]       [,2]
[1,] 0.01759662 0.00000000
[2,] 0.00000000 0.07807029

> 
> ## COV STEP
> STEP = "COV"
> p = c(r1$THETA, r1$OMEGA[upper.tri(r1$OMEGA, diag=TRUE)], diag(r1$SIGMA))
> OBJ1(p)
[1] 92.21519
> 
> require(numDeriv)
Loading required package: numDeriv
> Rmat = hessian(OBJ1, p)/2 ; Rmat
             [,1]        [,2]        [,3]         [,4]         [,5]        [,6]         [,7]         [,8]         [,9]       [,10]         [,11]
 [1,]  19.3875698  -2.2539467   229.21671   -0.3262344   -17.758600    20.07938   -20.261508   -27.127819   -14.845097   100.05576    -8.5415724
 [2,]  -2.2539467   0.6753218   -34.60504   -0.5354217     6.013072   -11.58198    -4.197480     3.797974     1.597361   -28.30188    -0.8257649
 [3,] 229.2167105 -34.6050398 43492.20722  148.9108617 -1539.932802  2164.52664   161.283444  -812.780003 -1114.509897  2850.37244   -59.6789037
 [4,]  -0.3262344  -0.5354217   148.91086   71.4000816  -366.161001   347.49683     5.920609  -275.520080    29.144076   140.85807    -0.1064240
 [5,] -17.7586004   6.0130717 -1539.93280 -366.1610010  3338.018090 -5315.91210 -1255.676942  1508.649392  -656.934396 -2044.09010  -451.8527656
 [6,]  20.0793759 -11.5819752  2164.52664  347.4968306 -5315.912101 18460.93705 -2065.996448 -3941.739578  -184.935525  4905.63308   100.2422681
 [7,] -20.2615081  -4.1974799   161.28344    5.9206093 -1255.676942 -2065.99645 13798.636967 -2621.782489  -923.373835 -1310.80462 -1560.3943188
 [8,] -27.1278187   3.7979744  -812.78000 -275.5200801  1508.649392 -3941.73958 -2621.782489 23935.799230 -5232.380084 -8362.79121 -1994.5295452
 [9,] -14.8450973   1.5973610 -1114.50990   29.1440760  -656.934396  -184.93553  -923.373835 -5232.380084  7004.561122  2231.98146  -276.3782999
[10,] 100.0557580 -28.3018809  2850.37244  140.8580746 -2044.090096  4905.63308 -1310.804621 -8362.791209  2231.981464 88908.65842  5893.9151353
[11,]  -8.5415724  -0.8257649   -59.67890   -0.1064240  -451.852766   100.24227 -1560.394319 -1994.529545  -276.378300  5893.91514  1333.3556571
> 
> OiS1 = function(p)
+ {
+   THETA <<- p[1:nTheta]  # for ObjEta
+   OM    = ltv2mat(p[iOM])
+   invOM <<- solve(OM)    # for ObjEta
+   SG    <<- diag(p[iSG]) # for ObjEta
+ 
+   Res  = optim(EBE[EBE[,"ID"]==cID, 2:(nEta+1)], ObjEta, method="BFGS")
+   FGH  = PRED(THETA, Res$par)
+   Gi   = FGH[, GNames, drop=FALSE]
+   Hi   = FGH[, HNames, drop=FALSE]
+   Vi   = diag(Hi %*% SG %*% t(Hi))
+   Hsum = invOM + t(Gi) %*% solve(diag(Vi)) %*% Gi
+   return(Res$value + determinant(OM, logarithm=TRUE)$modulus[[1]] + determinant(Hsum, logarithm=TRUE)$modulus[[1]])
+ }
> 
> CalcSmat = function(p)
+ {
+   Smat = matrix(rep(0, nPara*nPara), nrow=nPara, ncol=nPara)
+   for (i in 1:nID) {
+     cID <<- IDs[i] # for PRED
+     gr = grad(OiS1, p)
+     Smat = Smat + gr %*% t(gr)
+   }
+   return(Smat/4)
+ }
> 
> Smat = CalcSmat(p) ; Smat
             [,1]         [,2]         [,3]        [,4]        [,5]        [,6]        [,7]         [,8]          [,9]       [,10]        [,11]
 [1,]   18.822969   -2.3719442    215.16015   -4.152861   140.30294  -299.99382   19.897928    -62.86737    -62.641826    357.4026   -34.102919
 [2,]   -2.371944    0.6631114    -33.16395    3.072463   -26.28493    31.21475   -5.451991     35.46803      1.190468   -138.4789    -7.508585
 [3,]  215.160146  -33.1639478  40332.44219  298.103447 -2265.80507  8515.57944 -824.008059  -5814.07703 -16247.181199  31764.5411 -6383.907880
 [4,]   -4.152861    3.0724627    298.10345   44.060767  -193.99576   248.18481  -51.236155    227.50191   -241.854035   -876.5947  -150.936257
 [5,]  140.302937  -26.2849311  -2265.80507 -193.995758  2585.70170 -5779.68564  379.536534   -136.60531    976.281093  -4639.6174   115.587894
 [6,] -299.993819   31.2147530   8515.57944  248.184807 -5779.68564 17538.91746 -651.339584  -3385.36097  -2258.491614  17546.9813   148.435985
 [7,]   19.897928   -5.4519907   -824.00806  -51.236155   379.53653  -651.33958  141.735432   -217.48590    618.369506   1271.7122   291.627636
 [8,]  -62.867367   35.4680328  -5814.07703  227.501905  -136.60531 -3385.36097 -217.485898   6834.84220   -976.649199 -22483.8033 -1823.899804
 [9,]  -62.641826    1.1904679 -16247.18120 -241.854035   976.28109 -2258.49161  618.369506   -976.64920   9384.893324  -1998.9869  4545.673398
[10,]  357.402642 -138.4789356  31764.54113 -876.594687 -4639.61736 17546.98131 1271.712217 -22483.80329  -1998.986885 269837.5280 10786.189718
[11,]  -34.102919   -7.5085851  -6383.90788 -150.936257   115.58789   148.43599  291.627636  -1823.89980   4545.673398  10786.1897  2995.862465
> invR = solve(Rmat) ; invR
               [,1]          [,2]          [,3]          [,4]          [,5]          [,6]          [,7]          [,8]          [,9]        [,10]         [,11]
 [1,]  0.0774899372  0.2530890144 -2.889945e-04 -1.310829e-02 -3.616360e-03 -9.143694e-04 -7.539212e-04 -5.147554e-04 -9.018895e-04 1.556629e-04 -3.044952e-03
 [2,]  0.2530890144  2.4062751224  2.337539e-04 -3.604222e-02 -1.156290e-02 -2.161372e-03 -1.704382e-03 -1.417444e-03 -2.917741e-03 9.251788e-04 -9.446187e-03
 [3,] -0.0002889945  0.0002337539  2.479102e-05 -9.102505e-05 -1.046308e-05 -4.774784e-06 -4.336630e-06 -2.320877e-06 -4.732725e-07 4.611227e-07 -1.447423e-05
 [4,] -0.0131082938 -0.0360422174 -9.102505e-05  4.518982e-04 -3.244190e-03 -1.374726e-03 -1.463191e-03 -9.244497e-04 -1.605611e-03 3.382343e-04 -6.029509e-03
 [5,] -0.0036163597 -0.0115629036 -1.046308e-05 -3.244190e-03 -6.631968e-04 -2.368558e-04 -3.246469e-04 -2.420894e-04 -3.655074e-04 7.821589e-05 -1.401561e-03
 [6,] -0.0009143694 -0.0021613723 -4.774784e-06 -1.374726e-03 -2.368558e-04 -1.317629e-05 -8.198103e-05 -5.763496e-05 -9.318917e-05 1.806714e-05 -3.681301e-04
 [7,] -0.0007539212 -0.0017043824 -4.336630e-06 -1.463191e-03 -3.246469e-04 -8.198103e-05 -1.744148e-05 -5.001423e-05 -8.509033e-05 1.665501e-05 -2.965353e-04
 [8,] -0.0005147554 -0.0014174440 -2.320877e-06 -9.244497e-04 -2.420894e-04 -5.763496e-05 -5.001423e-05  1.397198e-05 -2.884808e-05 1.260776e-05 -1.814009e-04
 [9,] -0.0009018895 -0.0029177410 -4.732725e-07 -1.605611e-03 -3.655074e-04 -9.318917e-05 -8.509033e-05 -2.884808e-05  6.106039e-05 1.522724e-05 -3.219780e-04
[10,]  0.0001556629  0.0009251788  4.611227e-07  3.382343e-04  7.821589e-05  1.806714e-05  1.665501e-05  1.260776e-05  1.522724e-05 1.151516e-05  1.737131e-05
[11,] -0.0030449516 -0.0094461871 -1.447423e-05 -6.029509e-03 -1.401561e-03 -3.681301e-04 -2.965353e-04 -1.814009e-04 -3.219780e-04 1.737131e-05 -4.856963e-04
> Cov = invR %*% Smat %*% invR ; Cov
              [,1]         [,2]          [,3]          [,4]          [,5]          [,6]          [,7]          [,8]         [,9]         [,10]         [,11]
 [1,] 1.079407e-01  0.402761996  7.928086e-04  0.1030729570  2.036088e-02  4.313886e-03  3.890230e-03  2.207466e-03 1.294875e-03  5.179028e-05  6.381714e-03
 [2,] 4.027620e-01  3.118471088  3.954180e-03  0.4795335118  8.182133e-02  2.353044e-02  1.913977e-02  1.399349e-02 9.702841e-03 -1.163627e-03  4.074477e-02
 [3,] 7.928086e-04  0.003954180  2.746468e-05  0.0019709339  4.572411e-04  1.293300e-04  9.815671e-05  4.948554e-05 4.115739e-05 -2.461254e-06  2.305145e-04
 [4,] 1.030730e-01  0.479533512  1.970934e-03  0.1922529585  4.139760e-02  1.080872e-02  8.675657e-03  4.873049e-03 3.571994e-03 -3.365813e-04  1.909579e-02
 [5,] 2.036088e-02  0.081821328  4.572411e-04  0.0413975987  9.527650e-03  2.530993e-03  2.027085e-03  1.088229e-03 8.941644e-04 -4.107103e-05  4.599121e-03
 [6,] 4.313886e-03  0.023530442  1.293300e-04  0.0108087155  2.530993e-03  7.393653e-04  5.640367e-04  3.094355e-04 2.679546e-04 -1.227543e-05  1.338008e-03
 [7,] 3.890230e-03  0.019139770  9.815671e-05  0.0086756573  2.027085e-03  5.640367e-04  4.528617e-04  2.531707e-04 2.237611e-04 -4.392451e-06  1.081859e-03
 [8,] 2.207466e-03  0.013993491  4.948554e-05  0.0048730490  1.088229e-03  3.094355e-04  2.531707e-04  1.562061e-04 1.348397e-04 -2.932859e-06  6.173023e-04
 [9,] 1.294875e-03  0.009702841  4.115739e-05  0.0035719941  8.941644e-04  2.679546e-04  2.237611e-04  1.348397e-04 1.440455e-04  2.746940e-06  5.908038e-04
[10,] 5.179028e-05 -0.001163627 -2.461254e-06 -0.0003365813 -4.107103e-05 -1.227543e-05 -4.392451e-06 -2.932859e-06 2.746940e-06  3.064949e-05 -2.836484e-05
[11,] 6.381714e-03  0.040744770  2.305145e-04  0.0190957909  4.599121e-03  1.338008e-03  1.081859e-03  6.173023e-04 5.908038e-04 -2.836484e-05  2.828521e-03
> SE = sqrt(diag(Cov)) ; SE
 [1] 0.328543263 1.765919332 0.005240675 0.438466599 0.097609681 0.027191273 0.021280548 0.012498245 0.012001895 0.005536198 0.053183838
> Correl = cov2cor(Cov) ; Correl
            [,1]       [,2]       [,3]       [,4]        [,5]        [,6]        [,7]        [,8]       [,9]       [,10]       [,11]
 [1,] 1.00000000  0.6942007  0.4604564  0.7155099  0.63490830  0.48288811  0.55641638  0.53759144 0.32838650  0.02847371  0.36522889
 [2,] 0.69420072  1.0000000  0.4272660  0.6193150  0.47468200  0.49003792  0.50931098  0.63402470 0.45780255 -0.11902308  0.43383175
 [3,] 0.46045641  0.4272660  1.0000000  0.8577254  0.89385105  0.90757506  0.88013628  0.75551323 0.65435096 -0.08483160  0.82704915
 [4,] 0.71550991  0.6193150  0.8577254  1.0000000  0.96726560  0.90658397  0.92978613  0.88923230 0.67877273 -0.13865703  0.81888225
 [5,] 0.63490830  0.4746820  0.8938510  0.9672656  1.00000000  0.95360482  0.97587959  0.89202762 0.76326376 -0.07600306  0.88593576
 [6,] 0.48288811  0.4900379  0.9075751  0.9065840  0.95360482  1.00000000  0.97475393  0.91052446 0.82107305 -0.08154467  0.92522988
 [7,] 0.55641638  0.5093110  0.8801363  0.9297861  0.97587959  0.97475393  1.00000000  0.95187883 0.87609637 -0.03728314  0.95589097
 [8,] 0.53759144  0.6340247  0.7555132  0.8892323  0.89202762  0.91052446  0.95187883  1.00000000 0.89891526 -0.04238679  0.92868655
 [9,] 0.32838650  0.4578025  0.6543510  0.6787727  0.76326376  0.82107305  0.87609637  0.89891526 1.00000000  0.04134164  0.92557965
[10,] 0.02847371 -0.1190231 -0.0848316 -0.1386570 -0.07600306 -0.08154467 -0.03728314 -0.04238679 0.04134164  1.00000000 -0.09633609
[11,] 0.36522889  0.4338317  0.8270491  0.8188823  0.88593576  0.92522988  0.95589097  0.92868655 0.92557965 -0.09633609  1.00000000
> InvCov = Rmat %*% solve(Smat) %*% Rmat ; InvCov
              [,1]        [,2]          [,3]         [,4]          [,5]          [,6]          [,7]          [,8]          [,9]         [,10]         [,11]
 [1,]    169.32467  -22.872641     5743.5440     58.38885     1421.4042     4721.1591   -26915.4657  7.277823e+03     6232.1986  1.841468e+03  1.963786e+03
 [2,]    -22.87264    6.233360     -680.8053    -57.67070      366.8454     -436.4700      497.5364 -1.021267e+01     -823.5429  4.920609e+01  1.065952e+00
 [3,]   5743.54397 -680.805272   736633.0673  -7966.24089   172817.8071   161778.1913 -1770330.5561  7.181642e+05   352393.5123  9.066160e+04  8.076052e+04
 [4,]     58.38885  -57.670698    -7966.2409   1279.01448   -11251.3721     -717.1716    50957.7562 -2.722824e+04     4361.6167 -2.846468e+03 -3.140503e+03
 [5,]   1421.40422  366.845394   172817.8071 -11251.37209   201779.5710   135888.1884 -1513436.8899  4.613295e+05   189773.1591  1.302457e+05  1.008628e+05
 [6,]   4721.15915 -436.469988   161778.1913   -717.17157   135888.1884   241487.4193 -1571627.8700  3.642851e+05   314400.2954  1.421455e+05  1.094808e+05
 [7,] -26915.46574  497.536409 -1770330.5561  50957.75616 -1513436.8899 -1571627.8700 13850586.0087 -3.789127e+06 -2323105.8084 -1.214596e+06 -9.395265e+05
 [8,]   7277.82326  -10.212671   718164.1668 -27228.24172   461329.5001   364285.1373 -3789126.5822  1.423714e+06   468514.5280  2.741718e+05  2.300352e+05
 [9,]   6232.19858 -823.542858   352393.5123   4361.61672   189773.1591   314400.2954 -2323105.8084  4.685145e+05   635910.1187  1.970518e+05  1.377939e+05
[10,]   1841.46840   49.206089    90661.5967  -2846.46842   130245.6711   142145.4691 -1214596.1749  2.741718e+05   197051.7516  1.595494e+05  9.311402e+04
[11,]   1963.78552    1.065952    80760.5239  -3140.50280   100862.8491   109480.7714  -939526.4564  2.300352e+05   137793.8852  9.311402e+04  7.603902e+04
> EigenVal = sort(eigen(Correl)$values) ; EigenVal # Sorted Eigenvalues
 [1] 0.0001176097 0.0018574319 0.0125885068 0.0204849822 0.0413248050 0.1010161938 0.2474589241 0.5598582699 1.0250308967 1.1448367689 7.8454256110
> 
> ## EBE
> EBE
      ID        ETA1         ETA2        ETA3        Oi
 [1,]  1 -0.10256085 -0.190982552 -0.28411241 20.154278
 [2,]  2  0.32990345  0.054931337  0.04702787 17.627401
 [3,]  3  0.41181515  0.043553641 -0.01209834 -1.380024
 [4,]  4 -0.34473091 -0.042649496  0.01657244  9.321832
 [5,]  5 -0.03215317 -0.110880980 -0.09181956 20.283676
 [6,]  6 -0.47043656  0.139551080  0.22833482  4.116907
 [7,]  7 -0.85934526  0.003403124  0.14444062  1.253260
 [8,]  8 -0.06243313  0.072278129  0.07530383  3.950278
 [9,]  9  1.33510599  0.177196428 -0.01316978  2.984217
[10,] 10 -0.71176288 -0.214669713 -0.14926232  4.742085
[11,] 11  0.86630606  0.176042463  0.07812507 -2.496232
[12,] 12 -0.50055790 -0.137557247 -0.02294610 11.664224
> 
> ## sdtab
> SqrtInvCov = function(M)
+ {
+   EigenResult = eigen(as.matrix(M))
+   EigenVector = EigenResult$vectors
+   EigenValues = abs(EigenResult$values)
+   return(EigenVector %*% diag(1/sqrt(EigenValues)) %*% t(EigenVector))
+ }
> 
> THETA = r1$THETA
> OM = r1$OMEGA
> SG = r1$SIGMA
> tSD = vector()
> for (i in 1:nID) {
+   cID  = IDs[i]
+ 
+   FGH0 = PRED(THETA, rep(0, nEta))
+   G0i  = FGH0[, GNames, drop=FALSE]
+   H0i  = FGH0[, HNames, drop=FALSE]
+   R0i  = DATA[DATA$ID == cID, "DV"] - FGH0[,"F"]
+   C0i  = G0i %*% OM %*% t(G0i) + diag(diag(H0i %*% SG %*% t(H0i)))
+   WRES = SqrtInvCov(C0i) %*% R0i
+ 
+   cEBE = EBE[EBE[,"ID"]==cID, 2:(nEta + 1)]
+   FGH1 = PRED(THETA, cEBE)
+   G1i  = FGH1[, GNames, drop=FALSE]
+   H1i  = FGH1[, HNames, drop=FALSE]
+   R1i  = DATA[DATA$ID == cID, "DV"] - FGH1[,"F"]
+   C1i  = G1i %*% OM %*% t(G1i) + diag(diag(H1i %*% SG %*% t(H1i)))
+   CWRES = SqrtInvCov(C1i) %*% (R1i + G1i %*% cEBE)
+ 
+   tSD = rbind(tSD, cbind(DATA[DATA$ID == cID, c("ID", "TIME", "DV")], PRED=FGH0[,"F"], RES=R0i, WRES, CIPREDI=FGH1[,"F"], CIRESI=R1i, CWRES, G1i, H1i))
+ } ; tSD
    ID  TIME    DV     PRED         RES         WRES    CIPREDI       CIRESI       CWRES          G1          G2          G3         H1 H2
1    1  0.00  0.74 0.000000  0.74000000  2.648431960  0.0000000  0.740000000  2.64843196  0.00000000   0.0000000  0.00000000  0.0000000  1
2    1  0.25  2.84 3.028118 -0.18811839 -1.182522244  3.3748146 -0.534814610 -1.07490688  2.83816424  -3.3748146 -0.02919250  3.3748146  1
3    1  0.57  6.57 5.481073  1.08892748  0.439646553  6.2513344  0.318665593  0.40260970  4.14568130  -6.2513344 -0.13115513  6.2513344  1
4    1  1.12 10.50 7.519725  2.98027508  1.824489411  8.8695460  1.630454035  1.57506112  3.73619986  -8.8695460 -0.40168376  8.8695460  1
5    1  2.02  9.66 8.261110  1.39888959  0.049074970 10.1548008 -0.494800797  0.06921715  1.73434964 -10.1548008 -0.93603733 10.1548008  1
6    1  3.82  8.58 7.466725  1.11327452 -0.388187652  9.6867020 -1.106702047 -0.24400454 -0.11803487  -9.6867020 -1.95189898  9.6867020  1
7    1  5.10  8.36 6.703775  1.65622514  0.106633096  8.9601237 -0.600123714  0.15542217 -0.36985709  -8.9601237 -2.54634794  8.9601237  1
8    1  7.03  7.47 5.668468  1.80153163  0.276477786  7.9036195 -0.433619454  0.29204033 -0.39704646  -7.9036195 -3.24495391  7.9036195  1
9    1  9.05  6.89 4.752282  2.13771835  0.829079222  6.9220095 -0.032009507  0.68895998 -0.35514117  -6.9220095 -3.76033965  6.9220095  1
10   1 12.12  5.94 3.635041  2.30495873  1.460937761  5.6575506  0.282449431  1.09987114 -0.29090282  -5.6575506 -4.21466485  5.6575506  1
11   1 24.37  3.28 1.247585  2.03241502  3.421042990  2.5296094  0.750390598  2.38038511 -0.13007649  -2.5296094 -3.92061377  2.5296094  1
12   2  0.00  0.00 0.000000  0.00000000  0.000000000  0.0000000  0.000000000  0.00000000  0.00000000   0.0000000  0.00000000  0.0000000  1
13   2  0.27  1.72 3.221967 -1.50196706 -3.762600215  3.9422880 -2.222288028 -3.02419057  2.93803285  -3.9422880 -0.05301465  3.9422880  1
14   2  0.52  7.91 5.178293  2.73170721  2.975078746  5.9822395  1.927760488  2.79623371  3.30468850  -5.9822395 -0.16631051  5.9822395  1
15   2  1.00  8.31 7.233125  1.07687466  0.702907397  7.6773180  0.632681992  0.76246249  2.19433764  -7.6773180 -0.46017773  7.6773180  1
16   2  1.92  8.33 8.254987  0.07501274  0.121134458  8.0060749  0.323925133  0.13586311  0.35838352  -8.0060749 -1.06856136  8.0060749  1
17   2  3.50  6.85 7.657592 -0.80759175 -0.433620978  7.0800322 -0.230032158 -0.51621728 -0.27695367  -7.0800322 -1.94230437  7.0800322  1
18   2  5.02  6.08 6.750126 -0.67012625 -0.308660494  6.1664812 -0.086481218 -0.39940688 -0.28201540  -6.1664812 -2.54753848  6.1664812  1
19   2  7.03  5.40 5.668468 -0.26846837  0.111755749  5.1307720  0.269227982  0.05975906 -0.23716623  -5.1307720 -3.06319860  5.1307720  1
20   2  9.00  4.55 4.773069 -0.22306935  0.154396533  4.2844720  0.265528012  0.11415694 -0.19810177  -4.2844720 -3.33025164  4.2844720  1
21   2 12.00  3.01 3.673322 -0.66332159 -0.665804045  3.2559698 -0.245969795 -0.76872150 -0.15054787  -3.2559698 -3.42460031  3.2559698  1
22   2 24.30  0.90 1.255232 -0.35523221 -0.618321360  1.0565520 -0.156552006 -0.65206959 -0.04885231  -1.0565520 -2.30039959  1.0565520  1
23   3  0.00  0.00 0.000000  0.00000000  0.000000000  0.0000000  0.000000000  0.00000000  0.00000000   0.0000000  0.00000000  0.0000000  1
24   3  0.27  4.40 3.221967  1.17803294  0.668481856  4.2383638  0.161636217  0.47853307  3.07689281  -4.2383638 -0.05412182  4.2383638  1
25   3  0.58  6.90 5.538611  1.36138904  0.475398433  6.6696808  0.230319225  0.44910511  3.20816995  -6.6696808 -0.20079211  6.6696808  1
26   3  1.02  8.20 7.285708  0.91429155  0.166521616  7.9959950  0.204004962  0.24726894  1.95402873  -7.9959950 -0.47154538  7.9959950  1
27   3  2.02  7.80 8.261110 -0.46111041 -0.497389409  8.1402029 -0.340202947 -0.42089117  0.15091599  -8.1402029 -1.11157721  8.1402029  1
28   3  3.62  7.50 7.586548 -0.08654846  0.157256356  7.1793623  0.320637672  0.16649349 -0.26314297  -7.1793623 -1.95590337  7.1793623  1
29   3  5.08  6.20 6.715339 -0.51533932 -0.261345712  6.3323444 -0.132344414 -0.30657905 -0.25150496  -6.3323444 -2.52179346  6.3323444  1
30   3  7.07  5.30 5.648725 -0.34872508 -0.152730740  5.3337353 -0.033735300 -0.20081067 -0.21286301  -5.3337353 -3.03952687  5.3337353  1
31   3  9.00  4.90 4.773069  0.12693065  0.444539886  4.5158408  0.384159223  0.42443671 -0.18023811  -4.5158408 -3.32514379  4.5158408  1
32   3 12.15  3.70 3.625534  0.07446632  0.350777497  3.4414983  0.258501701  0.32568709 -0.13735876  -3.4414983 -3.46907605  3.4414983  1
33   3 24.17  1.05 1.269559 -0.21955880 -0.628129744  1.2204181 -0.170418114 -0.65284249 -0.04870992  -1.2204181 -2.49542152  1.2204181  1
34   4  0.00  0.00 0.000000  0.00000000  0.000000000  0.0000000  0.000000000  0.00000000  0.00000000   0.0000000  0.00000000  0.0000000  1
35   4  0.35  1.89 3.937361 -2.04736140 -2.097484831  3.1233006 -1.233300644 -2.69454869  2.57930511  -3.1233006 -0.05124095  3.1233006  1
36   4  0.60  4.60 5.650789 -1.05078904 -0.290948197  4.6840656 -0.084065578 -0.43912166  3.34448402  -4.6840656 -0.13670321  4.6840656  1
37   4  1.07  8.60 7.408527  1.19147288  1.694469251  6.5805819  2.019418070  1.88854887  3.49620159  -6.5805819 -0.36536803  6.5805819  1
38   4  2.13  8.38 8.255407  0.12459335  0.058505733  8.1093163  0.270683671  0.10517675  1.92409958  -8.1093163 -1.01252333  8.1093163  1
39   4  3.50  7.54 7.657592 -0.11759175 -0.420007912  7.9529117 -0.412911732 -0.36731415  0.30341103  -7.9529117 -1.82677222  7.9529117  1
40   4  5.02  6.88 6.750126  0.12987375 -0.239267998  7.1376411 -0.257641150 -0.20417571 -0.35732278  -7.1376411 -2.54946424  7.1376411  1
41   4  7.02  5.78 5.673415  0.10658518 -0.259847542  6.0170787 -0.237078719 -0.23620732 -0.50229173  -6.0170787 -3.20041623  6.0170787  1
42   4  9.02  5.33 4.764743  0.56525661  0.427684903  5.0432906  0.286709390  0.40951282 -0.45557218  -5.0432906 -3.57482105  5.0432906  1
43   4 11.98  4.19 3.679741  0.51025928  0.533709839  3.8786662  0.311333786  0.50473795 -0.35598207  -3.8786662 -3.76784478  3.8786662  1
44   4 24.65  1.15 1.217459 -0.06745911 -0.400312819  1.2597853 -0.109785293 -0.41559662 -0.11577272  -1.2597853 -2.64048149  1.2597853  1
45   5  0.00  0.00 0.000000  0.00000000  0.000000000  0.0000000  0.000000000  0.00000000  0.00000000   0.0000000  0.00000000  0.0000000  1
46   5  0.30  2.02 3.501211 -1.48121061 -3.002757710  3.8176818 -1.797681816 -2.81906712  3.04823320  -3.8176818 -0.04870304  3.8176818  1
47   5  0.52  5.63 5.178293  0.45170721  0.193373825  5.6758700 -0.045869957  0.17590725  3.79755823  -5.6758700 -0.13128434  5.6758700  1
48   5  1.00 11.40 7.233125  4.16687466  3.610300588  8.0074865  3.392513529  3.29278287  3.50717025  -8.0074865 -0.38909155  8.0074865  1
49   5  2.02  9.33 8.261110  1.06888959  0.244825088  9.2914812  0.038518781  0.24451026  1.30234610  -9.2914812 -1.05337891  9.2914812  1
50   5  3.50  8.74 7.657592  1.08240825  0.188374591  8.7466991 -0.006699063  0.20224703 -0.13276650  -8.7466991 -1.94750094  8.7466991  1
51   5  5.02  7.56 6.750126  0.80987375 -0.092625932  7.8075741 -0.247574066 -0.04232380 -0.39584112  -7.8075741 -2.66820797  7.8075741  1
52   5  7.02  7.09 5.673415  1.41658518  0.670911271  6.6646523  0.425347688  0.61889667 -0.38497596  -6.6646523 -3.33656498  6.6646523  1
53   5  9.10  5.90 4.731584  1.16841558  0.479947246  5.6476114  0.252388586  0.44646447 -0.32994729  -5.6476114 -3.76272690  5.6476114  1
54   5 12.00  4.37 3.673322  0.69667841 -0.120333875  4.4829463 -0.112946316 -0.07909023 -0.26214232  -4.4829463 -4.02211903  4.4829463  1
55   5 24.35  1.57 1.249765  0.32023486 -0.275975284  1.6765287 -0.106528700 -0.29123526 -0.09803809  -1.6765287 -3.15314721  1.6765287  1
56   6  0.00  0.00 0.000000  0.00000000  0.000000000  0.0000000  0.000000000  0.00000000  0.00000000   0.0000000  0.00000000  0.0000000  1
57   6  0.27  1.29 3.221967 -1.93196706 -1.430193002  1.8747663 -0.584766301 -2.06717624  1.64806985  -1.8747663 -0.02878618  1.8747663  1
58   6  0.58  3.08 5.538611 -2.45861096 -1.103828826  3.4532243 -0.373224269 -1.45693578  2.59546010  -3.4532243 -0.11852693  3.4532243  1
59   6  1.15  6.44 7.581220 -1.14122002  0.366365063  5.2324464  1.207553566  0.77239194  2.86792196  -5.2324464 -0.38115906  5.2324464  1
60   6  2.03  6.32 8.261099 -1.94109937 -0.670495476  6.3082675  0.011732507 -0.68480774  1.93455167  -6.3082675 -0.88881798  6.3082675  1
61   6  3.57  5.53 7.616249 -2.08624943 -1.083792853  6.2192185 -0.689218477 -1.24251695  0.33496207  -6.2192185 -1.74140607  6.2192185  1
62   6  5.00  4.94 6.761753 -1.82175269 -0.941931743  5.5237633 -0.583763330 -1.09415821 -0.30646814  -5.5237633 -2.34189010  5.5237633  1
63   6  7.00  4.02 5.683320 -1.66332049 -0.878224186  4.4958225 -0.475822514 -1.03562875 -0.50699143  -4.4958225 -2.86200697  4.4958225  1
64   6  9.22  3.46 4.682278 -1.22227782 -0.389186267  3.5336349 -0.073634865 -0.44370389 -0.45677561  -3.5336349 -3.10310411  3.5336349  1
65   6 12.10  2.78 3.641394 -0.86139350  0.102635609  2.5776700  0.202330028  0.15996795 -0.34326518  -2.5776700 -3.07674093  2.5776700  1
66   6 23.85  0.92 1.305525 -0.38552475  0.601432837  0.7103904  0.209609569  0.54239065 -0.09499269  -0.7103904 -1.76349001  0.7103904  1
67   7  0.00  0.15 0.000000  0.15000000  0.536844316  0.0000000  0.150000000  0.53684432  0.00000000   0.0000000  0.00000000  0.0000000  1
68   7  0.25  0.85 3.028118 -2.17811839 -1.135032623  1.4139763 -0.563976318 -2.17559455  1.30502046  -1.4139763 -0.01822069  1.4139763  1
69   7  0.50  2.35 5.049853 -2.69985254 -0.868296298  2.5865875 -0.236587488 -1.32216765  2.19693597  -2.5865875 -0.06809828  2.5865875  1
70   7  1.02  5.02 7.285708 -2.26570845 -0.494906322  4.4034044  0.616595604 -0.05520903  3.11460446  -4.4034044 -0.24680592  4.4034044  1
71   7  2.02  6.58 8.261110 -1.68111041 -0.847013829  6.2661302  0.313869824 -0.54442584  2.97470498  -6.2661302 -0.75003130  6.2661302  1
72   7  3.48  7.09 7.669345 -0.57934539 -0.405755005  6.9292693  0.160730709 -0.36264481  1.54093329  -6.9292693 -1.57003046  6.9292693  1
73   7  5.00  6.66 6.761753 -0.10175269 -0.005848506  6.5628631  0.097136857 -0.13792783  0.32663451  -6.5628631 -2.31192426  6.5628631  1
74   7  6.98  5.25 5.693243 -0.44324322 -0.352972741  5.6408839 -0.390883940 -0.55919275 -0.44268887  -5.6408839 -2.99792670  5.6408839  1
75   7  9.00  4.39 4.773069 -0.38306935 -0.236411098  4.6780375 -0.288037479 -0.45085882 -0.66309402  -4.6780375 -3.39198248  4.6780375  1
76   7 12.05  3.53 3.657323 -0.12732270  0.261526582  3.4628848  0.067115225  0.07002526 -0.61501102  -3.4628848 -3.55633462  3.4628848  1
77   7 24.22  1.15 1.264029 -0.11402932  0.405524123  1.0164077  0.133592305  0.30809545 -0.19357768  -1.0164077 -2.28940789  1.0164077  1
78   8  0.00  0.00 0.000000  0.00000000  0.000000000  0.0000000  0.000000000  0.00000000  0.00000000   0.0000000  0.00000000  0.0000000  1
79   8  0.25  3.05 3.028118  0.02188161  0.858079553  2.6723479  0.377652130  0.93465273  2.23051717  -2.6723479 -0.03314830  2.6723479  1
80   8  0.52  3.05 5.178293 -2.12829279 -2.111034203  4.6111812 -1.561181220 -2.31144747  3.12256393  -4.6111812 -0.12550994  4.6111812  1
81   8  0.98  7.31 7.178476  0.13152353  0.740049198  6.4687284  0.841271588  0.83772098  2.95547633  -6.4687284 -0.36025003  6.4687284  1
82   8  2.02  7.56 8.261110 -0.70111041 -0.180720520  7.5465106  0.013489369 -0.17467225  1.10269515  -7.5465106 -1.00117446  7.5465106  1
83   8  3.53  6.59 7.639911 -1.04991080 -0.591837556  6.9819173 -0.391917275 -0.62758239 -0.15544763  -6.9819173 -1.83949557  6.9819173  1
84   8  5.05  5.88 6.732715 -0.85271535 -0.458705785  6.1039024 -0.223902358 -0.48687266 -0.38098023  -6.1039024 -2.46497459  6.1039024  1
85   8  7.15  4.73 5.609442 -0.87944197 -0.569220837  5.0155946 -0.285594584 -0.61093489 -0.35745728  -5.0155946 -3.01390050  5.0155946  1
86   8  9.07  4.57 4.743992 -0.17399192  0.359669323  4.1866906  0.383309404  0.41568020 -0.30172285  -4.1866906 -3.27221419  4.1866906  1
87   8 12.10  3.00 3.641394 -0.64139350 -0.437007445  3.1478322 -0.147832187 -0.46886480 -0.22713832  -3.1478322 -3.35802241  3.1478322  1
88   8 24.12  1.25 1.275112 -0.02511246  0.652038078  1.0154298  0.234570150  0.67942506 -0.07327283  -1.0154298 -2.23209250  1.0154298  1
89   9  0.00  0.00 0.000000  0.00000000  0.000000000  0.0000000  0.000000000  0.00000000  0.00000000   0.0000000  0.00000000  0.0000000  1
90   9  0.30  7.37 3.501211  3.86878939  3.163941935  6.6347181  0.735281925  1.66269815  2.50429953  -6.6347181 -0.10858613  6.6347181  1
91   9  0.63  9.03 5.812023  3.21797720  1.162505227  7.7041989  1.325801119  1.17552132  0.72717268  -7.7041989 -0.31192199  7.7041989  1
92   9  1.05  7.14 7.360844 -0.22084367 -1.689491674  7.6373481 -0.497348114 -0.88085724  0.01294323  -7.6373481 -0.57479817  7.6373481  1
93   9  2.02  6.33 8.261110 -1.93111041 -1.492622803  7.0452238 -0.715223766 -1.16923632 -0.10790666  -7.0452238 -1.11719216  7.0452238  1
94   9  3.53  5.66 7.639911 -1.97991080 -0.755895745  6.1858615 -0.525861466 -0.99335267 -0.09565988  -6.1858615 -1.78566477  6.1858615  1
95   9  5.02  5.67 6.750126 -1.08012625  0.186268548  5.4406190  0.229381028 -0.04551029 -0.08413555  -5.4406190 -2.26896757  5.4406190  1
96   9  7.17  4.24 5.599663 -1.35966345 -0.319833223  4.5206509 -0.280650882 -0.70908663 -0.06990886  -4.5206509 -2.72269322  4.5206509  1
97   9  8.80  4.11 4.857133 -0.74713257  0.329788246  3.9283544  0.181645628  0.05978596 -0.06074939  -3.9283544 -2.91764539  3.9283544  1
98   9 11.60  3.16 3.803858 -0.64385801  0.239444124  3.0863276  0.073672378 -0.04505069 -0.04772800  -3.0863276 -3.03680163  3.0863276  1
99   9 24.43  1.12 1.241067 -0.12106730  0.388273748  1.0218266  0.098173443  0.25598523 -0.01580187  -1.0218266 -2.13494641  1.0218266  1
100 10  0.00  0.24 0.000000  0.24000000  0.858950906  0.0000000  0.240000000  0.85895091  0.00000000   0.0000000  0.00000000  0.0000000  1
101 10  0.37  2.89 4.102081 -1.21208118  0.070307162  2.8523775  0.037622461 -0.21506483  2.48241488  -2.8523775 -0.04128138  2.8523775  1
102 10  0.77  5.22 6.462825 -1.24282540 -0.331480157  5.0937903  0.126209674 -0.18096781  3.78101082  -5.0937903 -0.15981506  5.0937903  1
103 10  1.02  6.41 7.285708 -0.87570845 -0.346812643  6.1498552  0.260144831 -0.03371941  4.11181880  -6.1498552 -0.26192469  6.1498552  1
104 10  2.05  7.83 8.260760 -0.43075993 -1.216892358  8.6282950 -0.798294995 -0.78805641  3.57204329  -8.6282950 -0.80963933  8.6282950  1
105 10  3.55 10.21 7.628092  2.58190806  0.849824899  9.4109452  0.799054834  0.84508452  1.56077437  -9.4109452 -1.70420266  9.4109452  1
106 10  5.05  9.18 6.732715  2.44728465  0.713252148  8.9763456  0.203654408  0.57427275  0.22561393  -8.9763456 -2.50795822  8.9763456  1
107 10  7.08  8.02 5.643800  2.37620013  0.835065502  7.9204970  0.099502966  0.59032566 -0.50928758  -7.9204970 -3.34907123  7.9204970  1
108 10  9.38  7.14 4.617334  2.52266646  1.389929808  6.7131518  0.426848155  0.95786215 -0.67160817  -6.7131518 -3.97488403  6.7131518  1
109 10 12.10  5.68 3.641394  2.03860650  1.091947747  5.4811842  0.198815781  0.71383808 -0.61142147  -5.4811842 -4.35999822  5.4811842  1
110 10 23.70  2.42 1.322733  1.09726721  0.938473724  2.2920057  0.127994278  0.54783941 -0.26295393  -2.2920057 -3.82163214  2.2920057  1
111 11  0.00  0.00 0.000000  0.00000000  0.000000000  0.0000000  0.000000000  0.00000000  0.00000000   0.0000000  0.00000000  0.0000000  1
112 11  0.25  4.86 3.028118  1.83188161  1.037744752  4.7898550  0.070145019  0.57942874  2.97086159  -4.7898550 -0.06453145  4.7898550  1
113 11  0.50  7.24 5.049853  2.19014746  0.887919357  6.6548994  0.585100555  0.83617366  2.37812307  -6.6548994 -0.20005387  6.6548994  1
114 11  0.98  8.00 7.178476  0.82152353 -0.166286903  7.4780845  0.521915471  0.25349264  0.71258832  -7.4780845 -0.51136812  7.4780845  1
115 11  1.98  6.81 8.260057 -1.45005694 -0.937223126  7.0374492 -0.227449169 -0.69731459 -0.13901163  -7.0374492 -1.12393250  7.0374492  1
116 11  3.60  5.87 7.598444 -1.72844428 -0.553862132  6.0461103 -0.176110289 -0.67169543 -0.16530904  -6.0461103 -1.88893180  6.0461103  1
117 11  5.02  5.22 6.750126 -1.53012625 -0.350853701  5.2876915 -0.067691526 -0.54137265 -0.14484615  -5.2876915 -2.36072720  5.2876915  1
118 11  7.03  4.45 5.668468 -1.21846837 -0.137358002  4.3738899  0.076110125 -0.31371025 -0.11981670  -4.3738899 -2.78260792  4.3738899  1
119 11  9.03  3.62 4.760586 -1.14058585 -0.209711676  3.6214251 -0.001425085 -0.41279193 -0.09920396  -3.6214251 -2.98757148  3.6214251  1
120 11 12.12  2.69 3.635041 -0.94504127 -0.204294679  2.7052507 -0.015250726 -0.40666953 -0.07410662  -2.7052507 -3.02080265  2.7052507  1
121 11 24.08  0.86 1.279573 -0.41957288 -0.142067874  0.8748171 -0.014817086 -0.25738043 -0.02396441  -0.8748171 -1.96447114  0.8748171  1
122 12  0.00  0.00 0.000000  0.00000000  0.000000000  0.0000000  0.000000000  0.00000000  0.00000000   0.0000000  0.00000000  0.0000000  1
123 12  0.25  1.25 3.028118 -1.77811839 -1.818117650  2.2593968 -1.009396761 -2.79332408  2.01320501  -2.2593968 -0.02491583  2.2593968  1
124 12  0.50  3.96 5.049853 -1.08985254 -0.159628076  4.0147935 -0.054793505 -0.57445681  3.17054880  -4.0147935 -0.09144877  4.0147935  1
125 12  1.00  7.82 7.233125  0.58687466  1.045372841  6.4039903  1.416009747  1.09521173  3.90366817  -6.4039903 -0.30998530  6.4039903  1
126 12  2.00  9.72 8.260807  1.45919333  0.769386413  8.4776728  1.242327233  0.84923305  2.82379851  -8.4776728 -0.91205773  8.4776728  1
127 12  3.52  9.75 7.645811  2.10418906  0.926970875  8.7303302  1.019669788  0.93705744  0.74442279  -8.7303302 -1.86687287  8.7303302  1
128 12  5.07  8.57 6.721127  1.84887256  0.730104801  7.9769179  0.593082132  0.72896604 -0.24399240  -7.9769179 -2.67328562  7.9769179  1
129 12  7.07  6.59 5.648725  0.94127492 -0.173896503  6.8129142 -0.222914162 -0.05822105 -0.57628602  -6.8129142 -3.41094790  6.8129142  1
130 12  9.03  6.11 4.760586  1.34941415  0.537862941  5.7780960  0.331904048  0.52587634 -0.57390428  -5.7780960 -3.85104373  5.7780960  1
131 12 12.05  4.57 3.657323  0.91267730  0.159636351  4.4681938  0.101806174  0.17773609 -0.46398359  -4.4681938 -4.12738157  4.4681938  1
132 12 24.15  1.17 1.271777 -0.10177735 -1.425017509  1.5915105 -0.421510501 -1.35350143 -0.16618122  -1.5915105 -3.11303280  1.5915105  1
> 
> 
