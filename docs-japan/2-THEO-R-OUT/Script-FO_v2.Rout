
R version 3.4.2 (2017-09-28) -- "Short Summer"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> DATA = Theoph
> colnames(DATA) = c("ID", "BWT", "DOSE", "TIME", "DV")
> DATA[,"ID"] = as.numeric(as.character(DATA[,"ID"]))
> 
> require(lattice)
Loading required package: lattice
> xyplot(DV ~ TIME | as.factor(ID), data=DATA, type="b")
> 
> ## INIT STEP
> IDs = unique(DATA[,"ID"]) ; IDs
 [1]  1  2  3  4  5  6  7  8  9 10 11 12
> nID = length(IDs) ; nID
[1] 12
> 
> nTheta = 3
> nEta = 3
> nEps = 2
> nPara = nTheta + nEta*(nEta + 1)/2 + nEps ; nPara
[1] 11
> 
> GNames = outer("G", 1:nEta, paste0)[1,] ; GNames
[1] "G1" "G2" "G3"
> HNames = outer("H", 1:nEps, paste0)[1,] ; HNames
[1] "H1" "H2"
> 
> iOM = (nTheta + 1):(nTheta + nEta*(nEta + 1)/2) ; iOM
[1] 4 5 6 7 8 9
> iSG = (nTheta + nEta*(nEta + 1)/2 + 1):(nTheta + nEta*(nEta + 1)/2 + nEps) ; iSG
[1] 10 11
> 
> IE = c(2, 50, 0.1)
> LB = rep(0, nTheta)
> UB = rep(1e6, nTheta)
> 
> alpha = 0.1 - log((IE - LB)/(UB - LB)/(1 - (IE - LB)/(UB - LB))) ; alpha
[1] 13.22236 10.00344 16.21810
> 
> p0 = rep(0.1, nTheta)
> p1 = exp(p0 - alpha)
> p2 = p1/(p1 + 1)*(UB - LB) + LB ; p2
[1]  2.0 50.0  0.1
> 
> OM0 = matrix(c(0.2, 0.1, 0.1, 0.1, 0.2, 0.1, 0.1, 0.1, 0.2), nrow=nEta) ; OM0
     [,1] [,2] [,3]
[1,]  0.2  0.1  0.1
[2,]  0.1  0.2  0.1
[3,]  0.1  0.1  0.2
> SG0 = diag(c(0.1, 0.1)) ; SG0
     [,1] [,2]
[1,]  0.1  0.0
[2,]  0.0  0.1
> 
> EXPP1 = exp(0.1)
> ScaleVar = function(VarMat, dim1)
+ {
+   M1 = chol(VarMat)
+   V1 = diag(M1)
+   M2 = abs(10 * (M1 - diag(V1, nrow=dim1))) + diag(V1/EXPP1, nrow=dim1)
+   return(t(M2))
+ }
> OMscl = ScaleVar(OM0, nEta) ; OMscl
          [,1]     [,2]      [,3]
[1,] 0.4046556 0.000000 0.0000000
[2,] 2.2360680 0.350442 0.0000000
[3,] 2.2360680 1.290994 0.3303999
> SGscl = ScaleVar(SG0, nEps) ; SGscl
          [,1]      [,2]
[1,] 0.2861347 0.0000000
[2,] 0.0000000 0.2861347
> 
> DesclVar = function(mUCP, mSCL)
+ {
+   nRow = dim(mUCP)[1]
+   maT = matrix(nrow=nRow, ncol=nRow)
+ 
+   for (i in 1:nRow) {
+     for (j in 1:nRow) {
+       if (i==j) {
+         maT[i,j] = exp(mUCP[i,j]) * mSCL[i,j]
+       } else if(i > j) {
+         maT[i,j] = mUCP[i,j] * mSCL[i,j]
+       } else {
+         maT[i,j] = 0
+       }
+     }
+   }
+   return(maT %*% t(maT))
+ }
> DesclVar(matrix(rep(0.1, nEta*nEta), nrow=nEta), OMscl)
     [,1] [,2] [,3]
[1,]  0.2  0.1  0.1
[2,]  0.1  0.2  0.1
[3,]  0.1  0.1  0.2
> DesclVar(diag(rep(0.1, nEps)), SGscl)
     [,1] [,2]
[1,]  0.1  0.0
[2,]  0.0  0.1
> 
> ltv2mat = function(vec)
+ {
+   LENGTH = length(vec)
+   DIM = round((sqrt(8*LENGTH+1)-1)/2,0)
+   if (DIM*(DIM+1)/2 != LENGTH) return(NULL)
+   mat = matrix(nrow=DIM, ncol=DIM)
+   for (m in 1:DIM) {
+     for (n in 1:DIM) {
+       k = max(m,n)
+       l = min(m,n)
+       p = k*(k - 1)/2 + l
+       mat[m,n] = vec[p]
+     }
+   }
+   return(mat)
+ }
> 
> s2o = function(p)
+ {
+   p0 = p[1:nTheta]
+   p1 = exp(p0 - alpha)
+   p2 = p1/(p1 + 1)*(UB - LB) + LB
+   OM = DesclVar(ltv2mat(p[iOM]), OMscl)
+   SG = DesclVar(diag(p[iSG]), SGscl)
+   Res = list(p2, OM, SG)
+   names(Res) = c("THETA", "OMEGA", "SIGMA")
+   return(Res)
+ }
> s2o(rep(0.1, nPara))
$THETA
[1]  2.0 50.0  0.1

$OMEGA
     [,1] [,2] [,3]
[1,]  0.2  0.1  0.1
[2,]  0.1  0.2  0.1
[3,]  0.1  0.1  0.2

$SIGMA
     [,1] [,2]
[1,]  0.1  0.0
[2,]  0.0  0.1

> 
> ## EST STEP
> PRED = function(THETA, ETA)
+ {
+ # Extern: DATA[,c("ID", "TIME", "DV")], cID, DOSE 
+   KA   = THETA[1]*exp(ETA[1])
+   V    = THETA[2]*exp(ETA[2])
+   K    = THETA[3]*exp(ETA[3])
+   TIME = DATA[DATA$ID == cID, "TIME"]
+   
+   TERM1 = KA/(KA - K)
+   TERM2 = K /(KA - K)
+   TERM3 = 320/V*TERM1 
+   TERM4 = exp(-K*TIME)
+   TERM5 = exp(-KA*TIME) 
+ 
+   F  = TERM3*(TERM4 - TERM5)
+   G1 = -F*TERM2 + KA*TIME*TERM3*TERM5
+   G2 = -F
+   G3 = F*TERM2 - K*TIME*TERM3*TERM4
+   H1 = F
+   H2 = 1
+   return(cbind(F, G1, G2, G3, H1, H2))
+ }
> 
> OBJ0 = function(p)
+ {
+ # External: DATA, nTheta, nEta, nEps
+   if (STEP == "EST") {
+     r = s2o(p)
+     THETA = r$THETA
+     OM = r$OMEGA
+     SG = r$SIGMA
+   } else {
+     THETA = p[1:nTheta]
+     OM = ltv2mat(p[iOM])
+     SG = diag(p[iSG])
+   }
+ 
+   Oi = vector(length=nID)
+   for (i in 1:nID) {
+     cID <<- IDs[i] # for PRED
+     FGH = PRED(THETA, rep(0, nEta))
+     Fi = FGH[, "F"]
+     Gi = FGH[, GNames]
+     Hi = FGH[, HNames]
+     Ri = DATA[DATA$ID == cID, "DV"] - Fi
+     Ci = Gi %*% OM %*% t(Gi) + diag(diag(Hi %*% SG %*% t(Hi)))
+     Oi[i] = determinant(Ci, logarithm=TRUE)$modulus[[1]] + t(Ri) %*% solve(Ci) %*% Ri
+   }
+   return(sum(Oi))
+ }
> STEP = "EST"
> OBJ0(rep(0.1, nPara))
[1] 141.3076
> 
> StartTime = Sys.time()
> r0 = optim(rep(0.1, nPara), OBJ0, method="L-BFGS-B")
> difftime(Sys.time(), StartTime)
Time difference of 2.90637 secs
> r0
$par
 [1]  0.56041759 -0.16783539  0.14896236  0.99514304  0.05616672 -1.03246853  0.15122721  0.00577673  0.11093646 -0.95689977 -0.20555931

$value
[1] 57.32106

$counts
function gradient 
      74       74 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> OBJ0(r0$par)
[1] 57.32106
> 
> r1 = s2o(r0$par) ; r1
$THETA
[1]  3.1694675 38.2521346  0.1050181

$OMEGA
          [,1]       [,2]       [,3]
[1,] 1.1982332 0.13747849 0.37015671
[2,] 0.1374785 0.03134899 0.04340042
[3,] 0.3701567 0.04340042 0.25068582

$SIGMA
           [,1]       [,2]
[1,] 0.01207782 0.00000000
[2,] 0.00000000 0.05427434

> 
> ## COV STEP
> STEP = "COV"
> p = c(r1$THETA, r1$OMEGA[upper.tri(r1$OMEGA, diag=TRUE)], diag(r1$SIGMA))
> OBJ0(p)
[1] 57.32106
> 
> require(numDeriv)
Loading required package: numDeriv
> Rmat = hessian(OBJ0, p)/2 ; Rmat
             [,1]         [,2]         [,3]         [,4]         [,5]        [,6]        [,7]        [,8]         [,9]        [,10]        [,11]
 [1,]   17.924787   -1.3343223  -162.767653   -4.1309684    21.546406    10.22593  -11.022690    52.30435     7.044855    248.45648    -1.752135
 [2,]   -1.334322    0.5507357    -7.672315    0.1118323    -1.462878   -16.52104    2.984907   -18.24571    -2.233895   -120.79912    -5.205228
 [3,] -162.767653   -7.6723151 34333.363163   86.0269317   433.962389    13.38766  -90.741388   956.48211 -1350.939645  -7033.21248 -1992.414204
 [4,]   -4.130968    0.1118323    86.026932   28.6263099  -177.270132   272.93708  -52.926190   164.31581    24.453696     50.23288     6.012060
 [5,]   21.546406   -1.4628780   433.962389 -177.2701321  1930.445861 -4270.87885  210.709297 -1421.95749   -43.763543  -1013.85669   124.417558
 [6,]   10.225926  -16.5210392    13.387661  272.9370802 -4270.878855 16610.43950 -139.814375  1113.59896    18.726075   4680.60001   -46.029611
 [7,]  -11.022690    2.9849069   -90.741388  -52.9261902   210.709297  -139.81438  213.228948  -555.99366  -151.083274     96.25915   -62.941134
 [8,]   52.304346  -18.2457137   956.482105  164.3158074 -1421.957489  1113.59896 -555.993662  4043.51429   130.794761   -555.76919  -201.267608
 [9,]    7.044855   -2.2338946 -1350.939645   24.4536956   -43.763543    18.72608 -151.083274   130.79476   236.875935    -20.42601    92.656858
[10,]  248.456481 -120.7991176 -7033.212479   50.2328796 -1013.856695  4680.60001   96.259151  -555.76919   -20.426008 192857.05269  6568.909261
[11,]   -1.752135   -5.2052277 -1992.414204    6.0120605   124.417558   -46.02961  -62.941134  -201.26761    92.656858   6568.90926  3974.804411
> 
> OiS0 = function(p)
+ {
+   THETA = p[1:nTheta]
+   OM  = ltv2mat(p[iOM])
+   SG  = diag(p[iSG])
+ 
+   FGH = PRED(THETA, rep(0, nEta))  
+   Fi  = FGH[, "F"]
+   Gi  = FGH[, GNames]
+   Hi  = FGH[, HNames]
+   Ri  = DATA[DATA$ID == cID,"DV"] - Fi
+   Ci  = Gi %*% OM %*% t(Gi) + diag(diag(Hi %*% SG %*% t(Hi)))
+   return(determinant(Ci, logarithm=TRUE)$modulus[[1]] + t(Ri) %*% solve(Ci) %*% Ri)
+ }
> 
> CalcSmat = function(p)
+ {
+   Smat = matrix(rep(0, nPara*nPara), nrow=nPara, ncol=nPara)
+   for (i in 1:nID) {
+     cID <<- IDs[i] # for PRED
+     gr = grad(OiS0, p)
+     Smat = Smat + gr %*% t(gr)
+   }
+   return(Smat/4)
+ }
> 
> Smat = CalcSmat(p) ; Smat
              [,1]         [,2]         [,3]         [,4]        [,5]       [,6]          [,7]         [,8]         [,9]       [,10]        [,11]
 [1,]    78.316509   -4.6468525  -1295.13191   -11.873085   142.72166  -145.8352   -26.7074013     44.37513    13.946014   2039.6480    279.50082
 [2,]    -4.646852    0.7648878     64.36589     2.623533   -28.61925    29.4906     0.2387057     10.76141    -4.404221   -397.4746    -47.31112
 [3,] -1295.131912   64.3658905 183632.39764  -230.636162   840.38206  9000.1030  3794.2770107 -10813.66424 -6396.751451  -4148.0260 -60483.51058
 [4,]   -11.873085    2.6235333   -230.63616    18.368717  -171.71680   291.7796   -19.6869514     84.84179     3.480209  -1170.2797    -22.72923
 [5,]   142.721656  -28.6192548    840.38206  -171.716797  2005.81555 -3809.9541    51.7613856   -765.19107    87.901299   8916.7759    670.78878
 [6,]  -145.835180   29.4905951   9000.10301   291.779621 -3809.95413 12023.2866   188.5688381    667.62858  -711.894535  -3829.1367  -3489.01517
 [7,]   -26.707401    0.2387057   3794.27701   -19.686951    51.76139   188.5688   129.3349734   -292.66398  -155.764409   1796.9713  -1105.92309
 [8,]    44.375129   10.7614126 -10813.66424    84.841787  -765.19107   667.6286  -292.6639768   1121.03184   294.247252 -10631.8776   2773.71155
 [9,]    13.946014   -4.4042212  -6396.75145     3.480209    87.90130  -711.8945  -155.7644085    294.24725   327.282119   1812.2113   2358.45500
[10,]  2039.647975 -397.4745828  -4148.02599 -1170.279742  8916.77591 -3829.1367  1796.9713404 -10631.87756  1812.211295 419517.6549  18067.42664
[11,]   279.500821  -47.3111186 -60483.51058   -22.729234   670.78878 -3489.0152 -1105.9230938   2773.71155  2358.454997  18067.4266  24042.66055
> invR = solve(Rmat) ; invR
               [,1]        [,2]          [,3]         [,4]          [,5]          [,6]         [,7]         [,8]         [,9]         [,10]         [,11]
 [1,]  1.128093e-01 0.212821495  1.701101e-03 0.0629976765 -0.0001367169 -7.123389e-04 0.0450007979 1.996858e-03 2.899991e-02 -5.302516e-06  1.228315e-03
 [2,]  2.128215e-01 7.871040457  4.285942e-03 0.5738863313  0.2083765088  4.581254e-02 0.2403614483 9.753266e-02 1.667687e-01  4.732284e-03  2.726223e-03
 [3,]  1.701101e-03 0.004285942  9.903405e-05 0.0003458230 -0.0001888639 -4.514295e-05 0.0014722030 6.688711e-05 1.369319e-03  1.933695e-06  5.245363e-05
 [4,]  6.299768e-02 0.573886331  3.458230e-04 0.3286772584  0.0454523760  6.523791e-03 0.1018670463 1.541909e-02 3.586211e-02  2.761625e-04  2.097793e-04
 [5,] -1.367169e-04 0.208376509 -1.888639e-04 0.0454523760  0.0121273031  2.350504e-03 0.0102397720 4.091561e-03 2.596496e-03  1.307504e-04 -1.502654e-04
 [6,] -7.123389e-04 0.045812539 -4.514295e-05 0.0065237909  0.0023505042  5.519193e-04 0.0011726093 7.917993e-04 2.390861e-04  2.808629e-05 -3.332693e-05
 [7,]  4.500080e-02 0.240361448  1.472203e-03 0.1018670463  0.0102397720  1.172609e-03 0.0673374468 7.348411e-03 3.913003e-02  1.039152e-04  9.660288e-04
 [8,]  1.996858e-03 0.097532662  6.688711e-05 0.0154190850  0.0040915607  7.917993e-04 0.0073484111 2.137431e-03 3.833604e-03  6.023909e-05  5.558190e-05
 [9,]  2.899991e-02 0.166768659  1.369319e-03 0.0358621118  0.0025964962  2.390861e-04 0.0391300268 3.833604e-03 3.207130e-02  8.633065e-05  7.082678e-04
[10,] -5.302516e-06 0.004732284  1.933695e-06 0.0002761625  0.0001307504  2.808629e-05 0.0001039152 6.023909e-05 8.633065e-05  8.581527e-06 -8.519860e-06
[11,]  1.228315e-03 0.002726223  5.245363e-05 0.0002097793 -0.0001502654 -3.332693e-05 0.0009660288 5.558190e-05 7.082678e-04 -8.519860e-06  3.016709e-04
> Cov = invR %*% Smat %*% invR ; Cov
              [,1]         [,2]          [,3]         [,4]          [,5]          [,6]          [,7]         [,8]          [,9]         [,10]         [,11]
 [1,]  0.410979134  0.339158154  5.746694e-03  0.205808962  2.003773e-03 -2.192524e-03  0.1215890832 9.971100e-04  0.0669924076  1.050012e-03 -4.972900e-03
 [2,]  0.339158154  2.839959187  5.032614e-03  0.337602832  3.490465e-02  1.280481e-02  0.1490893349 2.386563e-02  0.0573261669  1.807747e-03 -9.950377e-03
 [3,]  0.005746694  0.005032614  5.323183e-04  0.001629451 -1.041991e-03 -2.503963e-04  0.0071119003 6.271268e-05  0.0062260963  5.805488e-05 -4.790609e-04
 [4,]  0.205808962  0.337602832  1.629451e-03  0.176918914  1.951490e-02  3.207225e-03  0.0575731489 4.215844e-03  0.0179862554  5.143570e-04 -1.014500e-03
 [5,]  0.002003773  0.034904652 -1.041991e-03  0.019514902  6.756428e-03  1.504690e-03 -0.0101019773 8.584714e-04 -0.0130923870 -7.516774e-05  9.532948e-04
 [6,] -0.002192524  0.012804811 -2.503963e-04  0.003207225  1.504690e-03  3.925540e-04 -0.0028272754 2.326326e-04 -0.0032697940 -2.051326e-05  1.806783e-04
 [7,]  0.121589083  0.149089335  7.111900e-03  0.057573149 -1.010198e-02 -2.827275e-03  0.1157858551 3.116262e-03  0.0940102391  9.767199e-04 -3.860827e-03
 [8,]  0.000997110  0.023865634  6.271268e-05  0.004215844  8.584714e-04  2.326326e-04  0.0031162621 5.314013e-04  0.0018656810  2.786064e-05  2.199601e-04
 [9,]  0.066992408  0.057326167  6.226096e-03  0.017986255 -1.309239e-02 -3.269794e-03  0.0940102391 1.865681e-03  0.0838243353  8.055388e-04 -3.397016e-03
[10,]  0.001050012  0.001807747  5.805488e-05  0.000514357 -7.516774e-05 -2.051326e-05  0.0009767199 2.786064e-05  0.0008055388  1.279440e-05 -2.824858e-05
[11,] -0.004972900 -0.009950377 -4.790609e-04 -0.001014500  9.532948e-04  1.806783e-04 -0.0038608272 2.199601e-04 -0.0033970159 -2.824858e-05  1.029016e-03
> SE = sqrt(diag(Cov)) ; SE
 [1] 0.641076543 1.685217846 0.023072024 0.420617301 0.082197495 0.019812975 0.340273207 0.023052143 0.289524326 0.003576926 0.032078283
> Correl = cov2cor(Cov) ; Correl
             [,1]       [,2]       [,3]        [,4]        [,5]       [,6]       [,7]       [,8]       [,9]      [,10]       [,11]
 [1,]  1.00000000  0.3139325  0.3885281  0.76325079  0.03802594 -0.1726174  0.5573871 0.06747173  0.3609364  0.4579038 -0.24181804
 [2,]  0.31393254  1.0000000  0.1294351  0.47628061  0.25198151  0.3835018  0.2599937 0.61433553  0.1174929  0.2998966 -0.18406549
 [3,]  0.38852814  0.1294351  1.0000000  0.16790691 -0.54943906 -0.5477628  0.9058832 0.11791210  0.9320626  0.7034659 -0.64728262
 [4,]  0.76325079  0.4762806  0.1679069  1.00000000  0.56444374  0.3848509  0.4022584 0.43479661  0.1476959  0.3418751 -0.07518893
 [5,]  0.03802594  0.2519815 -0.5494391  0.56444374  1.00000000  0.9239295 -0.3611770 0.45306023 -0.5501425 -0.2556601  0.36154097
 [6,] -0.17261745  0.3835018 -0.5477628  0.38485092  0.92392947  1.0000000 -0.4193635 0.50934214 -0.5700141 -0.2894510  0.28427924
 [7,]  0.55738714  0.2599937  0.9058832  0.40225838 -0.36117697 -0.4193635  1.0000000 0.39727837  0.9542504  0.8024764 -0.35370524
 [8,]  0.06747173  0.6143355  0.1179121  0.43479661  0.45306023  0.5093421  0.3972784 1.00000000  0.2795381  0.3378857  0.29745511
 [9,]  0.36093637  0.1174929  0.9320626  0.14769594 -0.55014250 -0.5700141  0.9542504 0.27953812  1.0000000  0.7778421 -0.36576437
[10,]  0.45790382  0.2998966  0.7034659  0.34187511 -0.25566007 -0.2894510  0.8024764 0.33788566  0.7778421  1.0000000 -0.24619292
[11,] -0.24181804 -0.1840655 -0.6472826 -0.07518893  0.36154097  0.2842792 -0.3537052 0.29745511 -0.3657644 -0.2461929  1.00000000
> InvCov = Rmat %*% solve(Smat) %*% Rmat ; InvCov
             [,1]         [,2]        [,3]        [,4]        [,5]         [,6]         [,7]        [,8]         [,9]      [,10]       [,11]
 [1,]   106.16085    -68.57396    6449.005    335.8698   -2554.409    -386.8791   -1202.1635   10794.576    -49.38189   11656.77   -1043.115
 [2,]   -68.57396     58.03937   -4878.746   -302.1420    2175.297     570.2227     939.9968   -8973.046     87.68164  -10122.85    1001.746
 [3,]  6449.00518  -4878.74595  589180.813  26966.6056 -188642.064  -66147.1076  -90186.4644  795473.401 -10522.26422  899033.05  -47225.438
 [4,]   335.86981   -302.14199   26966.606   1681.5577  -11681.345   -3404.8906   -5086.8917   47387.233   -442.61274   53311.64   -4879.543
 [5,] -2554.40930   2175.29713 -188642.064 -11681.3454   84767.296   13635.5139   35747.1392 -336778.078   3308.45106 -378718.15   35063.037
 [6,]  -386.87906    570.22269  -66147.108  -3404.8906   13635.514   72186.1476   10923.7505 -116902.684   2827.92041 -138707.41   15687.766
 [7,] -1202.16352    939.99684  -90186.464  -5086.8917   35747.139   10923.7505   16640.0641 -149635.854    965.72201 -166637.08   14275.779
 [8,] 10794.57613  -8973.04619  795473.401  47387.2333 -336778.078 -116902.6837 -149635.8537 1416416.078 -14025.70053 1587796.17 -151936.735
 [9,]   -49.38189     87.68164  -10522.264   -442.6127    3308.451    2827.9204     965.7220  -14025.701    954.65515  -20047.21     935.299
[10,] 11656.77320 -10122.84528  899033.053  53311.6417 -378718.155 -138707.4088 -166637.0773 1587796.173 -20047.21139 2031529.80 -170271.338
[11,] -1043.11500   1001.74635  -47225.438  -4879.5431   35063.037   15687.7656   14275.7792 -151936.735    935.29901 -170271.34   28036.555
> EigenVal = sort(eigen(Correl)$values) ; EigenVal # Sorted Eigenvalues
 [1] 0.0002519304 0.0096729015 0.0108358603 0.0233184647 0.0520725529 0.2982375011 0.5047779153 0.9114702285 1.2088053381 3.2082379615 4.7723193459
> 
> 
> ## POSTHOC ETA (EBE)
> ObjEta = function(ETA)
+ {
+ # External: THETA, invOM, SG, cID, DATA[,"DV"] 
+   FGH = PRED(THETA, ETA)
+   Ri  = DATA[DATA$ID == cID, "DV"] - FGH[,"F"]
+   
+   if (INTER == TRUE) {
+     Hi = FGH[, HNames, drop=FALSE]
+   } else {
+     FGH0 = PRED(THETA, rep(0, nEta))
+     Hi = FGH0[, HNames, drop=FALSE]
+   }
+   
+ ## Slower version
+   Vi = diag(diag(Hi %*% SG %*% t(Hi)))
+   iSum = log(det(Vi)) + t(Ri) %*% solve(Vi) %*% Ri + t(ETA) %*% invOM %*% ETA
+ 
+ ## Faster version
+ #  Vi    = diag(Hi %*% SG %*% t(Hi))
+ #  iSum = sum(log(Vi) + Ri*Ri/Vi) + t(ETA) %*% invOM %*% ETA
+ 
+   return(iSum)
+ }
> 
> INTER = FALSE
> THETA = r1$THETA
> invOM = solve(r1$OMEGA)
> SG = r1$SIGMA
> EBE = cbind(ID=IDs, ETA1=0, ETA2=0, ETA3=0)
> for (i in 1:nID) {
+   cID <<- i
+   EBE[i,2:4] = optim(rep(0, nEta), ObjEta, method="BFGS")$par
+ } ; EBE
      ID       ETA1         ETA2        ETA3
 [1,]  1 -0.6367109 -0.232258352 -0.73648224
 [2,]  2 -0.5895843 -0.153341805 -0.06619115
 [3,]  3 -0.3083755 -0.124816676 -0.21013190
 [4,]  4 -1.0305984 -0.186821177 -0.21195510
 [5,]  5 -0.8235560 -0.302352127 -0.24453948
 [6,]  6 -1.0025271  0.068181532 -0.08745089
 [7,]  7 -1.4316285 -0.097903076 -0.13802639
 [8,]  8 -0.7541785 -0.039239022 -0.19621190
 [9,]  9  0.7875803  0.010757282 -0.19937965
[10,] 10 -1.4555649 -0.369057237 -0.40057581
[11,] 11  0.1541451 -0.005061315 -0.08005791
[12,] 12 -1.2863346 -0.388864841 -0.10134440
> 
> ## sdtab
> SqrtInvCov = function(M)
+ {
+   EigenResult = eigen(as.matrix(M))
+   EigenVector = EigenResult$vectors
+   EigenValues = abs(EigenResult$values)
+   return(EigenVector %*% diag(1/sqrt(EigenValues)) %*% t(EigenVector))
+ }
> 
> OM = r1$OMEGA 
> tSD = vector()
> for (i in 1:nID) {
+   cID = IDs[i]
+   FGH0 = PRED(THETA, rep(0, nEta))
+   G0i  = FGH0[, GNames]
+   H0i  = FGH0[, HNames]
+   R0i  = DATA[DATA$ID == cID, "DV"] - FGH0[,"F"]
+   C0i  = G0i %*% OM %*% t(G0i) + diag(diag(H0i %*% SG %*% t(H0i)))
+   WRES = SqrtInvCov(C0i) %*% R0i
+ 
+   tSD = rbind(tSD, cbind(DATA[DATA$ID == cID, c("ID", "TIME", "DV")], PRED=FGH0[,"F"], RES=R0i, WRES, G0i, H0i))
+ } ; tSD
    ID  TIME    DV      PRED         RES        WRES          G1         G2          G3        H1 H2
1    1  0.00  0.74 0.0000000  0.74000000  3.17639455  0.00000000  0.0000000  0.00000000 0.0000000  1
2    1  0.25  2.84 4.5105405 -1.67054054 -0.14108575  2.94951176 -4.5105405 -0.06669849 4.5105405  1
3    1  0.57  6.57 6.7287024 -0.15870243  0.45368379  2.33622283 -6.7287024 -0.25724046 6.7287024  1
4    1  1.12 10.50 7.4435438  3.05645624  1.99836791  0.62732513 -7.4435438 -0.64966087 7.4435438  1
5    1  2.02  9.66 6.9840518  2.67594820  0.36140614 -0.14751482 -6.9840518 -1.24527303 6.9840518  1
6    1  3.82  8.58 5.7929403  2.78705968 -0.21284418 -0.19794481 -5.7929403 -2.12544472 5.7929403  1
7    1  5.10  8.36 5.0643456  3.29565442  0.25741090 -0.17354078 -5.0643456 -2.53887039 5.0643456  1
8    1  7.03  7.47 4.1352186  3.33478141  0.06680025 -0.14171309 -4.1352186 -2.91122412 4.1352186  1
9    1  9.05  6.89 3.3447892  3.54521082  0.52962876 -0.11462527 -3.3447892 -3.06430799 3.3447892  1
10   1 12.12  5.94 2.4229799  3.51702008  1.08980251 -0.08303505 -2.4229799 -3.00098020 2.4229799  1
11   1 24.37  3.28 0.6693332  2.61066684  3.82053288 -0.02293792 -0.6693332 -1.69008018 0.6693332  1
12   2  0.00  0.00 0.0000000  0.00000000  0.00000000  0.00000000  0.0000000  0.00000000 0.0000000  1
13   2  0.27  1.72 4.7334772 -3.01347724 -2.90552140  2.98428665 -4.7334772 -0.07625899 4.7334772  1
14   2  0.52  7.91 6.5276262  1.38237375  2.82857260  2.52006524 -6.5276262 -0.22368205 6.5276262  1
15   2  1.00  8.31 7.4260572  0.88394277  0.55102119  0.89798728 -7.4260572 -0.56356727 7.4260572  1
16   2  1.92  8.33 7.0525860  1.27741398  0.23615161 -0.12185959 -7.0525860 -1.18432597 7.0525860  1
17   2  3.50  6.85 5.9908424  0.85915756 -0.39224456 -0.20384452 -5.9908424 -1.99675713 5.9908424  1
18   2  5.02  6.08 5.1070724  0.97292759 -0.17985276 -0.17500143 -5.1070724 -2.51738363 5.1070724  1
19   2  7.03  5.40 4.1352186  1.26478141  0.53454627 -0.14171309 -4.1352186 -2.91122412 4.1352186  1
20   2  9.00  4.55 3.3623985  1.18760146  0.67765825 -0.11522874 -3.3623985 -3.06278506 3.3623985  1
21   2 12.00  3.01 2.4537079  0.55629206 -0.50792168 -0.08408809 -2.4537079 -3.00811632 2.4537079  1
22   2 24.30  0.90 0.6742717  0.22572826 -0.25781773 -0.02310716 -0.6742717 -1.69759344 0.6742717  1
23   3  0.00  0.00 0.0000000  0.00000000  0.00000000  0.00000000  0.0000000  0.00000000 0.0000000  1
24   3  0.27  4.40 4.7334772 -0.33347724  0.16643041  2.98428665 -4.7334772 -0.07625899 4.7334772  1
25   3  0.58  6.90 6.7644741  0.13552586  0.20682134  2.29854527 -6.7644741 -0.26405200 6.7644741  1
26   3  1.02  8.20 7.4320474  0.76795256  0.30303120  0.84862832 -7.4320474 -0.57797238 7.4320474  1
27   3  2.02  7.80 6.9840518  0.81594820 -0.14024708 -0.14751482 -6.9840518 -1.24527303 6.9840518  1
28   3  3.62  7.50 5.9158586  1.58414145  0.73349830 -0.20170265 -5.9158586 -2.04630397 5.9158586  1
29   3  5.08  6.20 5.0749937  1.12500634 -0.02700160 -0.17390486 -5.0749937 -2.53354922 5.0749937  1
30   3  7.07  5.30 4.1178841  1.18211589  0.02356475 -0.14111904 -4.1178841 -2.91631861 4.1178841  1
31   3  9.00  4.90 3.3623985  1.53760146  0.88506577 -0.11522874 -3.3623985 -3.06278506 3.3623985  1
32   3 12.15  3.70 2.4153582  1.28464177  0.64477190 -0.08277385 -2.4153582 -2.99915005 2.4153582  1
33   3 24.17  1.05 0.6835403  0.36645975 -0.72203173 -0.02342479 -0.6835403 -1.71159658 0.6835403  1
34   4  0.00  0.00 0.0000000  0.00000000  0.00000000  0.00000000  0.0000000  0.00000000 0.0000000  1
35   4  0.35  1.89 5.4866030 -3.59660300 -1.16612111  2.97726667 -5.4866030 -0.11852229 5.4866030  1
36   4  0.60  4.60 6.8319391 -2.23193906 -0.71485088  2.22270782 -6.8319391 -0.27776264 6.8319391  1
37   4  1.07  8.60 7.4413541  1.15864592  1.07819715  0.73277077 -7.4413541 -0.61389590 7.4413541  1
38   4  2.13  8.38 6.9078934  1.47210655  0.01836085 -0.16840602 -6.9078934 -1.31074821 6.9078934  1
39   4  3.50  7.54 5.9908424  1.54915756 -0.13888700 -0.20384452 -5.9908424 -1.99675713 5.9908424  1
40   4  5.02  6.88 5.1070724  1.77292759  0.11059912 -0.17500143 -5.1070724 -2.51738363 5.1070724  1
41   4  7.02  5.78 4.1395636  1.64043640 -0.12502285 -0.14186199 -4.1395636 -2.90993575 4.1395636  1
42   4  9.02  5.33 3.3553437  1.97465630  0.76349008 -0.11498697 -3.3553437 -3.06340629 3.3553437  1
43   4 11.98  4.19 2.4588670  1.73113297  0.69510018 -0.08426489 -2.4588670 -3.00927658 2.4588670  1
44   4 24.65  1.15 0.6499379  0.50006207 -0.82689586 -0.02227325 -0.6499379 -1.66021829 0.6499379  1
45   5  0.00  0.00 0.0000000  0.00000000  0.00000000  0.00000000  0.0000000  0.00000000 0.0000000  1
46   5  0.30  2.02 5.0405264 -3.02052641 -1.45580348  3.00626584 -5.0405264 -0.09140013 5.0405264  1
47   5  0.52  5.63 6.5276262 -0.89762625  0.28050029  2.52006524 -6.5276262 -0.22368205 6.5276262  1
48   5  1.00 11.40 7.4260572  3.97394277  3.42639135  0.89798728 -7.4260572 -0.56356727 7.4260572  1
49   5  2.02  9.33 6.9840518  2.34594820 -0.08184149 -0.14751482 -6.9840518 -1.24527303 6.9840518  1
50   5  3.50  8.74 5.9908424  2.74915756  0.25653097 -0.20384452 -5.9908424 -1.99675713 5.9908424  1
51   5  5.02  7.56 5.1070724  2.45292759 -0.16479543 -0.17500143 -5.1070724 -2.51738363 5.1070724  1
52   5  7.02  7.09 4.1395636  2.95043640  0.98243801 -0.14186199 -4.1395636 -2.90993575 4.1395636  1
53   5  9.10  5.90 3.3272720  2.57272796  0.67944886 -0.11402496 -3.3272720 -3.06573096 3.3272720  1
54   5 12.00  4.37 2.4537079  1.91629206 -0.21023213 -0.08408809 -2.4537079 -3.00811632 2.4537079  1
55   5 24.35  1.57 0.6707405  0.89925952  0.03590922 -0.02298614 -0.6707405 -1.69222489 0.6707405  1
56   6  0.00  0.00 0.0000000  0.00000000  0.00000000  0.00000000  0.0000000  0.00000000 0.0000000  1
57   6  0.27  1.29 4.7334772 -3.44347724 -1.04134258  2.98428665 -4.7334772 -0.07625899 4.7334772  1
58   6  0.58  3.08 6.7644741 -3.68447414 -1.83670404  2.29854527 -6.7644741 -0.26405200 6.7644741  1
59   6  1.15  6.44 7.4418947 -1.00189469 -0.17860339  0.56883584 -7.4418947 -0.67102955 7.4418947  1
60   6  2.03  6.32 6.9771535 -0.65715354 -0.55926818 -0.14970280 -6.9771535 -1.25129300 6.9771535  1
61   6  3.57  5.53 5.9469889 -0.41698887 -0.54431104 -0.20260887 -5.9469889 -2.02585006 5.9469889  1
62   6  5.00  4.94 5.1178103 -0.17781031 -0.34962908 -0.17536838 -5.1178103 -2.51192735 5.1178103  1
63   6  7.00  4.02 4.1482673 -0.12826731 -0.46838159 -0.14216026 -4.1482673 -2.90734122 4.1482673  1
64   6  9.22  3.46 3.2856043  0.17439570  0.01681945 -0.11259701 -3.2856043 -3.06874426 3.2856043  1
65   6 12.10  2.78 2.4280744  0.35192560  0.41650942 -0.08320963 -2.4280744 -3.00219013 2.4280744  1
66   6 23.85  0.92 0.7069015  0.21309850  0.20637760 -0.02422538 -0.7069015 -1.74633756 0.7069015  1
67   7  0.00  0.15 0.0000000  0.15000000  0.64386376  0.00000000  0.0000000  0.00000000 0.0000000  1
68   7  0.25  0.85 4.5105405 -3.66054054 -0.48141568  2.94951176 -4.5105405 -0.06669849 4.5105405  1
69   7  0.50  2.35 6.4359054 -4.08590537 -1.65373268  2.59032941 -6.4359054 -0.21052276 6.4359054  1
70   7  1.02  5.02 7.4320474 -2.41204744 -1.84452459  0.84862832 -7.4320474 -0.57797238 7.4320474  1
71   7  2.02  6.58 6.9840518 -0.40405180 -1.02532537 -0.14751482 -6.9840518 -1.24527303 6.9840518  1
72   7  3.48  7.09 6.0034303  1.08656974  0.51273799 -0.20418922 -6.0034303 -1.98834606 6.0034303  1
73   7  5.00  6.66 5.1178103  1.54218969  1.07968419 -0.17536838 -5.1178103 -2.51192735 5.1178103  1
74   7  6.98  5.25 4.1569893  1.09301067  0.16995205 -0.14245916 -4.1569893 -2.90472293 4.1569893  1
75   7  9.00  4.39 3.3623985  1.02760146 -0.06605401 -0.11522874 -3.3623985 -3.06278506 3.3623985  1
76   7 12.05  3.53 2.4408575  1.08914248  0.14387862 -0.08364771 -2.4408575 -3.00517909 2.4408575  1
77   7 24.22  1.15 0.6799605  0.47003954 -0.50294408 -0.02330211 -0.6799605 -1.70620311 0.6799605  1
78   8  0.00  0.00 0.0000000  0.00000000  0.00000000  0.00000000  0.0000000  0.00000000 0.0000000  1
79   8  0.25  3.05 4.5105405 -1.46054054  0.83502189  2.94951176 -4.5105405 -0.06669849 4.5105405  1
80   8  0.52  3.05 6.5276262 -3.47762625 -2.62399662  2.52006524 -6.5276262 -0.22368205 6.5276262  1
81   8  0.98  7.31 7.4186398 -0.10863979  0.30531883  0.94910346 -7.4186398 -0.54914595 7.4186398  1
82   8  2.02  7.56 6.9840518  0.57594820  0.11973580 -0.14751482 -6.9840518 -1.24527303 6.9840518  1
83   8  3.53  6.59 5.9720093  0.61799074 -0.06295213 -0.20332020 -5.9720093 -2.00929121 5.9720093  1
84   8  5.05  5.88 5.0910078  0.78899223  0.07452790 -0.17445234 -5.0910078 -2.52550442 5.0910078  1
85   8  7.15  4.73 4.0834329  0.64656715 -0.30616022 -0.13993841 -4.0834329 -2.92622670 4.0834329  1
86   8  9.07  4.57 3.3377713  1.23222872  0.96630341 -0.11438477 -3.3377713 -3.06488911 3.3377713  1
87   8 12.10  3.00 2.4280744  0.57192560 -0.57486099 -0.08320963 -2.4280744 -3.00219013 2.4280744  1
88   8 24.12  1.25 0.6871389  0.56286110  0.54415825 -0.02354812 -0.6871389 -1.71699954 0.6871389  1
89   9  0.00  0.00 0.0000000  0.00000000  0.00000000  0.00000000  0.0000000  0.00000000 0.0000000  1
90   9  0.30  7.37 5.0405264  2.32947359  0.86221870  3.00626584 -5.0405264 -0.09140013 5.0405264  1
91   9  0.63  9.03 6.9235672  2.10643277  1.26033044  2.10842376 -6.9235672 -0.29852644 6.9235672  1
92   9  1.05  7.14 7.4385514 -0.29855144 -0.69797181  0.77783748 -7.4385514 -0.59954344 7.4385514  1
93   9  2.02  6.33 6.9840518 -0.65405180 -0.60420049 -0.14751482 -6.9840518 -1.24527303 6.9840518  1
94   9  3.53  5.66 5.9720093 -0.31200926 -0.36722916 -0.20332020 -5.9720093 -2.00929121 5.9720093  1
95   9  5.02  5.67 5.1070724  0.56292759  0.79118797 -0.17500143 -5.1070724 -2.51738363 5.1070724  1
96   9  7.17  4.24 4.0748652  0.16513483 -0.13861942 -0.13964480 -4.0748652 -2.92864570 4.0748652  1
97   9  8.80  4.11 3.4337679  0.67623205  0.81073160 -0.11767455 -3.4337679 -3.05567341 3.4337679  1
98   9 11.60  3.16 2.5589770  0.60102303  0.55433638 -0.08769564 -2.5589770 -3.02967505 2.5589770  1
99   9 24.43  1.12 0.6651289  0.45487111  0.60449649 -0.02279384 -0.6651289 -1.68365536 0.6651289  1
100 10  0.00  0.24 0.0000000  0.24000000  1.03018202  0.00000000  0.0000000  0.00000000 0.0000000  1
101 10  0.37  2.89 5.6443647 -2.75436470  0.51894015  2.94720573 -5.6443647 -0.12995286 5.6443647  1
102 10  0.77  5.22 7.2263530 -2.00635301 -1.37883793  1.59191380 -7.2263530 -0.39765807 7.2263530  1
103 10  1.02  6.41 7.4320474 -1.02204744 -1.52092354  0.84862832 -7.4320474 -0.57797238 7.4320474  1
104 10  2.05  7.83 6.9633387  0.86666130 -1.52499552 -0.15389396 -6.9633387 -1.26329226 6.9633387  1
105 10  3.55 10.21 5.9594861  4.25051385  2.22078929 -0.20296618 -5.9594861 -2.01759247 5.9594861  1
106 10  5.05  9.18 5.0910078  4.08899223  1.71681656 -0.17445234 -5.0910078 -2.52550442 5.0910078  1
107 10  7.08  8.02 4.1135619  3.90643814  1.20954026 -0.14097092 -4.1135619 -2.91757754 4.1135619  1
108 10  9.38  7.14 3.2308579  3.90914212  1.34019094 -0.11072087 -3.2308579 -3.07189903 3.2308579  1
109 10 12.10  5.68 2.4280744  3.25192560  0.17291597 -0.08320963 -2.4280744 -3.00219013 2.4280744  1
110 10 23.70  2.42 0.7181253  1.70187471 -0.39657378 -0.02461001 -0.7181253 -1.76275251 0.7181253  1
111 11  0.00  0.00 0.0000000  0.00000000  0.00000000  0.00000000  0.0000000  0.00000000 0.0000000  1
112 11  0.25  4.86 4.5105405  0.34945946 -0.16070337  2.94951176 -4.5105405 -0.06669849 4.5105405  1
113 11  0.50  7.24 6.4359054  0.80409463  0.56633576  2.59032941 -6.4359054 -0.21052276 6.4359054  1
114 11  0.98  8.00 7.4186398  0.58136021  0.46978775  0.94910346 -7.4186398 -0.54914595 7.4186398  1
115 11  1.98  6.81 7.0115733 -0.20157329 -0.34482614 -0.13811021 -7.0115733 -1.22105737 7.0115733  1
116 11  3.60  5.87 5.9282914 -0.05829135 -0.24131385 -0.20206722 -5.9282914 -2.03815490 5.9282914  1
117 11  5.02  5.22 5.1070724  0.11292759 -0.04346666 -0.17500143 -5.1070724 -2.51738363 5.1070724  1
118 11  7.03  4.45 4.1352186  0.31478141  0.28423094 -0.14171309 -4.1352186 -2.91122412 4.1352186  1
119 11  9.03  3.62 3.3518218  0.26817817  0.18736696 -0.11486628 -3.3518218 -3.06371087 3.3518218  1
120 11 12.12  2.69 2.4229799  0.26702008  0.21043402 -0.08303505 -2.4229799 -3.00098020 2.4229799  1
121 11 24.08  0.86 0.6900314  0.16996855  0.20454354 -0.02364724 -0.6900314 -1.72132872 0.6900314  1
122 12  0.00  0.00 0.0000000  0.00000000  0.00000000  0.00000000  0.0000000  0.00000000 0.0000000  1
123 12  0.25  1.25 4.5105405 -3.26054054 -0.25227676  2.94951176 -4.5105405 -0.06669849 4.5105405  1
124 12  0.50  3.96 6.4359054 -2.47590537 -0.61342647  2.59032941 -6.4359054 -0.21052276 6.4359054  1
125 12  1.00  7.82 7.4260572  0.39394277 -0.34566091  0.89798728 -7.4260572 -0.56356727 7.4260572  1
126 12  2.00  9.72 6.9978278  2.72217221  0.48715113 -0.14294628 -6.9978278 -1.23319237 6.9978278  1
127 12  3.52  9.75 5.9782805  3.77171948  1.70477877 -0.20349590 -5.9782805 -2.00512416 5.9782805  1
128 12  5.07  8.57 5.0803261  3.48967390  1.45295275 -0.17408718 -5.0803261 -2.53087604 5.0803261  1
129 12  7.07  6.59 4.1178841  2.47211589 -0.13487890 -0.14111904 -4.1178841 -2.91631861 4.1178841  1
130 12  9.03  6.11 3.3518218  2.75817817  0.82533171 -0.11486628 -3.3518218 -3.06371087 3.3518218  1
131 12 12.05  4.57 2.4408575  2.12914248  0.06599923 -0.08364771 -2.4408575 -3.00517909 2.4408575  1
132 12 24.15  1.17 0.6849774  0.48502256 -1.99982505 -0.02347404 -0.6849774 -1.71375662 0.6849774  1
> 
> 
